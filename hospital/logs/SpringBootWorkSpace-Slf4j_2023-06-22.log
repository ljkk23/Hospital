2023-06-22 15:41:14.180 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:41:14.282 [main] INFO  edu.swu.cs.UserApplication - No active profile set, falling back to default profiles: default
2023-06-22 15:41:14.874 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 15:41:14.875 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 15:41:14.888 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7ms. Found 0 repository interfaces.
2023-06-22 15:41:14.922 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 15:41:14.941 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 15:41:15.039 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=8fadee14-3e67-3619-a278-addf4941a8f7
2023-06-22 15:41:15.139 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:41:15.253 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:41:15.255 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:41:15.256 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@20ab76ee' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:41:15.257 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:41:15.259 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:41:15.289 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:41:15.456 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2023-06-22 15:41:15.461 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2023-06-22 15:41:15.461 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 15:41:15.461 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 15:41:15.509 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-user] - Initializing Spring embedded WebApplicationContext
2023-06-22 15:41:15.509 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1212 ms
2023-06-22 15:41:15.566 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 15:41:15.566 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 15:41:15.570 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5b35c7d
2023-06-22 15:41:16.700 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 15:41:16.760 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 15:41:16.792 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 15:41:16.792 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 15:41:16.841 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 15:41:17.144 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: b444910b-e09a-4b81-9113-a825e414aa2d

2023-06-22 15:41:17.187 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@f01fc6d, org.springframework.security.web.context.SecurityContextPersistenceFilter@49f2646, org.springframework.security.web.header.HeaderWriterFilter@35d88a54, org.springframework.web.filter.CorsFilter@85cd413, edu.swu.cs.filter.JwtAuthenticationTokenFilter@67e77f52, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3275a47f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d7f7962, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@688d2a5d, org.springframework.security.web.session.SessionManagementFilter@5e8bd498, org.springframework.security.web.access.ExceptionTranslationFilter@6d7e2795, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7e76a66f]
2023-06-22 15:41:17.246 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 15:41:17.355 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 15:41:17.369 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 15:41:17.477 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 15:41:17.639 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2023-06-22 15:41:17.649 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path '/service-user'
2023-06-22 15:41:17.655 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-user 192.168.43.47:8082 register finished
2023-06-22 15:41:17.657 [main] INFO  edu.swu.cs.UserApplication - Started UserApplication in 3.907 seconds (JVM running for 4.321)
2023-06-22 15:41:18.056 [RMI TCP Connection(3)-192.168.43.47] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 15:41:18.059 [RMI TCP Connection(2)-192.168.43.47] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-user] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 15:41:18.059 [RMI TCP Connection(2)-192.168.43.47] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 15:41:18.067 [RMI TCP Connection(2)-192.168.43.47] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2023-06-22 15:41:18.073 [RMI TCP Connection(3)-192.168.43.47] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#3ab595c8:0/SimpleConnection@65056a78 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 50500]
2023-06-22 15:41:18.091 [RMI TCP Connection(3)-192.168.43.47] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 15:41:18.156 [RMI TCP Connection(3)-192.168.43.47] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 15:41:18.231 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 15:41:18.232 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 15:48:22.139 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 15:48:22.142 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 15:48:22.144 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 15:48:22.300 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 15:48:22.304 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 15:48:27.070 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:48:27.176 [main] INFO  edu.swu.cs.UserApplication - No active profile set, falling back to default profiles: default
2023-06-22 15:48:27.869 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 15:48:27.870 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 15:48:27.892 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8ms. Found 0 repository interfaces.
2023-06-22 15:48:27.929 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 15:48:27.953 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 15:48:28.058 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=8fadee14-3e67-3619-a278-addf4941a8f7
2023-06-22 15:48:28.165 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:48:28.290 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:48:28.293 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:48:28.295 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3ddb774f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:48:28.300 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:48:28.304 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:48:28.334 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:48:28.512 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2023-06-22 15:48:28.517 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2023-06-22 15:48:28.518 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 15:48:28.518 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 15:48:28.568 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-user] - Initializing Spring embedded WebApplicationContext
2023-06-22 15:48:28.568 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1376 ms
2023-06-22 15:48:28.634 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 15:48:28.634 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 15:48:28.650 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3a38f122
2023-06-22 15:48:29.998 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 15:48:30.069 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 15:48:30.102 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 15:48:30.102 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 15:48:30.152 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 15:48:30.448 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 2119c81e-0cf5-4759-9236-5cad80819707

2023-06-22 15:48:30.495 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6c36051c, org.springframework.security.web.context.SecurityContextPersistenceFilter@73d83141, org.springframework.security.web.header.HeaderWriterFilter@bc52a41, org.springframework.web.filter.CorsFilter@45d46254, edu.swu.cs.filter.JwtAuthenticationTokenFilter@11bfffb3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@683fe7b5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c87787d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@a240452, org.springframework.security.web.session.SessionManagementFilter@4ba13fed, org.springframework.security.web.access.ExceptionTranslationFilter@308c65e0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@236a4d30]
2023-06-22 15:48:30.572 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 15:48:30.694 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 15:48:30.825 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 15:48:30.855 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 15:48:31.061 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2023-06-22 15:48:31.071 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path '/service-user'
2023-06-22 15:48:31.078 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-user 192.168.43.47:8082 register finished
2023-06-22 15:48:31.080 [main] INFO  edu.swu.cs.UserApplication - Started UserApplication in 4.479 seconds (JVM running for 4.964)
2023-06-22 15:48:31.264 [RMI TCP Connection(2)-192.168.43.47] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 15:48:31.267 [RMI TCP Connection(3)-192.168.43.47] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-user] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 15:48:31.267 [RMI TCP Connection(3)-192.168.43.47] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 15:48:31.276 [RMI TCP Connection(3)-192.168.43.47] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2023-06-22 15:48:31.285 [RMI TCP Connection(2)-192.168.43.47] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#72a8361b:0/SimpleConnection@70116b66 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 44926]
2023-06-22 15:48:31.313 [RMI TCP Connection(2)-192.168.43.47] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 15:48:31.395 [RMI TCP Connection(2)-192.168.43.47] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 15:48:31.486 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 15:48:31.487 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 15:55:27.432 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 15:55:27.434 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 15:55:27.436 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 15:55:27.570 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 15:55:27.574 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 15:55:29.704 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:29.866 [main] INFO  edu.swu.cs.ProductApplication - No active profile set, falling back to default profiles: default
2023-06-22 15:55:31.309 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 15:55:31.312 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 15:55:31.316 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:31.336 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14ms. Found 0 repository interfaces.
2023-06-22 15:55:31.406 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 15:55:31.453 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 15:55:31.457 [main] INFO  edu.swu.cs.UserApplication - No active profile set, falling back to default profiles: default
2023-06-22 15:55:31.652 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=511693ec-330e-391b-890e-84a005ffebb9
2023-06-22 15:55:31.801 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:32.005 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:32.276 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8083 (http)
2023-06-22 15:55:32.286 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2023-06-22 15:55:32.287 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 15:55:32.287 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 15:55:32.390 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-product] - Initializing Spring embedded WebApplicationContext
2023-06-22 15:55:32.390 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2504 ms
2023-06-22 15:55:32.441 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 15:55:32.443 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 15:55:32.469 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16ms. Found 0 repository interfaces.
2023-06-22 15:55:32.531 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 15:55:32.531 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 15:55:32.544 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1b4872bc
2023-06-22 15:55:32.564 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 15:55:32.609 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 15:55:32.835 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=8fadee14-3e67-3619-a278-addf4941a8f7
2023-06-22 15:55:33.030 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:33.063 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:33.223 [main] INFO  edu.swu.cs.securityApplication - No active profile set, falling back to default profiles: default
2023-06-22 15:55:33.232 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:33.235 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:33.237 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@22d322f5' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:33.241 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:33.246 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:33.323 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:33.600 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2023-06-22 15:55:33.609 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2023-06-22 15:55:33.609 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 15:55:33.610 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 15:55:33.698 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-user] - Initializing Spring embedded WebApplicationContext
2023-06-22 15:55:33.699 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2219 ms
2023-06-22 15:55:33.829 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 15:55:33.829 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 15:55:33.835 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1d15c0a1
2023-06-22 15:55:33.977 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 15:55:33.979 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 15:55:34.004 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12ms. Found 0 repository interfaces.
2023-06-22 15:55:34.369 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c1871298-cf47-35a1-9b15-5660b38c6b3a
2023-06-22 15:55:34.540 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:34.701 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 15:55:34.724 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:34.733 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:34.887 [main] INFO  edu.swu.cs.WareApplication - No active profile set, falling back to default profiles: default
2023-06-22 15:55:34.909 [redisson-netty-4-11] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 15:55:34.912 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 15:55:35.086 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
2023-06-22 15:55:35.097 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2023-06-22 15:55:35.099 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 15:55:35.100 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 15:55:35.193 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/security-auth] - Initializing Spring embedded WebApplicationContext
2023-06-22 15:55:35.194 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1956 ms
2023-06-22 15:55:35.549 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 15:55:35.700 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 15:55:35.735 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 15:55:35.735 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 15:55:35.827 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 15:55:36.368 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 15:55:36.370 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 15:55:36.398 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15ms. Found 0 repository interfaces.
2023-06-22 15:55:36.439 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 34774586-b19f-4378-bcfb-a1cb89a4a0c2

2023-06-22 15:55:36.495 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 15:55:36.511 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 15:55:36.542 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6d92e327, org.springframework.security.web.context.SecurityContextPersistenceFilter@7c4a03a, org.springframework.security.web.header.HeaderWriterFilter@4e614370, org.springframework.web.filter.CorsFilter@76134251, edu.swu.cs.filter.JwtAuthenticationTokenFilter@2296127, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@38093ffe, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4e4af370, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4177d422, org.springframework.security.web.session.SessionManagementFilter@4a45ca1c, org.springframework.security.web.access.ExceptionTranslationFilter@328e50eb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@442310fd]
2023-06-22 15:55:36.563 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 15:55:36.651 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2023-06-22 15:55:36.654 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 15:55:36.680 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 15:55:36.719 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 15:55:36.719 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 15:55:36.798 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=becd3dfe-a69e-37f4-8283-9e23c7d67413
2023-06-22 15:55:36.813 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 15:55:36.835 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 15:55:36.875 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 15:55:36.875 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 15:55:36.880 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 15:55:36.881 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 15:55:36.906 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 15:55:36.925 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 15:55:36.962 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 15:55:36.972 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 15:55:37.007 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:37.214 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2023-06-22 15:55:37.234 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8083 (http) with context path '/service-product'
2023-06-22 15:55:37.254 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-product 192.168.1.25:8083 register finished
2023-06-22 15:55:37.259 [main] INFO  edu.swu.cs.ProductApplication - Started ProductApplication in 8.242 seconds (JVM running for 8.799)
2023-06-22 15:55:37.348 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:37.357 [RMI TCP Connection(4)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [localhost:5672]
2023-06-22 15:55:37.360 [RMI TCP Connection(5)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-product] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 15:55:37.360 [RMI TCP Connection(5)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 15:55:37.369 [RMI TCP Connection(5)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2023-06-22 15:55:37.384 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 05292a82-d31a-4865-9f8d-526f01a392d9

2023-06-22 15:55:37.388 [RMI TCP Connection(4)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#55846997:0/SimpleConnection@232ab0e7 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 42578]
2023-06-22 15:55:37.424 [RMI TCP Connection(4)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 15:55:37.487 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7612116b, org.springframework.security.web.context.SecurityContextPersistenceFilter@7404aff2, org.springframework.security.web.header.HeaderWriterFilter@58583a2d, org.springframework.web.filter.CorsFilter@1c05097c, edu.swu.cs.filter.JwtAuthenticationTokenFilter@8f39224, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6fc7e828, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@20914835, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@562f6681, org.springframework.security.web.session.SessionManagementFilter@e7d0db2, org.springframework.security.web.access.ExceptionTranslationFilter@38c55a8a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@e1a150c]
2023-06-22 15:55:37.616 [RMI TCP Connection(4)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 15:55:37.644 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6fbe4800, org.springframework.security.web.context.SecurityContextPersistenceFilter@58b8f9e3, org.springframework.security.web.header.HeaderWriterFilter@416b1265, org.springframework.web.filter.CorsFilter@3f3c5ecd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4d8056bf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3f6f9cef, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1179fc8c, org.springframework.security.web.session.SessionManagementFilter@2729bb71, org.springframework.security.web.access.ExceptionTranslationFilter@37a3ec27, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@56f9de3b]
2023-06-22 15:55:37.651 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 15:55:37.712 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8086 (http)
2023-06-22 15:55:37.725 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8086"]
2023-06-22 15:55:37.726 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 15:55:37.728 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 15:55:37.781 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 15:55:37.820 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 15:55:37.823 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 15:55:37.856 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-ware] - Initializing Spring embedded WebApplicationContext
2023-06-22 15:55:37.856 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2949 ms
2023-06-22 15:55:37.953 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 15:55:37.981 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 15:55:38.006 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 15:55:38.023 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 15:55:38.030 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 15:55:38.030 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 15:55:38.040 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@285005b8
2023-06-22 15:55:38.081 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 15:55:38.207 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2023-06-22 15:55:38.233 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path '/security-auth'
2023-06-22 15:55:38.251 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 15:55:38.254 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, security-auth 192.168.1.25:8085 register finished
2023-06-22 15:55:38.258 [main] INFO  edu.swu.cs.securityApplication - Started securityApplication in 5.768 seconds (JVM running for 6.264)
2023-06-22 15:55:38.620 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2023-06-22 15:55:38.686 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path '/service-user'
2023-06-22 15:55:38.712 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-user 192.168.1.25:8082 register finished
2023-06-22 15:55:38.719 [main] INFO  edu.swu.cs.UserApplication - Started UserApplication in 8.051 seconds (JVM running for 8.625)
2023-06-22 15:55:38.906 [RMI TCP Connection(2)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-user] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 15:55:38.906 [RMI TCP Connection(2)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 15:55:38.907 [RMI TCP Connection(3)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 15:55:38.917 [RMI TCP Connection(2)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2023-06-22 15:55:38.944 [RMI TCP Connection(3)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#1291aab5:0/SimpleConnection@6182031b [delegate=amqp://guest@127.0.0.1:5672/, localPort= 42590]
2023-06-22 15:55:38.973 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:38.979 [RMI TCP Connection(3)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 15:55:39.129 [RMI TCP Connection(3)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 15:55:39.154 [main] INFO  edu.swu.cs.OrderApplication - No active profile set, falling back to default profiles: default
2023-06-22 15:55:39.263 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 15:55:39.266 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 15:55:39.652 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 15:55:39.766 [redisson-netty-4-3] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 15:55:39.767 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 15:55:39.993 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 15:55:39.994 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 15:55:40.010 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9ms. Found 0 repository interfaces.
2023-06-22 15:55:40.049 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 15:55:40.056 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 15:55:40.084 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 15:55:40.120 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 15:55:40.147 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 15:55:40.147 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 15:55:40.196 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 15:55:40.211 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=292af892-e9b3-374c-9bee-d96fde00adf6
2023-06-22 15:55:40.349 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:40.520 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 15:55:40.631 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 6eec3d5f-e51d-456e-b860-d986696b538e

2023-06-22 15:55:40.686 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@56a9a7b5, org.springframework.security.web.context.SecurityContextPersistenceFilter@28295554, org.springframework.security.web.header.HeaderWriterFilter@6796a873, org.springframework.web.filter.CorsFilter@1dd247b, edu.swu.cs.filter.JwtAuthenticationTokenFilter@3af36922, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5c930fc3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@787a0fd6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@338270ea, org.springframework.security.web.session.SessionManagementFilter@df432ec, org.springframework.security.web.access.ExceptionTranslationFilter@5d8e4fa8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@516b84d1]
2023-06-22 15:55:40.708 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2023-06-22 15:55:40.713 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2023-06-22 15:55:40.714 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 15:55:40.714 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 15:55:40.768 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 15:55:40.778 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-order] - Initializing Spring embedded WebApplicationContext
2023-06-22 15:55:40.778 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1601 ms
2023-06-22 15:55:40.853 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 15:55:40.853 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 15:55:40.858 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4c531172
2023-06-22 15:55:40.873 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 15:55:40.932 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 15:55:40.949 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 15:55:40.980 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 15:55:41.097 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 15:55:41.117 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#19ae2ee5:0/SimpleConnection@42734b71 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 42592]
2023-06-22 15:55:41.149 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Container initialized for queues: [stock.release.stock.queue]
2023-06-22 15:55:41.154 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  o.s.a.r.listener.DirectMessageListenerContainer - SimpleConsumer [queue=stock.release.stock.queue, consumerTag=amq.ctag-lX6rpWdNsdyHXHHmo6FXjA identity=3ba9a6b6] started
2023-06-22 15:55:41.161 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8086"]
2023-06-22 15:55:41.172 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8086 (http) with context path '/service-ware'
2023-06-22 15:55:41.180 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-ware 192.168.1.25:8086 register finished
2023-06-22 15:55:41.183 [main] INFO  edu.swu.cs.WareApplication - Started WareApplication in 7.108 seconds (JVM running for 7.65)
2023-06-22 15:55:41.363 [RMI TCP Connection(4)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-ware] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 15:55:41.363 [RMI TCP Connection(4)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 15:55:41.364 [RMI TCP Connection(5)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 15:55:41.373 [RMI TCP Connection(4)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2023-06-22 15:55:41.456 [RMI TCP Connection(5)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 15:55:41.550 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 15:55:41.551 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 15:55:42.026 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 15:55:42.119 [redisson-netty-4-28] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 15:55:42.124 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 15:55:42.376 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 15:55:42.518 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 15:55:42.538 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 15:55:42.538 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 15:55:42.581 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 15:55:42.835 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 278f6158-ee7c-44bb-a0f8-6a6089dc5ed3

2023-06-22 15:55:42.880 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@c335b9, org.springframework.security.web.context.SecurityContextPersistenceFilter@53fc870f, org.springframework.security.web.header.HeaderWriterFilter@7b9d1a4, org.springframework.web.filter.CorsFilter@75c8d8e7, edu.swu.cs.filter.JwtAuthenticationTokenFilter@50dc49e1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2d0778d0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7f5e9949, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c68e82, org.springframework.security.web.session.SessionManagementFilter@637506d8, org.springframework.security.web.access.ExceptionTranslationFilter@73852720, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@dd07be8]
2023-06-22 15:55:42.937 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 15:55:43.050 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 15:55:43.063 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 15:55:43.091 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 15:55:43.189 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 15:55:43.204 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#6403a4a5:0/SimpleConnection@4af44f2a [delegate=amqp://guest@127.0.0.1:5672/, localPort= 41636]
2023-06-22 15:55:43.224 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 15:55:44.231 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 15:55:46.241 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 15:55:50.247 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 15:55:55.254 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 15:55:55.259 [main] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Broker not available; cannot force queue declarations during start: java.io.IOException
2023-06-22 15:55:55.316 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2023-06-22 15:55:55.325 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path '/service-order'
2023-06-22 15:55:55.331 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-order 192.168.1.25:8081 register finished
2023-06-22 15:55:55.334 [main] INFO  edu.swu.cs.OrderApplication - Started OrderApplication in 17.141 seconds (JVM running for 17.904)
2023-06-22 15:55:55.800 [RMI TCP Connection(4)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 15:55:55.801 [RMI TCP Connection(5)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-order] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 15:55:55.801 [RMI TCP Connection(5)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 15:55:55.809 [RMI TCP Connection(5)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2023-06-22 15:55:55.898 [RMI TCP Connection(4)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 15:55:55.983 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 15:55:55.984 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 15:56:17.519 [pool-7-thread-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 15:56:17.527 [pool-7-thread-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-product instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-product,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 15:56:17.531 [pool-7-thread-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 15:56:17.538 [pool-7-thread-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 15:56:17.540 [pool-7-thread-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-product initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-product,current list of Servers=[192.168.1.25:8083],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8083;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@7e7f9a6b
2023-06-22 15:56:17.583 [http-nio-8081-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 15:56:17.584 [http-nio-8081-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 15:56:17.585 [http-nio-8081-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 15:56:17.586 [http-nio-8081-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 15:56:17.587 [http-nio-8081-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[192.168.1.25:8082],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8082;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@685cfa9
2023-06-22 15:56:18.534 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 15:56:18.586 [PollingServerListUpdater-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 15:56:22.303 [http-nio-8083-exec-3] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 15:56:22.314 [http-nio-8083-exec-3] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 15:56:22.317 [http-nio-8083-exec-3] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 15:56:22.323 [http-nio-8083-exec-3] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 15:56:22.325 [http-nio-8083-exec-3] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[192.168.1.25:8082],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8082;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@1a494800
2023-06-22 15:56:22.512 [http-nio-8081-exec-2] ERROR o.a.c.c.C.[.[.[/service-order].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-order] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
### The error may exist in edu/swu/cs/mapper/OrderInfoMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT COUNT(*) FROM (SELECT  id,product_id,user_id,patient_id,order_status,create_time,update_by,update_time,del_flag,order_id,type,opinions  FROM order_info   WHERE  del_flag=0  AND (product_id IN () AND order_status = ?)) TOTAL
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy209.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy208.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor.willDoQuery(PaginationInnerInterceptor.java:141)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:75)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy207.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy150.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForIPage(MybatisMapperMethod.java:121)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:85)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy153.selectPage(Unknown Source)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl.getOrderListByDoctorId(OrderInfoServiceImpl.java:198)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$FastClassBySpringCGLIB$$d3709f65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$EnhancerBySpringCGLIB$$c59e6b4c.getOrderListByDoctorId(<generated>)
	at edu.swu.cs.controller.OrderInfoController.getOrderListByDoctorId(OrderInfoController.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 15:56:23.319 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 16:25:02.502 [http-nio-8082-exec-7] WARN  o.s.w.s.m.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'file' is not present]
2023-06-22 16:27:52.548 [http-nio-8082-exec-10] WARN  o.s.w.s.m.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'file' is not present]
2023-06-22 16:28:53.742 [http-nio-8082-exec-4] WARN  o.s.w.s.m.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'file' is not present]
2023-06-22 16:43:33.658 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [createJWT], using SpringBootContextLoader
2023-06-22 16:43:33.665 [main] INFO  o.s.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [createJWT]: no resource found for suffixes {-context.xml, Context.groovy}.
2023-06-22 16:43:33.666 [main] INFO  o.s.t.c.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [createJWT]: createJWT does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2023-06-22 16:47:04.139 [http-nio-8085-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/security-auth] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 16:47:04.139 [http-nio-8085-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 16:47:04.146 [http-nio-8085-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2023-06-22 16:47:04.488 [http-nio-8085-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 16:47:04.496 [http-nio-8085-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 16:47:04.506 [http-nio-8085-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 16:47:04.518 [http-nio-8085-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 16:47:04.520 [http-nio-8085-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[192.168.1.25:8082],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8082;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@536d6cd6
2023-06-22 16:47:04.603 [http-nio-8085-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 16:47:04.685 [http-nio-8085-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 16:47:05.075 [http-nio-8085-exec-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 16:47:05.076 [http-nio-8085-exec-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 16:47:05.509 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 16:47:05.631 [http-nio-8081-exec-3] ERROR o.a.c.c.C.[.[.[/service-order].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-order] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
### The error may exist in edu/swu/cs/mapper/OrderInfoMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT COUNT(*) FROM (SELECT  id,product_id,user_id,patient_id,order_status,create_time,update_by,update_time,del_flag,order_id,type,opinions  FROM order_info   WHERE  del_flag=0  AND (product_id IN () AND order_status = ?)) TOTAL
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy209.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy208.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor.willDoQuery(PaginationInnerInterceptor.java:141)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:75)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy207.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy150.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForIPage(MybatisMapperMethod.java:121)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:85)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy153.selectPage(Unknown Source)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl.getOrderListByDoctorId(OrderInfoServiceImpl.java:198)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$FastClassBySpringCGLIB$$d3709f65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$EnhancerBySpringCGLIB$$c59e6b4c.getOrderListByDoctorId(<generated>)
	at edu.swu.cs.controller.OrderInfoController.getOrderListByDoctorId(OrderInfoController.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 16:48:55.580 [http-nio-8081-exec-4] ERROR o.a.c.c.C.[.[.[/service-order].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-order] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
### The error may exist in edu/swu/cs/mapper/OrderInfoMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT COUNT(*) FROM (SELECT  id,product_id,user_id,patient_id,order_status,create_time,update_by,update_time,del_flag,order_id,type,opinions  FROM order_info   WHERE  del_flag=0  AND (product_id IN () AND order_status = ?)) TOTAL
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy209.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy208.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor.willDoQuery(PaginationInnerInterceptor.java:141)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:75)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy207.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy150.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForIPage(MybatisMapperMethod.java:121)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:85)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy153.selectPage(Unknown Source)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl.getOrderListByDoctorId(OrderInfoServiceImpl.java:198)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$FastClassBySpringCGLIB$$d3709f65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$EnhancerBySpringCGLIB$$c59e6b4c.getOrderListByDoctorId(<generated>)
	at edu.swu.cs.controller.OrderInfoController.getOrderListByDoctorId(OrderInfoController.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 17:01:01.778 [Thread-49] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2023-06-22 17:01:01.785 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 17:01:01.790 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 17:01:01.791 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2023-06-22 17:01:01.791 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 17:01:01.801 [Thread-68] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2023-06-22 17:01:01.808 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Waiting for workers to finish.
2023-06-22 17:01:01.815 [Thread-37] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2023-06-22 17:01:01.819 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 17:01:01.821 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 17:01:01.822 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 17:01:01.838 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 17:01:01.839 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 17:01:01.843 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 17:01:01.949 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Successfully waited for workers to finish.
2023-06-22 17:01:01.950 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Waiting for workers to finish.
2023-06-22 17:01:01.966 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 17:01:01.971 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 17:01:01.972 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 17:01:01.975 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 17:01:01.976 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 17:01:01.977 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 17:01:02.945 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Successfully waited for workers to finish.
2023-06-22 17:01:02.948 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 17:01:02.950 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 17:01:02.951 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 17:01:03.062 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 17:01:03.063 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 17:01:03.240 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 17:01:03.242 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 17:01:07.719 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:07.869 [main] INFO  edu.swu.cs.WareApplication - No active profile set, falling back to default profiles: default
2023-06-22 17:01:08.916 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 17:01:08.919 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 17:01:08.949 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15ms. Found 0 repository interfaces.
2023-06-22 17:01:09.010 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 17:01:09.035 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 17:01:09.183 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=becd3dfe-a69e-37f4-8283-9e23c7d67413
2023-06-22 17:01:09.332 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:09.559 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:09.873 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8086 (http)
2023-06-22 17:01:09.880 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8086"]
2023-06-22 17:01:09.881 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 17:01:09.881 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 17:01:09.966 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-ware] - Initializing Spring embedded WebApplicationContext
2023-06-22 17:01:09.966 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2074 ms
2023-06-22 17:01:10.048 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 17:01:10.048 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 17:01:10.057 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@66ec4409
2023-06-22 17:01:11.135 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:11.258 [main] INFO  edu.swu.cs.ProductApplication - No active profile set, falling back to default profiles: default
2023-06-22 17:01:11.411 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 17:01:11.602 [redisson-netty-4-18] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 17:01:11.602 [redisson-netty-4-19] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 17:01:11.934 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 17:01:12.008 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 17:01:12.032 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 17:01:12.032 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 17:01:12.082 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 17:01:12.172 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 17:01:12.173 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 17:01:12.197 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12ms. Found 0 repository interfaces.
2023-06-22 17:01:12.262 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 17:01:12.321 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 17:01:12.479 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=511693ec-330e-391b-890e-84a005ffebb9
2023-06-22 17:01:12.574 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 27895c5b-7072-4b6a-8b9e-c3b0f0d83323

2023-06-22 17:01:12.602 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:12.639 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@47d4e28a, org.springframework.security.web.context.SecurityContextPersistenceFilter@aa633e6, org.springframework.security.web.header.HeaderWriterFilter@7178d811, org.springframework.web.filter.CorsFilter@177068db, edu.swu.cs.filter.JwtAuthenticationTokenFilter@40c76f5a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@516b84d1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c46e6f6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@60f3239f, org.springframework.security.web.session.SessionManagementFilter@1805ca5c, org.springframework.security.web.access.ExceptionTranslationFilter@15bb8ed5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@248d2cec]
2023-06-22 17:01:12.733 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 17:01:12.813 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:12.836 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 17:01:12.900 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 17:01:12.922 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 17:01:12.961 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 17:01:13.080 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8083 (http)
2023-06-22 17:01:13.090 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2023-06-22 17:01:13.091 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 17:01:13.091 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 17:01:13.096 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 17:01:13.125 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#790d8fdd:0/SimpleConnection@393bcd6b [delegate=amqp://guest@127.0.0.1:5672/, localPort= 60522]
2023-06-22 17:01:13.158 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Container initialized for queues: [stock.release.stock.queue]
2023-06-22 17:01:13.164 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  o.s.a.r.listener.DirectMessageListenerContainer - SimpleConsumer [queue=stock.release.stock.queue, consumerTag=amq.ctag-s7KNhW-7qkQweEvbbd4KAg identity=6802dc7b] started
2023-06-22 17:01:13.176 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8086"]
2023-06-22 17:01:13.179 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-product] - Initializing Spring embedded WebApplicationContext
2023-06-22 17:01:13.180 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1908 ms
2023-06-22 17:01:13.179 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8086"]
2023-06-22 17:01:13.180 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2023-06-22 17:01:13.184 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
 io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:289)
 io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1050)
 io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 17:01:13.185 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 17:01:13.186 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [logback-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 17:01:13.186 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [Timer-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.util.TimerThread.mainLoop(Timer.java:552)
 java.util.TimerThread.run(Timer.java:505)
2023-06-22 17:01:13.186 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.client.listener] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
 com.alibaba.nacos.client.naming.core.EventDispatcher$Notifier.run(EventDispatcher.java:114)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 17:01:13.187 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.beat.sender] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 17:01:13.187 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.beat.sender] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 17:01:13.187 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.failover] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 17:01:13.188 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.push.receiver] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.PlainDatagramSocketImpl.receive0(Native Method)
 java.net.AbstractPlainDatagramSocketImpl.receive(AbstractPlainDatagramSocketImpl.java:143)
 java.net.DatagramSocket.receive(DatagramSocket.java:812)
 com.alibaba.nacos.client.naming.core.PushReceiver.run(PushReceiver.java:73)
 java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
 java.util.concurrent.FutureTask.run(FutureTask.java:266)
 java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
 java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 17:01:13.189 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8086"]
2023-06-22 17:01:13.189 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8086"]
2023-06-22 17:01:13.192 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-06-22 17:01:13.198 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Successfully waited for consumers to finish.
2023-06-22 17:01:13.199 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService
2023-06-22 17:01:13.204 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 17:01:13.206 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 17:01:13.277 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 17:01:13.277 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 17:01:13.282 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5e7abaf7
2023-06-22 17:01:13.283 [main] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8086 was already in use.

Action:

Identify and stop the process that's listening on port 8086 or configure this application to listen on another port.

2023-06-22 17:01:14.789 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:14.877 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 17:01:14.897 [main] INFO  edu.swu.cs.OrderApplication - No active profile set, falling back to default profiles: default
2023-06-22 17:01:15.015 [redisson-netty-4-30] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 17:01:15.023 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 17:01:15.379 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 17:01:15.557 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 17:01:15.579 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 17:01:15.579 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 17:01:15.627 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 17:01:15.884 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 17:01:15.885 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 17:01:15.911 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15ms. Found 0 repository interfaces.
2023-06-22 17:01:15.924 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 9bd77d20-a7c3-46ab-9651-a037db4f74c0

2023-06-22 17:01:15.973 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 17:01:15.982 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6719f206, org.springframework.security.web.context.SecurityContextPersistenceFilter@3d50a3d9, org.springframework.security.web.header.HeaderWriterFilter@5f9ccd0c, org.springframework.web.filter.CorsFilter@5ae16aa, edu.swu.cs.filter.JwtAuthenticationTokenFilter@99c4993, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2e91cf69, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1dadd172, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@344a065a, org.springframework.security.web.session.SessionManagementFilter@24f5e9e8, org.springframework.security.web.access.ExceptionTranslationFilter@603b9d4b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@42805abe]
2023-06-22 17:01:16.007 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 17:01:16.035 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2023-06-22 17:01:16.052 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 17:01:16.163 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=292af892-e9b3-374c-9bee-d96fde00adf6
2023-06-22 17:01:16.193 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 17:01:16.209 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 17:01:16.244 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 17:01:16.326 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:16.390 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2023-06-22 17:01:16.402 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8083 (http) with context path '/service-product'
2023-06-22 17:01:16.410 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-product 192.168.1.25:8083 register finished
2023-06-22 17:01:16.413 [main] INFO  edu.swu.cs.ProductApplication - Started ProductApplication in 5.763 seconds (JVM running for 6.2)
2023-06-22 17:01:16.575 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:16.596 [RMI TCP Connection(4)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-product] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 17:01:16.596 [RMI TCP Connection(4)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 17:01:16.602 [RMI TCP Connection(5)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [localhost:5672]
2023-06-22 17:01:16.619 [RMI TCP Connection(4)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 23 ms
2023-06-22 17:01:16.637 [RMI TCP Connection(5)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#5db948c9:0/SimpleConnection@21c91f76 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 60528]
2023-06-22 17:01:16.660 [RMI TCP Connection(5)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 17:01:16.800 [RMI TCP Connection(5)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 17:01:16.806 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2023-06-22 17:01:16.814 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2023-06-22 17:01:16.814 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 17:01:16.814 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 17:01:16.882 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-order] - Initializing Spring embedded WebApplicationContext
2023-06-22 17:01:16.882 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1969 ms
2023-06-22 17:01:16.933 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 17:01:16.935 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 17:01:16.987 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 17:01:16.988 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 17:01:16.997 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7f3fc42f
2023-06-22 17:01:17.755 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:17.899 [main] INFO  edu.swu.cs.securityApplication - No active profile set, falling back to default profiles: default
2023-06-22 17:01:18.780 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 17:01:18.781 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 17:01:18.803 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10ms. Found 0 repository interfaces.
2023-06-22 17:01:18.928 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 17:01:19.148 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c1871298-cf47-35a1-9b15-5660b38c6b3a
2023-06-22 17:01:19.213 [redisson-netty-4-16] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 17:01:19.215 [redisson-netty-4-19] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 17:01:19.391 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:19.667 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:19.857 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:19.942 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 17:01:20.035 [main] INFO  edu.swu.cs.UserApplication - No active profile set, falling back to default profiles: default
2023-06-22 17:01:20.078 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
2023-06-22 17:01:20.088 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2023-06-22 17:01:20.089 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 17:01:20.089 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 17:01:20.172 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/security-auth] - Initializing Spring embedded WebApplicationContext
2023-06-22 17:01:20.172 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2262 ms
2023-06-22 17:01:20.262 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 17:01:20.328 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 17:01:20.329 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 17:01:20.442 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 17:01:20.980 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: c90e29f5-fa47-4859-9d5b-1d5a97d6d500

2023-06-22 17:01:21.052 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@516037be, org.springframework.security.web.context.SecurityContextPersistenceFilter@37083af6, org.springframework.security.web.header.HeaderWriterFilter@75c8d8e7, org.springframework.web.filter.CorsFilter@383e6734, edu.swu.cs.filter.JwtAuthenticationTokenFilter@2fca3eb5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1a85e86e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1ecec098, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@336070ab, org.springframework.security.web.session.SessionManagementFilter@75f2ff80, org.springframework.security.web.access.ExceptionTranslationFilter@74a03bd5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5016f1a]
2023-06-22 17:01:21.158 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 17:01:21.308 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 17:01:21.309 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 17:01:21.328 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9ms. Found 0 repository interfaces.
2023-06-22 17:01:21.345 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 17:01:21.362 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 17:01:21.390 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 17:01:21.399 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 17:01:21.422 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 17:01:21.532 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 17:01:21.562 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#3830b06c:0/SimpleConnection@1820f274 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 52836]
2023-06-22 17:01:21.587 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=8fadee14-3e67-3619-a278-addf4941a8f7
2023-06-22 17:01:21.590 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 17:01:21.681 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 17:01:21.703 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 17:01:21.703 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 17:01:21.705 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 17:01:21.706 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 17:01:21.740 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:21.759 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 17:01:21.905 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:21.909 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:21.911 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1da4b3f9' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:21.914 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:21.917 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:21.972 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 17:01:22.236 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@55071497, org.springframework.security.web.context.SecurityContextPersistenceFilter@40b31a16, org.springframework.security.web.header.HeaderWriterFilter@6ac756b, org.springframework.web.filter.CorsFilter@10d98940, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@71139e77, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6113a26f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58b8f9e3, org.springframework.security.web.session.SessionManagementFilter@305aaedf, org.springframework.security.web.access.ExceptionTranslationFilter@6f8ac8d5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6afeaf2d]
2023-06-22 17:01:22.256 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2023-06-22 17:01:22.263 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2023-06-22 17:01:22.264 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 17:01:22.264 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 17:01:22.297 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 17:01:22.329 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-user] - Initializing Spring embedded WebApplicationContext
2023-06-22 17:01:22.329 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2264 ms
2023-06-22 17:01:22.429 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 17:01:22.431 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 17:01:22.431 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 17:01:22.438 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4b87074a
2023-06-22 17:01:22.444 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 17:01:22.478 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 17:01:22.572 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2023-06-22 17:01:22.583 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path '/security-auth'
2023-06-22 17:01:22.590 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, security-auth 192.168.1.25:8085 register finished
2023-06-22 17:01:22.592 [main] INFO  edu.swu.cs.securityApplication - Started securityApplication in 5.362 seconds (JVM running for 5.782)
2023-06-22 17:01:22.596 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 17:01:23.978 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 17:01:24.049 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 17:01:24.080 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 17:01:24.081 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 17:01:24.128 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 17:01:24.427 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: e255aa46-04d2-4144-8801-c6fbd339fca2

2023-06-22 17:01:24.476 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b058bfd, org.springframework.security.web.context.SecurityContextPersistenceFilter@5e8bd498, org.springframework.security.web.header.HeaderWriterFilter@78743dd8, org.springframework.web.filter.CorsFilter@4805069b, edu.swu.cs.filter.JwtAuthenticationTokenFilter@75ad30c1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@11170228, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b289535, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@14ca88bc, org.springframework.security.web.session.SessionManagementFilter@e2c627e, org.springframework.security.web.access.ExceptionTranslationFilter@5358c8fa, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@34070bd2]
2023-06-22 17:01:24.543 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 17:01:24.599 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 17:01:24.648 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 17:01:24.778 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 17:01:24.812 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 17:01:24.979 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2023-06-22 17:01:24.990 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path '/service-user'
2023-06-22 17:01:24.996 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-user 192.168.1.25:8082 register finished
2023-06-22 17:01:24.998 [main] INFO  edu.swu.cs.UserApplication - Started UserApplication in 6.119 seconds (JVM running for 6.721)
2023-06-22 17:01:25.121 [RMI TCP Connection(4)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 17:01:25.123 [RMI TCP Connection(5)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-user] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 17:01:25.123 [RMI TCP Connection(5)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 17:01:25.131 [RMI TCP Connection(5)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2023-06-22 17:01:25.139 [RMI TCP Connection(4)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#509a6095:0/SimpleConnection@216d4298 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 52846]
2023-06-22 17:01:25.159 [RMI TCP Connection(4)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 17:01:25.226 [RMI TCP Connection(4)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 17:01:25.302 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 17:01:25.303 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 17:01:28.606 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 17:01:33.615 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 17:01:33.619 [main] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Broker not available; cannot force queue declarations during start: java.io.IOException
2023-06-22 17:01:33.696 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2023-06-22 17:01:33.708 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path '/service-order'
2023-06-22 17:01:33.715 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-order 192.168.1.25:8081 register finished
2023-06-22 17:01:33.718 [main] INFO  edu.swu.cs.OrderApplication - Started OrderApplication in 19.421 seconds (JVM running for 19.847)
2023-06-22 17:01:33.816 [RMI TCP Connection(6)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 17:01:33.817 [RMI TCP Connection(7)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-order] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 17:01:33.817 [RMI TCP Connection(7)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 17:01:33.824 [RMI TCP Connection(7)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2023-06-22 17:01:33.897 [RMI TCP Connection(6)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 17:01:33.971 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 17:01:33.972 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 17:01:57.093 [http-nio-8081-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 17:01:57.102 [http-nio-8081-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-product instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-product,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 17:01:57.106 [http-nio-8081-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 17:01:57.112 [http-nio-8081-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 17:01:57.114 [http-nio-8081-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-product initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-product,current list of Servers=[192.168.1.25:8083],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8083;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@25c7cc2e
2023-06-22 17:01:57.415 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 17:01:57.424 [http-nio-8083-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 17:01:57.427 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 17:01:57.433 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 17:01:57.434 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[192.168.1.25:8082],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8082;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@2c9b1bcf
2023-06-22 17:01:57.655 [http-nio-8081-exec-1] ERROR o.a.c.c.C.[.[.[/service-order].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-order] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
### The error may exist in edu/swu/cs/mapper/OrderInfoMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT COUNT(*) FROM (SELECT  id,product_id,user_id,patient_id,order_status,create_time,update_by,update_time,del_flag,order_id,type,opinions  FROM order_info   WHERE  del_flag=0  AND (product_id IN () AND order_status = ?)) TOTAL
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy212.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy211.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor.willDoQuery(PaginationInnerInterceptor.java:141)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:75)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy210.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy150.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForIPage(MybatisMapperMethod.java:121)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:85)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy153.selectPage(Unknown Source)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl.getOrderListByDoctorId(OrderInfoServiceImpl.java:198)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$FastClassBySpringCGLIB$$d3709f65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$EnhancerBySpringCGLIB$$94f61b5e.getOrderListByDoctorId(<generated>)
	at edu.swu.cs.controller.OrderInfoController.getOrderListByDoctorId(OrderInfoController.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 17:01:58.108 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 17:01:58.429 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 17:02:01.854 [http-nio-8081-exec-2] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 17:02:01.855 [http-nio-8081-exec-2] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 17:02:01.855 [http-nio-8081-exec-2] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 17:02:01.856 [http-nio-8081-exec-2] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 17:02:01.857 [http-nio-8081-exec-2] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[192.168.1.25:8082],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8082;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@5cdfa75b
2023-06-22 17:02:02.856 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 17:02:35.487 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 17:02:35.488 [http-nio-8083-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-ware instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-ware,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 17:02:35.489 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 17:02:35.490 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 17:02:35.490 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-ware initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-ware,current list of Servers=[192.168.1.25:8086],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8086;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@5ec45b3d
2023-06-22 17:02:35.659 [http-nio-8086-exec-1] ERROR o.a.c.c.C.[.[.[/service-ware].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-ware] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
### The error may exist in edu/swu/cs/mapper/WareMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,product_id,amount,lock_amount,parent_product_id,offset_time  FROM ware     WHERE (product_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy207.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy206.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy205.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy151.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.WareServiceImpl$$EnhancerBySpringCGLIB$$446368e6.list(<generated>)
	at edu.swu.cs.controller.WareController.getWareListByProductIdByFeign(WareController.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 17:02:35.684 [http-nio-8083-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)] with root cause
feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)
	at feign.FeignException.serverErrorStatus(FeignException.java:195)
	at feign.FeignException.errorStatus(FeignException.java:144)
	at feign.FeignException.errorStatus(FeignException.java:133)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy159.getWareListByProductIdByFeign(Unknown Source)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:66)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$34a62d6d.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 17:02:36.490 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 17:02:37.160 [http-nio-8086-exec-2] ERROR o.a.c.c.C.[.[.[/service-ware].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-ware] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
### The error may exist in edu/swu/cs/mapper/WareMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,product_id,amount,lock_amount,parent_product_id,offset_time  FROM ware     WHERE (product_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy207.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy206.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy205.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy151.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.WareServiceImpl$$EnhancerBySpringCGLIB$$446368e6.list(<generated>)
	at edu.swu.cs.controller.WareController.getWareListByProductIdByFeign(WareController.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 17:02:37.163 [http-nio-8083-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)] with root cause
feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)
	at feign.FeignException.serverErrorStatus(FeignException.java:195)
	at feign.FeignException.errorStatus(FeignException.java:144)
	at feign.FeignException.errorStatus(FeignException.java:133)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy159.getWareListByProductIdByFeign(Unknown Source)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:66)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$34a62d6d.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 17:02:37.983 [http-nio-8086-exec-3] ERROR o.a.c.c.C.[.[.[/service-ware].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-ware] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
### The error may exist in edu/swu/cs/mapper/WareMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,product_id,amount,lock_amount,parent_product_id,offset_time  FROM ware     WHERE (product_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy207.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy206.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy205.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy151.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.WareServiceImpl$$EnhancerBySpringCGLIB$$446368e6.list(<generated>)
	at edu.swu.cs.controller.WareController.getWareListByProductIdByFeign(WareController.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 17:02:37.988 [http-nio-8083-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)] with root cause
feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)
	at feign.FeignException.serverErrorStatus(FeignException.java:195)
	at feign.FeignException.errorStatus(FeignException.java:144)
	at feign.FeignException.errorStatus(FeignException.java:133)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy159.getWareListByProductIdByFeign(Unknown Source)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:66)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$34a62d6d.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 17:02:38.773 [http-nio-8086-exec-4] ERROR o.a.c.c.C.[.[.[/service-ware].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-ware] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
### The error may exist in edu/swu/cs/mapper/WareMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,product_id,amount,lock_amount,parent_product_id,offset_time  FROM ware     WHERE (product_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy207.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy206.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy205.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy151.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.WareServiceImpl$$EnhancerBySpringCGLIB$$446368e6.list(<generated>)
	at edu.swu.cs.controller.WareController.getWareListByProductIdByFeign(WareController.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 17:02:38.779 [http-nio-8083-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)] with root cause
feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)
	at feign.FeignException.serverErrorStatus(FeignException.java:195)
	at feign.FeignException.errorStatus(FeignException.java:144)
	at feign.FeignException.errorStatus(FeignException.java:133)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy159.getWareListByProductIdByFeign(Unknown Source)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:66)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$34a62d6d.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 17:02:40.523 [http-nio-8086-exec-5] ERROR o.a.c.c.C.[.[.[/service-ware].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-ware] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
### The error may exist in edu/swu/cs/mapper/WareMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,product_id,amount,lock_amount,parent_product_id,offset_time  FROM ware     WHERE (product_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy207.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy206.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy205.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy151.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.WareServiceImpl$$EnhancerBySpringCGLIB$$446368e6.list(<generated>)
	at edu.swu.cs.controller.WareController.getWareListByProductIdByFeign(WareController.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 17:02:40.526 [http-nio-8083-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)] with root cause
feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)
	at feign.FeignException.serverErrorStatus(FeignException.java:195)
	at feign.FeignException.errorStatus(FeignException.java:144)
	at feign.FeignException.errorStatus(FeignException.java:133)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy159.getWareListByProductIdByFeign(Unknown Source)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:66)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$34a62d6d.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 17:02:41.586 [http-nio-8086-exec-6] ERROR o.a.c.c.C.[.[.[/service-ware].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-ware] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
### The error may exist in edu/swu/cs/mapper/WareMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,product_id,amount,lock_amount,parent_product_id,offset_time  FROM ware     WHERE (product_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy207.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy206.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy205.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy151.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.WareServiceImpl$$EnhancerBySpringCGLIB$$446368e6.list(<generated>)
	at edu.swu.cs.controller.WareController.getWareListByProductIdByFeign(WareController.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 17:02:41.591 [http-nio-8083-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)] with root cause
feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)
	at feign.FeignException.serverErrorStatus(FeignException.java:195)
	at feign.FeignException.errorStatus(FeignException.java:144)
	at feign.FeignException.errorStatus(FeignException.java:133)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy159.getWareListByProductIdByFeign(Unknown Source)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:66)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$34a62d6d.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 17:05:10.670 [http-nio-8081-exec-8] ERROR o.a.c.c.C.[.[.[/service-order].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-order] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
### The error may exist in edu/swu/cs/mapper/OrderInfoMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT COUNT(*) FROM (SELECT  id,product_id,user_id,patient_id,order_status,create_time,update_by,update_time,del_flag,order_id,type,opinions  FROM order_info   WHERE  del_flag=0  AND (product_id IN () AND order_status = ?)) TOTAL
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor215.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy212.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.GeneratedMethodAccessor214.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy211.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor.willDoQuery(PaginationInnerInterceptor.java:141)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:75)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy210.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy150.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForIPage(MybatisMapperMethod.java:121)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:85)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy153.selectPage(Unknown Source)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl.getOrderListByDoctorId(OrderInfoServiceImpl.java:198)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$FastClassBySpringCGLIB$$d3709f65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$EnhancerBySpringCGLIB$$94f61b5e.getOrderListByDoctorId(<generated>)
	at edu.swu.cs.controller.OrderInfoController.getOrderListByDoctorId(OrderInfoController.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 20:28:50.830 [Thread-44] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2023-06-22 20:28:50.837 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 20:28:50.839 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 20:28:50.839 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2023-06-22 20:28:50.841 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 20:28:50.858 [Thread-71] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2023-06-22 20:28:50.865 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Waiting for workers to finish.
2023-06-22 20:28:50.877 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 20:28:50.879 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 20:28:50.880 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 20:28:50.888 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Successfully waited for workers to finish.
2023-06-22 20:28:50.890 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Waiting for workers to finish.
2023-06-22 20:28:50.893 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Successfully waited for workers to finish.
2023-06-22 20:28:50.896 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 20:28:50.896 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 20:28:50.898 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 20:28:50.898 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 20:28:50.900 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 20:28:50.900 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 20:28:50.948 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 20:28:50.949 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 20:28:51.027 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 20:28:51.027 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 20:28:51.028 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 20:28:51.028 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 20:28:51.067 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 20:28:51.070 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 20:28:55.466 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:28:55.581 [main] INFO  edu.swu.cs.WareApplication - No active profile set, falling back to default profiles: default
2023-06-22 20:28:56.505 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:28:56.615 [main] INFO  edu.swu.cs.securityApplication - No active profile set, falling back to default profiles: default
2023-06-22 20:28:56.669 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 20:28:56.671 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 20:28:56.697 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10ms. Found 0 repository interfaces.
2023-06-22 20:28:56.785 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 20:28:56.842 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 20:28:57.025 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=becd3dfe-a69e-37f4-8283-9e23c7d67413
2023-06-22 20:28:57.158 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:28:57.204 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 20:28:57.206 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 20:28:57.224 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9ms. Found 0 repository interfaces.
2023-06-22 20:28:57.383 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:28:57.405 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c1871298-cf47-35a1-9b15-5660b38c6b3a
2023-06-22 20:28:57.500 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:28:57.579 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8086 (http)
2023-06-22 20:28:57.588 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8086"]
2023-06-22 20:28:57.588 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 20:28:57.589 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 20:28:57.608 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:28:57.671 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-ware] - Initializing Spring embedded WebApplicationContext
2023-06-22 20:28:57.671 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2074 ms
2023-06-22 20:28:57.752 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 20:28:57.752 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 20:28:57.759 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@14d25b6e
2023-06-22 20:28:57.820 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
2023-06-22 20:28:57.827 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2023-06-22 20:28:57.827 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 20:28:57.827 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 20:28:57.878 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/security-auth] - Initializing Spring embedded WebApplicationContext
2023-06-22 20:28:57.879 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1250 ms
2023-06-22 20:28:59.043 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 20:28:59.049 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 20:28:59.077 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 20:28:59.077 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 20:28:59.082 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 20:28:59.082 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 20:28:59.134 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 20:28:59.176 [redisson-netty-4-27] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 20:28:59.186 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 20:28:59.559 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 20:28:59.676 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 20:28:59.682 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@58b8f9e3, org.springframework.security.web.context.SecurityContextPersistenceFilter@1de73d37, org.springframework.security.web.header.HeaderWriterFilter@38a38ed4, org.springframework.web.filter.CorsFilter@32a033b6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2404abe2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6a4a2090, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5f6e2ad9, org.springframework.security.web.session.SessionManagementFilter@17d76ebb, org.springframework.security.web.access.ExceptionTranslationFilter@6ac756b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1a7e799e]
2023-06-22 20:28:59.715 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 20:28:59.716 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 20:28:59.765 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 20:28:59.792 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 20:28:59.979 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 20:28:59.999 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 20:29:00.038 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 20:29:00.157 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2023-06-22 20:29:00.175 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path '/security-auth'
2023-06-22 20:29:00.185 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, security-auth 192.168.1.25:8085 register finished
2023-06-22 20:29:00.188 [main] INFO  edu.swu.cs.securityApplication - Started securityApplication in 4.114 seconds (JVM running for 4.535)
2023-06-22 20:29:00.215 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:29:00.350 [main] INFO  edu.swu.cs.ProductApplication - No active profile set, falling back to default profiles: default
2023-06-22 20:29:00.411 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 995dcd12-b3e0-4f35-8c90-d0cd5a5ae3fe

2023-06-22 20:29:00.478 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a0e7f89, org.springframework.security.web.context.SecurityContextPersistenceFilter@25c6ab3f, org.springframework.security.web.header.HeaderWriterFilter@df432ec, org.springframework.web.filter.CorsFilter@665ed71a, edu.swu.cs.filter.JwtAuthenticationTokenFilter@6775c0d1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48b09105, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e55d844, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@15c1b543, org.springframework.security.web.session.SessionManagementFilter@1818d00b, org.springframework.security.web.access.ExceptionTranslationFilter@645c9f0f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7d6019d5]
2023-06-22 20:29:00.575 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 20:29:00.719 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 20:29:00.818 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 20:29:00.835 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 20:29:00.873 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 20:29:01.017 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 20:29:01.058 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#f723cdb:0/SimpleConnection@666b1244 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 57930]
2023-06-22 20:29:01.102 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Container initialized for queues: [stock.release.stock.queue]
2023-06-22 20:29:01.121 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8086"]
2023-06-22 20:29:01.124 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8086"]
2023-06-22 20:29:01.124 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2023-06-22 20:29:01.125 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  o.s.a.r.listener.DirectMessageListenerContainer - SimpleConsumer [queue=stock.release.stock.queue, consumerTag=amq.ctag-vZ7n17tMcfV87OFskDkthg identity=20f99331] started
2023-06-22 20:29:01.129 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
 io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:289)
 io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1050)
 io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 20:29:01.135 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 20:29:01.136 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [logback-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 20:29:01.136 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [Timer-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.util.TimerThread.mainLoop(Timer.java:552)
 java.util.TimerThread.run(Timer.java:505)
2023-06-22 20:29:01.137 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.client.listener] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
 com.alibaba.nacos.client.naming.core.EventDispatcher$Notifier.run(EventDispatcher.java:114)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 20:29:01.137 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.beat.sender] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 20:29:01.138 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.beat.sender] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 20:29:01.138 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.failover] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 20:29:01.139 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.push.receiver] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.PlainDatagramSocketImpl.receive0(Native Method)
 java.net.AbstractPlainDatagramSocketImpl.receive(AbstractPlainDatagramSocketImpl.java:143)
 java.net.DatagramSocket.receive(DatagramSocket.java:812)
 com.alibaba.nacos.client.naming.core.PushReceiver.run(PushReceiver.java:73)
 java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
 java.util.concurrent.FutureTask.run(FutureTask.java:266)
 java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
 java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 20:29:01.141 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8086"]
2023-06-22 20:29:01.142 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8086"]
2023-06-22 20:29:01.147 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-06-22 20:29:01.159 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Successfully waited for consumers to finish.
2023-06-22 20:29:01.160 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService
2023-06-22 20:29:01.169 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 20:29:01.174 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 20:29:01.314 [main] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8086 was already in use.

Action:

Identify and stop the process that's listening on port 8086 or configure this application to listen on another port.

2023-06-22 20:29:01.568 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 20:29:01.570 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 20:29:01.596 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15ms. Found 0 repository interfaces.
2023-06-22 20:29:01.690 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 20:29:01.745 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 20:29:01.939 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=511693ec-330e-391b-890e-84a005ffebb9
2023-06-22 20:29:02.102 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:29:02.303 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:29:02.532 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8083 (http)
2023-06-22 20:29:02.538 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2023-06-22 20:29:02.539 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 20:29:02.539 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 20:29:02.616 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-product] - Initializing Spring embedded WebApplicationContext
2023-06-22 20:29:02.617 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2249 ms
2023-06-22 20:29:02.720 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 20:29:02.720 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 20:29:02.726 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@23e3f5cd
2023-06-22 20:29:03.224 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:29:03.340 [main] INFO  edu.swu.cs.OrderApplication - No active profile set, falling back to default profiles: default
2023-06-22 20:29:04.322 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 20:29:04.324 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 20:29:04.343 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10ms. Found 0 repository interfaces.
2023-06-22 20:29:04.383 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 20:29:04.420 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 20:29:04.453 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 20:29:04.494 [redisson-netty-4-18] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 20:29:04.494 [redisson-netty-4-19] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 20:29:04.619 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=292af892-e9b3-374c-9bee-d96fde00adf6
2023-06-22 20:29:04.772 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:29:04.895 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 20:29:04.993 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:29:05.174 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 20:29:05.216 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 20:29:05.216 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 20:29:05.328 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 20:29:05.333 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2023-06-22 20:29:05.346 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2023-06-22 20:29:05.347 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 20:29:05.347 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 20:29:05.479 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-order] - Initializing Spring embedded WebApplicationContext
2023-06-22 20:29:05.479 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2113 ms
2023-06-22 20:29:05.609 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 20:29:05.610 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 20:29:05.620 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@30aec673
2023-06-22 20:29:05.858 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: c4c7f0e7-3702-4ffc-a1f5-cdb2df17df01

2023-06-22 20:29:05.966 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@9825465, org.springframework.security.web.context.SecurityContextPersistenceFilter@2c70a1de, org.springframework.security.web.header.HeaderWriterFilter@229514ff, org.springframework.web.filter.CorsFilter@36cf6377, edu.swu.cs.filter.JwtAuthenticationTokenFilter@57e4b86c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1906f982, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@23263ba, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2befb16f, org.springframework.security.web.session.SessionManagementFilter@71eafb64, org.springframework.security.web.access.ExceptionTranslationFilter@609ad016, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@24d0c6a4]
2023-06-22 20:29:06.038 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2023-06-22 20:29:06.060 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 20:29:06.278 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 20:29:06.311 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 20:29:06.394 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 20:29:06.635 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:29:06.637 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2023-06-22 20:29:06.651 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8083 (http) with context path '/service-product'
2023-06-22 20:29:06.660 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-product 192.168.1.25:8083 register finished
2023-06-22 20:29:06.663 [main] INFO  edu.swu.cs.ProductApplication - Started ProductApplication in 6.995 seconds (JVM running for 7.507)
2023-06-22 20:29:06.755 [main] INFO  edu.swu.cs.UserApplication - No active profile set, falling back to default profiles: default
2023-06-22 20:29:06.964 [RMI TCP Connection(4)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [localhost:5672]
2023-06-22 20:29:06.968 [RMI TCP Connection(5)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-product] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 20:29:06.968 [RMI TCP Connection(5)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 20:29:06.976 [RMI TCP Connection(5)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2023-06-22 20:29:06.993 [RMI TCP Connection(4)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#632383b9:0/SimpleConnection@61a8d964 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 57942]
2023-06-22 20:29:07.022 [RMI TCP Connection(4)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 20:29:07.155 [RMI TCP Connection(4)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 20:29:07.279 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 20:29:07.280 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 20:29:07.316 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 20:29:07.441 [redisson-netty-4-29] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 20:29:07.445 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 20:29:07.632 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 20:29:07.633 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 20:29:07.650 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10ms. Found 0 repository interfaces.
2023-06-22 20:29:07.688 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 20:29:07.691 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 20:29:07.713 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 20:29:07.827 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=8fadee14-3e67-3619-a278-addf4941a8f7
2023-06-22 20:29:07.835 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 20:29:07.857 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 20:29:07.857 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 20:29:07.905 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 20:29:07.936 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:29:08.035 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:29:08.038 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:29:08.039 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@66813e6e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:29:08.041 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:29:08.044 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:29:08.076 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:29:08.167 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 69570f45-a69d-4c04-8981-ccd7cbae9d72

2023-06-22 20:29:08.220 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6f67ece5, org.springframework.security.web.context.SecurityContextPersistenceFilter@f6bc75c, org.springframework.security.web.header.HeaderWriterFilter@13047d3d, org.springframework.web.filter.CorsFilter@155c7eae, edu.swu.cs.filter.JwtAuthenticationTokenFilter@19705650, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7845ee8a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c60f096, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5c9e6d95, org.springframework.security.web.session.SessionManagementFilter@3601549f, org.springframework.security.web.access.ExceptionTranslationFilter@4e789704, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3093b9ff]
2023-06-22 20:29:08.246 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2023-06-22 20:29:08.251 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2023-06-22 20:29:08.252 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 20:29:08.252 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 20:29:08.277 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 20:29:08.301 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-user] - Initializing Spring embedded WebApplicationContext
2023-06-22 20:29:08.301 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1530 ms
2023-06-22 20:29:08.367 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 20:29:08.367 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 20:29:08.371 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5f726750
2023-06-22 20:29:08.390 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 20:29:08.401 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 20:29:08.427 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 20:29:08.528 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 20:29:08.547 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#5bda157e:0/SimpleConnection@1cdad619 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 42340]
2023-06-22 20:29:08.567 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 20:29:09.573 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 20:29:09.647 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 20:29:09.722 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 20:29:09.760 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 20:29:09.761 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 20:29:09.815 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 20:29:10.289 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 0d0fb702-461c-4a3b-9a1c-9137c4dc39ae

2023-06-22 20:29:10.385 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@476c137b, org.springframework.security.web.context.SecurityContextPersistenceFilter@11170228, org.springframework.security.web.header.HeaderWriterFilter@1939a394, org.springframework.web.filter.CorsFilter@79144d0e, edu.swu.cs.filter.JwtAuthenticationTokenFilter@7196a8f1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d7f7962, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@115ef673, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@540212be, org.springframework.security.web.session.SessionManagementFilter@309cf657, org.springframework.security.web.access.ExceptionTranslationFilter@3d4818e8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2b058bfd]
2023-06-22 20:29:10.461 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 20:29:10.597 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 20:29:10.622 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 20:29:10.764 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 20:29:10.966 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2023-06-22 20:29:10.980 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path '/service-user'
2023-06-22 20:29:10.986 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-user 192.168.1.25:8082 register finished
2023-06-22 20:29:10.988 [main] INFO  edu.swu.cs.UserApplication - Started UserApplication in 4.982 seconds (JVM running for 5.55)
2023-06-22 20:29:11.267 [RMI TCP Connection(4)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 20:29:11.269 [RMI TCP Connection(5)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-user] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 20:29:11.269 [RMI TCP Connection(5)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 20:29:11.276 [RMI TCP Connection(5)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2023-06-22 20:29:11.285 [RMI TCP Connection(4)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#33324c05:0/SimpleConnection@5a4d0b69 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 42342]
2023-06-22 20:29:11.306 [RMI TCP Connection(4)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 20:29:11.370 [RMI TCP Connection(4)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 20:29:11.450 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 20:29:11.451 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 20:29:11.579 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 20:29:15.589 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 20:29:20.594 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 20:29:20.595 [main] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Broker not available; cannot force queue declarations during start: java.io.IOException
2023-06-22 20:29:20.618 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2023-06-22 20:29:20.627 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path '/service-order'
2023-06-22 20:29:20.634 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-order 192.168.1.25:8081 register finished
2023-06-22 20:29:20.636 [main] INFO  edu.swu.cs.OrderApplication - Started OrderApplication in 17.989 seconds (JVM running for 18.477)
2023-06-22 20:29:20.960 [RMI TCP Connection(4)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 20:29:20.961 [RMI TCP Connection(5)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-order] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 20:29:20.961 [RMI TCP Connection(5)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 20:29:20.968 [RMI TCP Connection(5)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2023-06-22 20:29:21.055 [RMI TCP Connection(4)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 20:29:21.139 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 20:29:21.140 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 20:29:25.841 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:29:25.933 [main] INFO  edu.swu.cs.WareApplication - No active profile set, falling back to default profiles: default
2023-06-22 20:29:26.522 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 20:29:26.523 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 20:29:26.536 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7ms. Found 0 repository interfaces.
2023-06-22 20:29:26.569 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 20:29:26.590 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 20:29:26.693 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=becd3dfe-a69e-37f4-8283-9e23c7d67413
2023-06-22 20:29:26.809 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:29:26.974 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 20:29:27.118 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8086 (http)
2023-06-22 20:29:27.123 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8086"]
2023-06-22 20:29:27.124 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 20:29:27.124 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 20:29:27.171 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-ware] - Initializing Spring embedded WebApplicationContext
2023-06-22 20:29:27.171 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1228 ms
2023-06-22 20:29:27.228 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 20:29:27.228 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 20:29:27.232 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4fba8eec
2023-06-22 20:29:28.051 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 20:29:28.122 [redisson-netty-4-1] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 20:29:28.124 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 20:29:28.360 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 20:29:28.420 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 20:29:28.443 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 20:29:28.443 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 20:29:28.484 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 20:29:28.817 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 50111caf-3610-4877-8deb-eb849abdf829

2023-06-22 20:29:28.858 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4d0b276e, org.springframework.security.web.context.SecurityContextPersistenceFilter@3e12c5de, org.springframework.security.web.header.HeaderWriterFilter@70e1aa20, org.springframework.web.filter.CorsFilter@31531d0d, edu.swu.cs.filter.JwtAuthenticationTokenFilter@698d6d30, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49f6c25e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a5d5b38, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@19d76106, org.springframework.security.web.session.SessionManagementFilter@7bef7505, org.springframework.security.web.access.ExceptionTranslationFilter@25c6ab3f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@665ed71a]
2023-06-22 20:29:28.912 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 20:29:28.977 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 20:29:29.020 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 20:29:29.031 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 20:29:29.059 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 20:29:29.157 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 20:29:29.172 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#6e24ce51:0/SimpleConnection@3d73cd78 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 58146]
2023-06-22 20:29:29.190 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Container initialized for queues: [stock.release.stock.queue]
2023-06-22 20:29:29.195 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  o.s.a.r.listener.DirectMessageListenerContainer - SimpleConsumer [queue=stock.release.stock.queue, consumerTag=amq.ctag--ZkkuH9h3_g7FVV9wUMjRg identity=783683fd] started
2023-06-22 20:29:29.202 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8086"]
2023-06-22 20:29:29.204 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8086"]
2023-06-22 20:29:29.204 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2023-06-22 20:29:29.206 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
 io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:289)
 io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1050)
 io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 20:29:29.206 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 20:29:29.206 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [logback-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 20:29:29.207 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [Timer-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.util.TimerThread.mainLoop(Timer.java:552)
 java.util.TimerThread.run(Timer.java:505)
2023-06-22 20:29:29.207 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.client.listener] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
 com.alibaba.nacos.client.naming.core.EventDispatcher$Notifier.run(EventDispatcher.java:114)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 20:29:29.207 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.beat.sender] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 20:29:29.207 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.beat.sender] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 20:29:29.207 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.failover] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 20:29:29.208 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.push.receiver] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.PlainDatagramSocketImpl.receive0(Native Method)
 java.net.AbstractPlainDatagramSocketImpl.receive(AbstractPlainDatagramSocketImpl.java:143)
 java.net.DatagramSocket.receive(DatagramSocket.java:812)
 com.alibaba.nacos.client.naming.core.PushReceiver.run(PushReceiver.java:73)
 java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
 java.util.concurrent.FutureTask.run(FutureTask.java:266)
 java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
 java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 20:29:29.208 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8086"]
2023-06-22 20:29:29.208 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8086"]
2023-06-22 20:29:29.210 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-06-22 20:29:29.213 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Successfully waited for consumers to finish.
2023-06-22 20:29:29.213 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService
2023-06-22 20:29:29.216 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 20:29:29.217 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 20:29:29.259 [main] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8086 was already in use.

Action:

Identify and stop the process that's listening on port 8086 or configure this application to listen on another port.

2023-06-22 20:36:11.325 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 20:36:11.333 [http-nio-8083-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 20:36:11.337 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 20:36:11.343 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 20:36:11.344 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[192.168.1.25:8082],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8082;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@1ff485c7
2023-06-22 20:36:11.503 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 20:36:11.504 [http-nio-8083-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-ware instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-ware,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 20:36:11.505 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 20:36:11.506 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 20:36:11.507 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-ware initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-ware,current list of Servers=[192.168.1.25:8086],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8086;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@575652ed
2023-06-22 20:36:11.517 [http-nio-8086-exec-7] ERROR o.a.c.c.C.[.[.[/service-ware].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-ware] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
### The error may exist in edu/swu/cs/mapper/WareMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,product_id,amount,lock_amount,parent_product_id,offset_time  FROM ware     WHERE (product_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy207.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy206.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy205.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy151.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.WareServiceImpl$$EnhancerBySpringCGLIB$$446368e6.list(<generated>)
	at edu.swu.cs.controller.WareController.getWareListByProductIdByFeign(WareController.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 20:36:11.528 [http-nio-8083-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)] with root cause
feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)
	at feign.FeignException.serverErrorStatus(FeignException.java:195)
	at feign.FeignException.errorStatus(FeignException.java:144)
	at feign.FeignException.errorStatus(FeignException.java:133)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy159.getWareListByProductIdByFeign(Unknown Source)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:66)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$8d3f8553.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 20:36:12.339 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 20:36:12.505 [PollingServerListUpdater-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 20:54:36.766 [http-nio-8082-exec-7] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalavatar.png (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$38eb4efd.getImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 20:54:37.799 [http-nio-8082-exec-9] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalavatar.png (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$38eb4efd.getImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 20:54:42.164 [http-nio-8086-exec-7] ERROR o.a.c.c.C.[.[.[/service-ware].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-ware] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
### The error may exist in edu/swu/cs/mapper/WareMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,product_id,amount,lock_amount,parent_product_id,offset_time  FROM ware     WHERE (product_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy207.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy206.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy205.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy151.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.WareServiceImpl$$EnhancerBySpringCGLIB$$446368e6.list(<generated>)
	at edu.swu.cs.controller.WareController.getWareListByProductIdByFeign(WareController.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 20:54:42.167 [http-nio-8083-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)] with root cause
feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)
	at feign.FeignException.serverErrorStatus(FeignException.java:195)
	at feign.FeignException.errorStatus(FeignException.java:144)
	at feign.FeignException.errorStatus(FeignException.java:133)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy159.getWareListByProductIdByFeign(Unknown Source)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:66)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$8d3f8553.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 20:54:44.030 [http-nio-8082-exec-1] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalavatar.png (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$38eb4efd.getImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 20:55:57.653 [http-nio-8081-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 20:55:57.661 [http-nio-8081-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-ware instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-ware,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 20:55:57.663 [http-nio-8081-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 20:55:57.669 [http-nio-8081-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 20:55:57.670 [http-nio-8081-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-ware initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-ware,current list of Servers=[192.168.1.25:8086],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8086;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@27395efe
2023-06-22 20:55:58.666 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 20:57:10.889 [pool-8-thread-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 20:57:10.890 [pool-8-thread-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-product instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-product,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 20:57:10.890 [pool-8-thread-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 20:57:10.891 [pool-8-thread-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 20:57:10.891 [pool-8-thread-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-product initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-product,current list of Servers=[192.168.1.25:8083],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8083;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@6ac07f5f
2023-06-22 20:57:10.909 [pool-8-thread-2] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 20:57:10.910 [pool-8-thread-2] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 20:57:10.910 [pool-8-thread-2] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 20:57:10.911 [pool-8-thread-2] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 20:57:10.911 [pool-8-thread-2] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[192.168.1.25:8082],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8082;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@1a14d6c1
2023-06-22 20:57:11.891 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 20:57:11.911 [PollingServerListUpdater-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 21:03:55.737 [http-nio-8083-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND type_parent = 'P')' at line 4
### The error may exist in edu/swu/cs/mapper/ProductMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,doctor_id,parent_id,date,offset_time,type,create_time,update_time,del_flag,status,uuid,type_parent  FROM product   WHERE  del_flag=0  AND (date BETWEEN ? AND ? AND doctor_id IN () AND type_parent = ?)
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND type_parent = 'P')' at line 4
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND type_parent = 'P')' at line 4] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND type_parent = 'P')' at line 4
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor180.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy211.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.GeneratedMethodAccessor179.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy210.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy209.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy153.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:61)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$8d3f8553.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:03:57.135 [http-nio-8083-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND type_parent = 'P')' at line 4
### The error may exist in edu/swu/cs/mapper/ProductMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,doctor_id,parent_id,date,offset_time,type,create_time,update_time,del_flag,status,uuid,type_parent  FROM product   WHERE  del_flag=0  AND (date BETWEEN ? AND ? AND doctor_id IN () AND type_parent = ?)
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND type_parent = 'P')' at line 4
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND type_parent = 'P')' at line 4] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND type_parent = 'P')' at line 4
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor180.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy211.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.GeneratedMethodAccessor179.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy210.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy209.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy153.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:61)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$8d3f8553.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:04:11.834 [http-nio-8082-exec-4] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalavatar.png (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$38eb4efd.getImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:04:13.995 [http-nio-8082-exec-1] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalavatar.png (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$38eb4efd.getImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:04:20.742 [http-nio-8082-exec-2] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalavatar.png (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$38eb4efd.getImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:06:17.692 [http-nio-8082-exec-7] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalavatar.png (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$38eb4efd.getImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:06:18.501 [http-nio-8082-exec-5] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalavatar.png (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$38eb4efd.getImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:06:22.908 [http-nio-8082-exec-9] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalavatar.png (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$38eb4efd.getImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:08:58.303 [http-nio-8082-exec-2] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalavatar.png (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$38eb4efd.getImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:08:59.477 [http-nio-8082-exec-10] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalavatar.png (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$38eb4efd.getImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:12:22.758 [http-nio-8085-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/security-auth] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 21:12:22.758 [http-nio-8085-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 21:12:22.764 [http-nio-8085-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2023-06-22 21:12:23.061 [http-nio-8085-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 21:12:23.069 [http-nio-8085-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 21:12:23.073 [http-nio-8085-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 21:12:23.079 [http-nio-8085-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 21:12:23.080 [http-nio-8085-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[192.168.1.25:8082],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8082;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@40e48255
2023-06-22 21:12:23.162 [http-nio-8085-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 21:12:23.223 [http-nio-8085-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 21:12:23.466 [http-nio-8085-exec-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 21:12:23.467 [http-nio-8085-exec-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 21:12:23.908 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 21:12:23.908 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 21:12:23.908 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 21:12:23.908 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 21:12:23.908 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 21:12:23.909 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 21:12:23.910 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 21:12:23.959 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":30,"avatar":"https:tupian.png","deptId":"1","deptName":"全身、专病","email":"111@qq.com","id":"26","introduce":"","phonenumber":"15262728193","realName":"d","sex":"0","title":"普通医生"},{"amount":30,"avatar":"www.nichelle-cartwright.org","deptId":"35","deptName":"肿瘤科普通门诊","email":"teodora.waters@gmail.com","id":"27","introduce":"踏实一个属是","phonenumber":"15926833215","realName":"邹立轩","sex":"0","title":"普通医生","userName":"zhoulixuan01"},{"amount":30,"avatar":"www.rosemarie-pfannerstill.info","deptId":"12","deptName":"眼科","email":"shad.hermiston@hotmail.com","id":"31","introduce":"","phonenumber":"17639344024","realName":"田昊焱","sex":"0","title":"普通医生"},{"amount":30,"avatar":"www.ferdinand-jones.biz","deptId":"12","deptName":"眼科","email":"rhea.swaniawski@gmail.com","id":"32","introduce":"","phonenumber":"13558346837","realName":"林俊驰","sex":"0","title":"普通医生"},{"amount":30,"avatar":"www.kyle-aufderhar.info","deptId":"12","deptName":"眼科","email":"burl.weimann@hotmail.com","id":"33","introduce":"","phonenumber":"15962317006","realName":"陈立辉","sex":"0","title":"普通医生"},{"amount":30,"avatar":"www.mario-paucek.net","deptId":"12","deptName":"眼科","email":"porsha.kuhlman@hotmail.com","id":"34","introduce":"","phonenumber":"14504956827","realName":"贾立果","sex":"0","title":"普通医生"},{"amount":30,"avatar":"www.theodora-dicki.info","deptId":"13","deptName":"口腔科","email":"jaimie.prohaska@yahoo.com","id":"35","introduce":"","phonenumber":"15056424974","realName":"胡鸿煊","sex":"0","title":"普通医生"},{"amount":30,"avatar":"www.selma-lesch.org","deptId":"13","deptName":"口腔科","email":"felisha.moen@hotmail.com","id":"36","introduce":"","phonenumber":"17065511711","realName":"曾锦程","sex":"0","title":"普通医生"},{"amount":30,"avatar":"www.doug-gleichner.info","deptId":"13","deptName":"口腔科","email":"ignacio.johnson@yahoo.com","id":"37","introduce":"","phonenumber":"18668051311","realName":"冯峻熙","sex":"0","title":"普通医生"},{"amount":30,"avatar":"www.jeremy-jacobi.net","deptId":"13","deptName":"口腔科","email":"emerson.schamberger@gmail.com","id":"38","introduce":"","phonenumber":"17799828745","realName":"丁伟宸","sex":"0","title":"普通医生"}],"pageNum":"1","pageSize":"10","pageTotal":5.0},"msg":"操作成功"}
2023-06-22 21:12:23.959 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 21:12:24.075 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 21:17:11.832 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 21:17:11.832 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 21:17:11.832 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 21:17:11.832 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 21:17:11.832 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 21:17:11.833 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 21:17:11.833 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 21:17:11.839 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 21:17:11.839 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 21:17:39.047 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 21:17:39.048 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 21:17:39.048 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 21:17:39.048 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 21:17:39.048 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 21:17:39.048 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 21:17:39.048 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 21:17:39.051 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"82","realName":"丁真","sex":"0","title":"普通医生","userName":"dingzhen01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 21:17:39.051 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 21:22:08.395 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 21:22:08.397 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 21:22:08.399 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 21:22:08.532 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 21:22:08.533 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 21:22:12.543 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 21:22:12.634 [main] INFO  edu.swu.cs.UserApplication - No active profile set, falling back to default profiles: default
2023-06-22 21:22:13.333 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 21:22:13.334 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 21:22:13.352 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9ms. Found 0 repository interfaces.
2023-06-22 21:22:13.386 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 21:22:13.404 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 21:22:13.500 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=8fadee14-3e67-3619-a278-addf4941a8f7
2023-06-22 21:22:13.599 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 21:22:13.695 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 21:22:13.697 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 21:22:13.698 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7ab1127c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 21:22:13.700 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 21:22:13.702 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 21:22:13.730 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 21:22:13.891 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2023-06-22 21:22:13.896 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2023-06-22 21:22:13.897 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 21:22:13.897 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 21:22:13.943 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-user] - Initializing Spring embedded WebApplicationContext
2023-06-22 21:22:13.943 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1292 ms
2023-06-22 21:22:14.001 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 21:22:14.001 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 21:22:14.006 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@611e5819
2023-06-22 21:22:15.205 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 21:22:15.258 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 21:22:15.286 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 21:22:15.286 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 21:22:15.336 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 21:22:15.594 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 5d3d4413-b194-4f01-a1cb-e7339b860950

2023-06-22 21:22:15.649 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1c62d2ad, org.springframework.security.web.context.SecurityContextPersistenceFilter@38c55a8a, org.springframework.security.web.header.HeaderWriterFilter@4b00d59, org.springframework.web.filter.CorsFilter@651caa2e, edu.swu.cs.filter.JwtAuthenticationTokenFilter@50dc49e1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@614cd187, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a41caed, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@433ae0b0, org.springframework.security.web.session.SessionManagementFilter@2e0163cb, org.springframework.security.web.access.ExceptionTranslationFilter@5e8bd498, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@46b21632]
2023-06-22 21:22:15.719 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 21:22:15.831 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 21:22:15.843 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 21:22:15.956 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 21:22:16.120 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2023-06-22 21:22:16.130 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path '/service-user'
2023-06-22 21:22:16.141 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-user 192.168.1.25:8082 register finished
2023-06-22 21:22:16.146 [main] INFO  edu.swu.cs.UserApplication - Started UserApplication in 4.033 seconds (JVM running for 4.475)
2023-06-22 21:22:16.467 [RMI TCP Connection(4)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 21:22:16.471 [RMI TCP Connection(5)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-user] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 21:22:16.471 [RMI TCP Connection(5)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 21:22:16.479 [RMI TCP Connection(5)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2023-06-22 21:22:16.501 [RMI TCP Connection(4)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#6169be09:0/SimpleConnection@55fc0251 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 46276]
2023-06-22 21:22:16.523 [RMI TCP Connection(4)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 21:22:16.586 [RMI TCP Connection(4)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 21:22:16.662 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 21:22:16.662 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 21:22:56.703 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 21:22:56.703 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 21:22:56.703 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 21:22:56.703 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 21:22:56.703 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 21:22:56.703 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 21:22:56.705 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 21:22:56.734 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 21:22:56.734 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 21:23:16.157 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 21:23:16.157 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 21:23:16.157 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 21:23:16.157 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 21:23:16.157 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 21:23:16.157 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 21:23:16.157 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 21:23:16.174 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"83","realName":"丁真","sex":"0","title":"普通医生","userName":"dingzhen01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 21:23:16.174 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 21:24:31.806 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 21:24:31.806 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 21:24:31.806 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 21:24:31.807 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 21:24:31.807 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 21:24:31.807 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 21:24:31.808 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 21:24:31.817 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"83","realName":"丁真","sex":"0","title":"普通医生","userName":"dingzhen01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 21:24:31.817 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 21:24:53.393 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 21:24:53.395 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 21:24:53.397 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 21:24:53.564 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 21:24:53.568 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 21:24:57.021 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 21:24:57.117 [main] INFO  edu.swu.cs.UserApplication - No active profile set, falling back to default profiles: default
2023-06-22 21:24:57.840 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 21:24:57.842 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 21:24:57.862 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8ms. Found 0 repository interfaces.
2023-06-22 21:24:57.900 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 21:24:57.923 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 21:24:58.035 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=8fadee14-3e67-3619-a278-addf4941a8f7
2023-06-22 21:24:58.156 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 21:24:58.269 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 21:24:58.271 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 21:24:58.272 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4a8ffd75' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 21:24:58.274 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 21:24:58.276 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 21:24:58.303 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 21:24:58.449 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2023-06-22 21:24:58.454 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2023-06-22 21:24:58.454 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 21:24:58.454 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 21:24:58.500 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-user] - Initializing Spring embedded WebApplicationContext
2023-06-22 21:24:58.501 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1371 ms
2023-06-22 21:24:58.558 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 21:24:58.558 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 21:24:58.562 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2443abd6
2023-06-22 21:24:59.666 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 21:24:59.759 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 21:24:59.799 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 21:24:59.799 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 21:24:59.850 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 21:25:00.160 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 8262f8f0-f08a-4cef-adee-9067306445d2

2023-06-22 21:25:00.209 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e76a66f, org.springframework.security.web.context.SecurityContextPersistenceFilter@57bd9c2b, org.springframework.security.web.header.HeaderWriterFilter@1d5048d1, org.springframework.web.filter.CorsFilter@72237be8, edu.swu.cs.filter.JwtAuthenticationTokenFilter@17134190, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49f2646, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@11170228, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5c5f12e, org.springframework.security.web.session.SessionManagementFilter@6c1bebca, org.springframework.security.web.access.ExceptionTranslationFilter@1a4cbcc6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@26bce60d]
2023-06-22 21:25:00.280 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 21:25:00.392 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 21:25:00.415 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 21:25:00.517 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 21:25:00.682 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2023-06-22 21:25:00.693 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path '/service-user'
2023-06-22 21:25:00.699 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-user 192.168.1.25:8082 register finished
2023-06-22 21:25:00.701 [main] INFO  edu.swu.cs.UserApplication - Started UserApplication in 4.119 seconds (JVM running for 4.605)
2023-06-22 21:25:01.118 [RMI TCP Connection(5)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 21:25:01.120 [RMI TCP Connection(4)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-user] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 21:25:01.121 [RMI TCP Connection(4)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 21:25:01.127 [RMI TCP Connection(4)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2023-06-22 21:25:01.136 [RMI TCP Connection(5)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#4a1a412e:0/SimpleConnection@3c282d [delegate=amqp://guest@127.0.0.1:5672/, localPort= 60292]
2023-06-22 21:25:01.154 [RMI TCP Connection(5)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 21:25:01.221 [RMI TCP Connection(5)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 21:25:01.296 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 21:25:01.297 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 21:25:35.609 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 21:25:35.609 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 21:25:35.609 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 21:25:35.609 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 21:25:35.609 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 21:25:35.609 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 21:25:35.610 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 21:25:35.636 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 21:25:35.636 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 21:25:50.027 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 21:25:50.027 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 21:25:50.027 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 21:25:50.027 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 21:25:50.027 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 21:25:50.027 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 21:25:50.027 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 21:25:50.043 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"84","realName":"丁真","sex":"0","title":"普通医生","userName":"dingzhen"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 21:25:50.043 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 21:26:50.311 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 21:26:50.312 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 21:26:50.312 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 21:26:50.312 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 21:26:50.312 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 21:26:50.312 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 21:26:50.312 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 21:26:50.334 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"84","realName":"丁真","sex":"0","title":"普通医生","userName":"dingzhen"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 21:26:50.334 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 21:26:52.938 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 21:26:52.939 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 21:26:52.939 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 21:26:52.939 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 21:26:52.939 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 21:26:52.939 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 21:26:52.939 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 21:26:52.968 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"84","realName":"丁真","sex":"0","title":"普通医生","userName":"dingzhen"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 21:26:52.968 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 21:27:08.428 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 21:27:08.428 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 21:27:08.428 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 21:27:08.428 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 21:27:08.429 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 21:27:08.429 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 21:27:08.429 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 21:27:08.432 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 21:27:08.432 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 21:27:22.566 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 21:27:22.567 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 21:27:22.567 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 21:27:22.567 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 21:27:22.567 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 21:27:22.568 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 21:27:22.568 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 21:27:22.579 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 21:27:22.579 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 21:27:24.692 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 21:27:24.693 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 21:27:24.693 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 21:27:24.693 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 21:27:24.693 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 21:27:24.693 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 21:27:24.693 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 21:27:24.696 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 21:27:24.696 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 21:27:27.989 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 21:27:27.990 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 21:27:27.990 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 21:27:27.990 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 21:27:27.990 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 21:27:27.990 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 21:27:27.990 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 21:27:27.997 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"deptId":"22","deptName":"皮肤科名医门诊","id":"84","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 21:27:27.997 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 21:28:02.945 [http-nio-8083-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 4
### The error may exist in edu/swu/cs/mapper/ProductMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,doctor_id,parent_id,date,offset_time,type,create_time,update_time,del_flag,status,uuid,type_parent  FROM product   WHERE  del_flag=0  AND (date = ? AND doctor_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 4
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 4] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 4
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor180.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy211.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.GeneratedMethodAccessor179.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy210.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy209.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy153.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at edu.swu.cs.service.impl.ProductServiceImpl.getDoctorsByDateAndArrange(ProductServiceImpl.java:161)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$8d3f8553.getDoctorsByDateAndArrange(<generated>)
	at edu.swu.cs.controller.ProductController.getDoctorsByDateAndArrange(ProductController.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:28:45.383 [http-nio-8086-exec-6] ERROR o.a.c.c.C.[.[.[/service-ware].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-ware] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
### The error may exist in edu/swu/cs/mapper/WareMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,product_id,amount,lock_amount,parent_product_id,offset_time  FROM ware     WHERE (product_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor174.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy207.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.GeneratedMethodAccessor173.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy206.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy205.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy151.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.WareServiceImpl$$EnhancerBySpringCGLIB$$446368e6.list(<generated>)
	at edu.swu.cs.controller.WareController.getWareListByProductIdByFeign(WareController.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:28:45.385 [http-nio-8083-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)] with root cause
feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)
	at feign.FeignException.serverErrorStatus(FeignException.java:195)
	at feign.FeignException.errorStatus(FeignException.java:144)
	at feign.FeignException.errorStatus(FeignException.java:133)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy159.getWareListByProductIdByFeign(Unknown Source)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:66)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$8d3f8553.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:29:14.507 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 21:29:14.508 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 21:29:14.508 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 21:29:14.508 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 21:29:14.508 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 21:29:14.508 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 21:29:14.508 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 21:29:14.519 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 21:29:14.519 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 21:30:04.415 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 21:30:04.415 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 21:30:04.416 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 21:30:04.416 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 21:30:04.416 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 21:30:04.416 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 21:30:04.416 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 21:30:04.426 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 21:30:04.426 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 21:31:20.551 [http-nio-8086-exec-1] ERROR o.a.c.c.C.[.[.[/service-ware].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-ware] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
### The error may exist in edu/swu/cs/mapper/WareMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,product_id,amount,lock_amount,parent_product_id,offset_time  FROM ware     WHERE (product_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor174.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy207.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.GeneratedMethodAccessor173.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy206.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy205.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy151.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.WareServiceImpl$$EnhancerBySpringCGLIB$$446368e6.list(<generated>)
	at edu.swu.cs.controller.WareController.getWareListByProductIdByFeign(WareController.java:62)
	at sun.reflect.GeneratedMethodAccessor203.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:31:20.553 [http-nio-8083-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)] with root cause
feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)
	at feign.FeignException.serverErrorStatus(FeignException.java:195)
	at feign.FeignException.errorStatus(FeignException.java:144)
	at feign.FeignException.errorStatus(FeignException.java:133)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy159.getWareListByProductIdByFeign(Unknown Source)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:66)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$8d3f8553.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:33:01.008 [http-nio-8086-exec-4] ERROR o.a.c.c.C.[.[.[/service-ware].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-ware] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
### The error may exist in edu/swu/cs/mapper/WareMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,product_id,amount,lock_amount,parent_product_id,offset_time  FROM ware     WHERE (product_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor174.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy207.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.GeneratedMethodAccessor173.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy206.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy205.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy151.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.WareServiceImpl$$EnhancerBySpringCGLIB$$446368e6.list(<generated>)
	at edu.swu.cs.controller.WareController.getWareListByProductIdByFeign(WareController.java:62)
	at sun.reflect.GeneratedMethodAccessor203.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:33:01.010 [http-nio-8083-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)] with root cause
feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)
	at feign.FeignException.serverErrorStatus(FeignException.java:195)
	at feign.FeignException.errorStatus(FeignException.java:144)
	at feign.FeignException.errorStatus(FeignException.java:133)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy159.getWareListByProductIdByFeign(Unknown Source)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:66)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$8d3f8553.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:34:24.956 [http-nio-8086-exec-5] ERROR o.a.c.c.C.[.[.[/service-ware].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-ware] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
### The error may exist in edu/swu/cs/mapper/WareMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,product_id,amount,lock_amount,parent_product_id,offset_time  FROM ware     WHERE (product_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor174.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy207.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.GeneratedMethodAccessor173.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy206.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy205.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy151.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.WareServiceImpl$$EnhancerBySpringCGLIB$$446368e6.list(<generated>)
	at edu.swu.cs.controller.WareController.getWareListByProductIdByFeign(WareController.java:62)
	at sun.reflect.GeneratedMethodAccessor203.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:34:24.959 [http-nio-8083-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)] with root cause
feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)
	at feign.FeignException.serverErrorStatus(FeignException.java:195)
	at feign.FeignException.errorStatus(FeignException.java:144)
	at feign.FeignException.errorStatus(FeignException.java:133)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy159.getWareListByProductIdByFeign(Unknown Source)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:66)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$8d3f8553.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.GeneratedMethodAccessor284.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:34:57.653 [http-nio-8086-exec-6] ERROR o.a.c.c.C.[.[.[/service-ware].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-ware] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
### The error may exist in edu/swu/cs/mapper/WareMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,product_id,amount,lock_amount,parent_product_id,offset_time  FROM ware     WHERE (product_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor174.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy207.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.GeneratedMethodAccessor173.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy206.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy205.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy151.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.WareServiceImpl$$EnhancerBySpringCGLIB$$446368e6.list(<generated>)
	at edu.swu.cs.controller.WareController.getWareListByProductIdByFeign(WareController.java:62)
	at sun.reflect.GeneratedMethodAccessor203.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 21:34:57.655 [http-nio-8083-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)] with root cause
feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)
	at feign.FeignException.serverErrorStatus(FeignException.java:195)
	at feign.FeignException.errorStatus(FeignException.java:144)
	at feign.FeignException.errorStatus(FeignException.java:133)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy159.getWareListByProductIdByFeign(Unknown Source)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:66)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$8d3f8553.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.GeneratedMethodAccessor284.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 22:03:19.592 [http-nio-8086-exec-9] ERROR o.a.c.c.C.[.[.[/service-ware].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-ware] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
### The error may exist in edu/swu/cs/mapper/WareMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,product_id,amount,lock_amount,parent_product_id,offset_time  FROM ware     WHERE (product_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor174.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy207.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.GeneratedMethodAccessor173.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy206.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy205.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy151.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.WareServiceImpl$$EnhancerBySpringCGLIB$$446368e6.list(<generated>)
	at edu.swu.cs.controller.WareController.getWareListByProductIdByFeign(WareController.java:62)
	at sun.reflect.GeneratedMethodAccessor203.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 22:03:19.595 [http-nio-8083-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)] with root cause
feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)
	at feign.FeignException.serverErrorStatus(FeignException.java:195)
	at feign.FeignException.errorStatus(FeignException.java:144)
	at feign.FeignException.errorStatus(FeignException.java:133)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy159.getWareListByProductIdByFeign(Unknown Source)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:66)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$8d3f8553.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.GeneratedMethodAccessor284.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 22:03:48.486 [http-nio-8086-exec-10] ERROR o.a.c.c.C.[.[.[/service-ware].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-ware] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
### The error may exist in edu/swu/cs/mapper/WareMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,product_id,amount,lock_amount,parent_product_id,offset_time  FROM ware     WHERE (product_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor174.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy207.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.GeneratedMethodAccessor173.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy206.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy205.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor177.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy151.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.WareServiceImpl$$EnhancerBySpringCGLIB$$446368e6.list(<generated>)
	at edu.swu.cs.controller.WareController.getWareListByProductIdByFeign(WareController.java:62)
	at sun.reflect.GeneratedMethodAccessor203.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 22:03:48.494 [http-nio-8083-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)] with root cause
feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)
	at feign.FeignException.serverErrorStatus(FeignException.java:195)
	at feign.FeignException.errorStatus(FeignException.java:144)
	at feign.FeignException.errorStatus(FeignException.java:133)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy159.getWareListByProductIdByFeign(Unknown Source)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:66)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$8d3f8553.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.GeneratedMethodAccessor284.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 22:08:52.580 [Thread-47] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2023-06-22 22:08:52.585 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 22:08:52.587 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 22:08:52.588 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2023-06-22 22:08:52.588 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 22:08:52.605 [Thread-69] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2023-06-22 22:08:52.613 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Waiting for workers to finish.
2023-06-22 22:08:52.623 [Thread-33] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2023-06-22 22:08:52.628 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 22:08:52.630 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 22:08:52.631 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 22:08:52.644 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 22:08:52.647 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 22:08:52.649 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 22:08:52.753 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 22:08:52.754 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 22:08:52.770 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 22:08:52.771 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 22:08:52.776 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 22:08:52.777 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 22:08:53.280 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Successfully waited for workers to finish.
2023-06-22 22:08:53.282 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Waiting for workers to finish.
2023-06-22 22:08:54.266 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Successfully waited for workers to finish.
2023-06-22 22:08:54.270 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 22:08:54.272 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 22:08:54.273 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 22:08:54.332 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 22:08:54.332 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 22:08:54.458 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 22:08:54.462 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 22:08:55.492 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:08:55.625 [main] INFO  edu.swu.cs.WareApplication - No active profile set, falling back to default profiles: default
2023-06-22 22:08:56.712 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 22:08:56.714 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 22:08:56.742 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13ms. Found 0 repository interfaces.
2023-06-22 22:08:56.834 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 22:08:56.893 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 22:08:57.081 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=becd3dfe-a69e-37f4-8283-9e23c7d67413
2023-06-22 22:08:57.108 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:08:57.218 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:08:57.231 [main] INFO  edu.swu.cs.ProductApplication - No active profile set, falling back to default profiles: default
2023-06-22 22:08:57.430 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:08:57.628 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8086 (http)
2023-06-22 22:08:57.636 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8086"]
2023-06-22 22:08:57.637 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 22:08:57.637 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 22:08:57.716 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-ware] - Initializing Spring embedded WebApplicationContext
2023-06-22 22:08:57.716 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2068 ms
2023-06-22 22:08:57.805 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:08:57.805 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:08:57.815 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@11d4d979
2023-06-22 22:08:58.124 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 22:08:58.126 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 22:08:58.144 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9ms. Found 0 repository interfaces.
2023-06-22 22:08:58.203 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 22:08:58.245 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 22:08:58.401 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=511693ec-330e-391b-890e-84a005ffebb9
2023-06-22 22:08:58.552 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:08:58.765 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:08:58.976 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8083 (http)
2023-06-22 22:08:58.984 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2023-06-22 22:08:58.984 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 22:08:58.984 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 22:08:59.069 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-product] - Initializing Spring embedded WebApplicationContext
2023-06-22 22:08:59.069 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1825 ms
2023-06-22 22:08:59.178 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:08:59.179 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:08:59.185 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7df6d663
2023-06-22 22:08:59.274 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 22:08:59.339 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:08:59.416 [redisson-netty-4-11] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:08:59.417 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:08:59.451 [main] INFO  edu.swu.cs.securityApplication - No active profile set, falling back to default profiles: default
2023-06-22 22:08:59.856 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 22:08:59.953 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 22:08:59.981 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:08:59.981 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:09:00.051 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 22:09:00.128 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 22:09:00.129 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 22:09:00.145 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8ms. Found 0 repository interfaces.
2023-06-22 22:09:00.351 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c1871298-cf47-35a1-9b15-5660b38c6b3a
2023-06-22 22:09:00.466 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:09:00.539 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 488e43a6-740f-44c4-8ef3-01b5a7607e04

2023-06-22 22:09:00.568 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:09:00.603 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77b22b05, org.springframework.security.web.context.SecurityContextPersistenceFilter@30eb55c9, org.springframework.security.web.header.HeaderWriterFilter@aa633e6, org.springframework.web.filter.CorsFilter@4fef5792, edu.swu.cs.filter.JwtAuthenticationTokenFilter@2b9e69fb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@663622b1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54caeadc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@57ed02e6, org.springframework.security.web.session.SessionManagementFilter@1ad1f167, org.springframework.security.web.access.ExceptionTranslationFilter@511d568f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@60861e5d]
2023-06-22 22:09:00.676 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:09:00.704 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 22:09:00.776 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:09:00.808 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
2023-06-22 22:09:00.817 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2023-06-22 22:09:00.818 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 22:09:00.819 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 22:09:00.841 [redisson-netty-4-18] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:09:00.841 [redisson-netty-4-19] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:09:00.856 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 22:09:00.870 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 22:09:00.888 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/security-auth] - Initializing Spring embedded WebApplicationContext
2023-06-22 22:09:00.888 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1424 ms
2023-06-22 22:09:00.899 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 22:09:01.077 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 22:09:01.115 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#89caf47:0/SimpleConnection@31859960 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 56578]
2023-06-22 22:09:01.146 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Container initialized for queues: [stock.release.stock.queue]
2023-06-22 22:09:01.151 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  o.s.a.r.listener.DirectMessageListenerContainer - SimpleConsumer [queue=stock.release.stock.queue, consumerTag=amq.ctag-KGUoRTwFnBQ95skw4ed2EQ identity=444394e9] started
2023-06-22 22:09:01.164 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8086"]
2023-06-22 22:09:01.167 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8086"]
2023-06-22 22:09:01.167 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2023-06-22 22:09:01.170 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
 io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:289)
 io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1050)
 io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:09:01.171 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:09:01.171 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [logback-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:09:01.171 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [Timer-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.util.TimerThread.mainLoop(Timer.java:552)
 java.util.TimerThread.run(Timer.java:505)
2023-06-22 22:09:01.172 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.client.listener] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
 com.alibaba.nacos.client.naming.core.EventDispatcher$Notifier.run(EventDispatcher.java:114)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:09:01.172 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.beat.sender] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:09:01.172 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.beat.sender] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:09:01.175 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.failover] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:09:01.176 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.push.receiver] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.PlainDatagramSocketImpl.receive0(Native Method)
 java.net.AbstractPlainDatagramSocketImpl.receive(AbstractPlainDatagramSocketImpl.java:143)
 java.net.DatagramSocket.receive(DatagramSocket.java:812)
 com.alibaba.nacos.client.naming.core.PushReceiver.run(PushReceiver.java:73)
 java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
 java.util.concurrent.FutureTask.run(FutureTask.java:266)
 java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
 java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:09:01.177 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8086"]
2023-06-22 22:09:01.177 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8086"]
2023-06-22 22:09:01.180 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-06-22 22:09:01.186 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Successfully waited for consumers to finish.
2023-06-22 22:09:01.186 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService
2023-06-22 22:09:01.191 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 22:09:01.192 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 22:09:01.247 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 22:09:01.293 [main] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8086 was already in use.

Action:

Identify and stop the process that's listening on port 8086 or configure this application to listen on another port.

2023-06-22 22:09:01.462 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 22:09:01.490 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:09:01.490 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:09:01.550 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 22:09:01.946 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: c71c6d06-498e-4814-976c-cd28fa234e18

2023-06-22 22:09:02.008 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@511bfbb0, org.springframework.security.web.context.SecurityContextPersistenceFilter@46b2a11a, org.springframework.security.web.header.HeaderWriterFilter@63b58ff4, org.springframework.web.filter.CorsFilter@79ee779c, edu.swu.cs.filter.JwtAuthenticationTokenFilter@426710f0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5617168c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@79a68657, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@126a9a77, org.springframework.security.web.session.SessionManagementFilter@7a0d2c80, org.springframework.security.web.access.ExceptionTranslationFilter@4a45ca1c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@56a9b662]
2023-06-22 22:09:02.086 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 22:09:02.106 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2023-06-22 22:09:02.119 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:09:02.119 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:09:02.124 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:09:02.124 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:09:02.135 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:09:02.206 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 22:09:02.327 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 22:09:02.346 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 22:09:02.379 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 22:09:02.436 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:09:02.543 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2023-06-22 22:09:02.566 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8083 (http) with context path '/service-product'
2023-06-22 22:09:02.574 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-product 192.168.1.25:8083 register finished
2023-06-22 22:09:02.576 [main] INFO  edu.swu.cs.ProductApplication - Started ProductApplication in 6.015 seconds (JVM running for 6.455)
2023-06-22 22:09:02.579 [main] INFO  edu.swu.cs.UserApplication - No active profile set, falling back to default profiles: default
2023-06-22 22:09:02.704 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4fa8bebb, org.springframework.security.web.context.SecurityContextPersistenceFilter@59d5c537, org.springframework.security.web.header.HeaderWriterFilter@618f627b, org.springframework.web.filter.CorsFilter@7d3c22a5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@15f861ee, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6afeaf2d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@369ad7da, org.springframework.security.web.session.SessionManagementFilter@5611bba, org.springframework.security.web.access.ExceptionTranslationFilter@763b0996, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@65db548]
2023-06-22 22:09:02.775 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:09:02.824 [RMI TCP Connection(3)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [localhost:5672]
2023-06-22 22:09:02.827 [RMI TCP Connection(2)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-product] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 22:09:02.828 [RMI TCP Connection(2)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 22:09:02.841 [RMI TCP Connection(2)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2023-06-22 22:09:02.854 [RMI TCP Connection(3)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#45d56062:0/SimpleConnection@1a4e20b3 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 56590]
2023-06-22 22:09:02.877 [RMI TCP Connection(3)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 22:09:02.950 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 22:09:02.966 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 22:09:02.991 [RMI TCP Connection(3)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 22:09:03.001 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 22:09:03.112 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2023-06-22 22:09:03.128 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path '/security-auth'
2023-06-22 22:09:03.137 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 22:09:03.138 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 22:09:03.140 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, security-auth 192.168.1.25:8085 register finished
2023-06-22 22:09:03.144 [main] INFO  edu.swu.cs.securityApplication - Started securityApplication in 4.279 seconds (JVM running for 4.744)
2023-06-22 22:09:03.658 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 22:09:03.660 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 22:09:03.681 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11ms. Found 0 repository interfaces.
2023-06-22 22:09:03.747 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 22:09:03.788 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 22:09:03.950 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=8fadee14-3e67-3619-a278-addf4941a8f7
2023-06-22 22:09:04.103 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:09:04.261 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:09:04.264 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:09:04.266 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1b9d9a2b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:09:04.269 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:09:04.272 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:09:04.313 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:09:04.557 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2023-06-22 22:09:04.565 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2023-06-22 22:09:04.566 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 22:09:04.566 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 22:09:04.634 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-user] - Initializing Spring embedded WebApplicationContext
2023-06-22 22:09:04.635 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2031 ms
2023-06-22 22:09:04.722 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:09:04.723 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:09:04.729 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1cbc5693
2023-06-22 22:09:05.312 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:09:05.433 [main] INFO  edu.swu.cs.OrderApplication - No active profile set, falling back to default profiles: default
2023-06-22 22:09:06.146 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 22:09:06.147 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 22:09:06.162 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8ms. Found 0 repository interfaces.
2023-06-22 22:09:06.199 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 22:09:06.225 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 22:09:06.241 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 22:09:06.305 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 22:09:06.336 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:09:06.336 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:09:06.339 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=292af892-e9b3-374c-9bee-d96fde00adf6
2023-06-22 22:09:06.390 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 22:09:06.449 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:09:06.622 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:09:06.715 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: b9d6e8d4-8861-4bea-a945-4fd02b757367

2023-06-22 22:09:06.766 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@775edae0, org.springframework.security.web.context.SecurityContextPersistenceFilter@460e5ffe, org.springframework.security.web.header.HeaderWriterFilter@2d3eecda, org.springframework.web.filter.CorsFilter@26f480c6, edu.swu.cs.filter.JwtAuthenticationTokenFilter@5599b5bb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@58b3eb1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c1bebca, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2567c091, org.springframework.security.web.session.SessionManagementFilter@6c36051c, org.springframework.security.web.access.ExceptionTranslationFilter@7b64bbad, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@e895e3e]
2023-06-22 22:09:06.784 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2023-06-22 22:09:06.790 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2023-06-22 22:09:06.791 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 22:09:06.791 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 22:09:06.842 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:09:06.852 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-order] - Initializing Spring embedded WebApplicationContext
2023-06-22 22:09:06.852 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1406 ms
2023-06-22 22:09:06.923 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:09:06.923 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:09:06.928 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@b6bccb4
2023-06-22 22:09:06.984 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 22:09:07.091 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 22:09:07.117 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 22:09:07.283 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2023-06-22 22:09:07.295 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path '/service-user'
2023-06-22 22:09:07.302 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-user 192.168.1.25:8082 register finished
2023-06-22 22:09:07.304 [main] INFO  edu.swu.cs.UserApplication - Started UserApplication in 5.353 seconds (JVM running for 5.819)
2023-06-22 22:09:07.756 [RMI TCP Connection(3)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 22:09:07.759 [RMI TCP Connection(2)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-user] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 22:09:07.759 [RMI TCP Connection(2)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 22:09:07.770 [RMI TCP Connection(2)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2023-06-22 22:09:07.781 [RMI TCP Connection(3)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#111cba40:0/SimpleConnection@54ec6da6 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 56600]
2023-06-22 22:09:07.803 [RMI TCP Connection(3)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 22:09:07.890 [RMI TCP Connection(3)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 22:09:07.969 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 22:09:07.970 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 22:09:07.971 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 22:09:08.039 [redisson-netty-4-27] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:09:08.043 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:09:08.387 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 22:09:08.441 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 22:09:08.458 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:09:08.459 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:09:08.496 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 22:09:08.743 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 81985225-f540-47a6-89a6-6874e6d44143

2023-06-22 22:09:08.789 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@47772462, org.springframework.security.web.context.SecurityContextPersistenceFilter@3093b9ff, org.springframework.security.web.header.HeaderWriterFilter@21ce2e4d, org.springframework.web.filter.CorsFilter@59929ac, edu.swu.cs.filter.JwtAuthenticationTokenFilter@591be8aa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5487a8f1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c9e6d95, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4e9bd2c8, org.springframework.security.web.session.SessionManagementFilter@62ee1c89, org.springframework.security.web.access.ExceptionTranslationFilter@14b9df65, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3c82bac3]
2023-06-22 22:09:08.854 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:09:08.963 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 22:09:08.973 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 22:09:08.999 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 22:09:09.082 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 22:09:09.097 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#31a136a6:0/SimpleConnection@50008974 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 57504]
2023-06-22 22:09:09.114 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 22:09:10.121 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 22:09:12.131 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 22:09:16.138 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 22:09:21.145 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 22:09:21.151 [main] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Broker not available; cannot force queue declarations during start: java.io.IOException
2023-06-22 22:09:21.232 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2023-06-22 22:09:21.245 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path '/service-order'
2023-06-22 22:09:21.252 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-order 192.168.1.25:8081 register finished
2023-06-22 22:09:21.254 [main] INFO  edu.swu.cs.OrderApplication - Started OrderApplication in 16.482 seconds (JVM running for 16.946)
2023-06-22 22:09:21.586 [RMI TCP Connection(5)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 22:09:21.586 [RMI TCP Connection(4)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-order] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 22:09:21.586 [RMI TCP Connection(4)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 22:09:21.593 [RMI TCP Connection(4)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2023-06-22 22:09:21.675 [RMI TCP Connection(5)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 22:09:21.790 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 22:09:21.790 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 22:09:31.050 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:09:31.061 [http-nio-8083-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 22:09:31.064 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 22:09:31.070 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:09:31.071 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[192.168.1.25:8082],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8082;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@45c5598d
2023-06-22 22:09:31.230 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:09:31.231 [http-nio-8083-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-ware instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-ware,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 22:09:31.232 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 22:09:31.233 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:09:31.234 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-ware initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-ware,current list of Servers=[192.168.1.25:8086],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8086;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@65d846cd
2023-06-22 22:09:32.066 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:09:32.233 [PollingServerListUpdater-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:09:41.500 [http-nio-8085-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/security-auth] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 22:09:41.500 [http-nio-8085-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 22:09:41.506 [http-nio-8085-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2023-06-22 22:09:41.868 [http-nio-8085-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:09:41.879 [http-nio-8085-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 22:09:41.883 [http-nio-8085-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 22:09:41.891 [http-nio-8085-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:09:41.892 [http-nio-8085-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[192.168.1.25:8082],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8082;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@87e908b
2023-06-22 22:09:42.885 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:10:28.817 [http-nio-8085-exec-3] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 22:10:28.899 [http-nio-8085-exec-3] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 22:10:29.201 [http-nio-8085-exec-3] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 22:10:29.202 [http-nio-8085-exec-3] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 22:10:29.403 [http-nio-8082-exec-4] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalundefined (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$a0ab5107.getImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 22:10:29.763 [http-nio-8081-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:10:29.772 [http-nio-8081-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-product instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-product,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 22:10:29.775 [http-nio-8081-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 22:10:29.782 [http-nio-8081-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:10:29.783 [http-nio-8081-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-product initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-product,current list of Servers=[192.168.1.25:8083],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8083;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@3f9ec178
2023-06-22 22:10:30.778 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:10:32.220 [http-nio-8082-exec-5] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalundefined (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$a0ab5107.getImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 22:10:33.368 [http-nio-8082-exec-9] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalundefined (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$a0ab5107.getImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 22:10:39.891 [http-nio-8082-exec-4] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalundefined (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$a0ab5107.getImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 22:11:29.245 [Thread-45] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2023-06-22 22:11:29.250 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 22:11:29.252 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 22:11:29.253 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2023-06-22 22:11:29.254 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 22:11:29.416 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 22:11:29.419 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 22:11:32.390 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:11:32.467 [main] INFO  edu.swu.cs.ProductApplication - No active profile set, falling back to default profiles: default
2023-06-22 22:11:33.059 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 22:11:33.060 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 22:11:33.073 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6ms. Found 0 repository interfaces.
2023-06-22 22:11:33.106 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 22:11:33.127 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 22:11:33.226 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=511693ec-330e-391b-890e-84a005ffebb9
2023-06-22 22:11:33.339 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:11:33.491 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:11:33.630 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8083 (http)
2023-06-22 22:11:33.634 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2023-06-22 22:11:33.635 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 22:11:33.635 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 22:11:33.683 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-product] - Initializing Spring embedded WebApplicationContext
2023-06-22 22:11:33.683 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1205 ms
2023-06-22 22:11:33.740 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:11:33.740 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:11:33.744 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2c604965
2023-06-22 22:11:34.676 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 22:11:34.736 [redisson-netty-4-31] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:11:34.738 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:11:34.972 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 22:11:35.102 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 22:11:35.119 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:11:35.120 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:11:35.157 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 22:11:35.393 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: ebc1b0ea-c3f2-40f6-b9de-c40a1e6fe64b

2023-06-22 22:11:35.436 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5ebfe7fa, org.springframework.security.web.context.SecurityContextPersistenceFilter@343727b5, org.springframework.security.web.header.HeaderWriterFilter@116915f1, org.springframework.web.filter.CorsFilter@5f4e389a, edu.swu.cs.filter.JwtAuthenticationTokenFilter@2fba0dac, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4c91a008, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6d4d0a14, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3ba1f56e, org.springframework.security.web.session.SessionManagementFilter@65e92505, org.springframework.security.web.access.ExceptionTranslationFilter@91a1005, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6a5c2d2d]
2023-06-22 22:11:35.478 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2023-06-22 22:11:35.491 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:11:35.575 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 22:11:35.586 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 22:11:35.614 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 22:11:35.747 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2023-06-22 22:11:35.755 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8083 (http) with context path '/service-product'
2023-06-22 22:11:35.760 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-product 192.168.1.25:8083 register finished
2023-06-22 22:11:35.762 [main] INFO  edu.swu.cs.ProductApplication - Started ProductApplication in 3.782 seconds (JVM running for 4.228)
2023-06-22 22:11:36.167 [RMI TCP Connection(2)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [localhost:5672]
2023-06-22 22:11:36.170 [RMI TCP Connection(3)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-product] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 22:11:36.170 [RMI TCP Connection(3)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 22:11:36.176 [RMI TCP Connection(3)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2023-06-22 22:11:36.186 [RMI TCP Connection(2)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#3f857e08:0/SimpleConnection@5d24d0af [delegate=amqp://guest@127.0.0.1:5672/, localPort= 56460]
2023-06-22 22:11:36.204 [RMI TCP Connection(2)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 22:11:36.273 [RMI TCP Connection(2)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 22:11:36.358 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 22:11:36.359 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 22:12:22.291 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:12:22.300 [http-nio-8083-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 22:12:22.303 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 22:12:22.309 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:12:22.310 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[192.168.1.25:8082],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8082;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@6224fb89
2023-06-22 22:12:22.427 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:12:22.428 [http-nio-8083-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-ware instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-ware,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 22:12:22.429 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 22:12:22.430 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:12:22.431 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-ware initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-ware,current list of Servers=[192.168.1.25:8086],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8086;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@24aa55a
2023-06-22 22:12:23.305 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:12:23.430 [PollingServerListUpdater-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:13:46.412 [Thread-41] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2023-06-22 22:13:46.419 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 22:13:46.421 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 22:13:46.422 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2023-06-22 22:13:46.423 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 22:13:46.591 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 22:13:46.594 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 22:13:50.235 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:13:50.311 [main] INFO  edu.swu.cs.ProductApplication - No active profile set, falling back to default profiles: default
2023-06-22 22:13:50.908 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 22:13:50.909 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 22:13:50.921 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6ms. Found 0 repository interfaces.
2023-06-22 22:13:50.958 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 22:13:50.978 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 22:13:51.087 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=511693ec-330e-391b-890e-84a005ffebb9
2023-06-22 22:13:51.199 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:13:51.354 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:13:51.500 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8083 (http)
2023-06-22 22:13:51.506 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2023-06-22 22:13:51.506 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 22:13:51.506 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 22:13:51.553 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-product] - Initializing Spring embedded WebApplicationContext
2023-06-22 22:13:51.553 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1232 ms
2023-06-22 22:13:51.609 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:13:51.609 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:13:51.613 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4dfdfe7d
2023-06-22 22:13:52.538 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 22:13:52.599 [redisson-netty-4-27] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:13:52.602 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:13:52.867 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 22:13:53.006 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 22:13:53.026 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:13:53.026 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:13:53.065 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 22:13:53.299 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 9a6d9941-f2ef-40ac-a686-8b1ff43e66f3

2023-06-22 22:13:53.341 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4177d422, org.springframework.security.web.context.SecurityContextPersistenceFilter@3691d4da, org.springframework.security.web.header.HeaderWriterFilter@6da9541c, org.springframework.web.filter.CorsFilter@7bde704a, edu.swu.cs.filter.JwtAuthenticationTokenFilter@66234b0f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7a0d2c80, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@efa04b5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@12f3fcd, org.springframework.security.web.session.SessionManagementFilter@83e5898, org.springframework.security.web.access.ExceptionTranslationFilter@76d0a290, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3ca6bd01]
2023-06-22 22:13:53.383 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2023-06-22 22:13:53.397 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:13:53.492 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 22:13:53.506 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 22:13:53.535 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 22:13:53.653 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2023-06-22 22:13:53.662 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8083 (http) with context path '/service-product'
2023-06-22 22:13:53.668 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-product 192.168.1.25:8083 register finished
2023-06-22 22:13:53.671 [main] INFO  edu.swu.cs.ProductApplication - Started ProductApplication in 3.841 seconds (JVM running for 4.292)
2023-06-22 22:13:54.000 [RMI TCP Connection(3)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [localhost:5672]
2023-06-22 22:13:54.002 [RMI TCP Connection(2)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-product] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 22:13:54.002 [RMI TCP Connection(2)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 22:13:54.010 [RMI TCP Connection(2)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2023-06-22 22:13:54.026 [RMI TCP Connection(3)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#168142da:0/SimpleConnection@1f1c5e55 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 37390]
2023-06-22 22:13:54.052 [RMI TCP Connection(3)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 22:13:54.123 [RMI TCP Connection(3)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 22:13:54.207 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 22:13:54.208 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 22:14:10.877 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:14:10.884 [http-nio-8083-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 22:14:10.887 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 22:14:10.893 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:14:10.894 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[192.168.1.25:8082],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8082;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@393da5c1
2023-06-22 22:14:11.007 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:14:11.008 [http-nio-8083-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-ware instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-ware,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 22:14:11.009 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 22:14:11.009 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:14:11.010 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-ware initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-ware,current list of Servers=[192.168.1.25:8086],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8086;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@64536224
2023-06-22 22:14:11.889 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:14:12.009 [PollingServerListUpdater-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:14:48.127 [Thread-41] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2023-06-22 22:14:48.131 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 22:14:48.133 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 22:14:48.133 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2023-06-22 22:14:48.134 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 22:14:48.288 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 22:14:48.292 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 22:14:51.096 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:14:51.171 [main] INFO  edu.swu.cs.ProductApplication - No active profile set, falling back to default profiles: default
2023-06-22 22:14:51.766 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 22:14:51.767 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 22:14:51.779 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6ms. Found 0 repository interfaces.
2023-06-22 22:14:51.818 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 22:14:51.838 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 22:14:51.939 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=511693ec-330e-391b-890e-84a005ffebb9
2023-06-22 22:14:52.051 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:14:52.204 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:14:52.344 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8083 (http)
2023-06-22 22:14:52.348 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2023-06-22 22:14:52.349 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 22:14:52.349 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 22:14:52.398 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-product] - Initializing Spring embedded WebApplicationContext
2023-06-22 22:14:52.398 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1217 ms
2023-06-22 22:14:52.453 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:14:52.453 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:14:52.457 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@11d4d979
2023-06-22 22:14:53.368 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 22:14:53.429 [redisson-netty-4-27] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:14:53.432 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:14:53.744 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 22:14:53.798 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 22:14:53.817 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:14:53.817 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:14:53.854 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 22:14:54.101 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: c2311f39-f5af-4bc6-8fd0-b40137c98b63

2023-06-22 22:14:54.142 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@23263ba, org.springframework.security.web.context.SecurityContextPersistenceFilter@2fcffc05, org.springframework.security.web.header.HeaderWriterFilter@41581c3f, org.springframework.web.filter.CorsFilter@3ca6bd01, edu.swu.cs.filter.JwtAuthenticationTokenFilter@762bf32d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@29394966, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3691d4da, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5acd7d1c, org.springframework.security.web.session.SessionManagementFilter@116915f1, org.springframework.security.web.access.ExceptionTranslationFilter@7bfcc108, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@ae74eef]
2023-06-22 22:14:54.186 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2023-06-22 22:14:54.199 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:14:54.286 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 22:14:54.297 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 22:14:54.325 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 22:14:54.444 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2023-06-22 22:14:54.452 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8083 (http) with context path '/service-product'
2023-06-22 22:14:54.458 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-product 192.168.1.25:8083 register finished
2023-06-22 22:14:54.460 [main] INFO  edu.swu.cs.ProductApplication - Started ProductApplication in 3.776 seconds (JVM running for 4.18)
2023-06-22 22:14:54.902 [RMI TCP Connection(2)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [localhost:5672]
2023-06-22 22:14:54.904 [RMI TCP Connection(3)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-product] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 22:14:54.904 [RMI TCP Connection(3)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 22:14:54.910 [RMI TCP Connection(3)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2023-06-22 22:14:54.924 [RMI TCP Connection(2)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#5df6163a:0/SimpleConnection@18b14aff [delegate=amqp://guest@127.0.0.1:5672/, localPort= 41658]
2023-06-22 22:14:54.943 [RMI TCP Connection(2)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 22:14:55.014 [RMI TCP Connection(2)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 22:14:55.095 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 22:14:55.096 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 22:15:07.913 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:15:07.922 [http-nio-8083-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 22:15:07.925 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 22:15:07.930 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:15:07.931 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[192.168.1.25:8082],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8082;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@68705a9e
2023-06-22 22:15:08.046 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:15:08.047 [http-nio-8083-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-ware instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-ware,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 22:15:08.048 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 22:15:08.049 [http-nio-8083-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:15:08.049 [http-nio-8083-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-ware initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-ware,current list of Servers=[192.168.1.25:8086],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8086;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@51a77b4f
2023-06-22 22:15:08.927 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:15:09.049 [PollingServerListUpdater-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:17:57.067 [http-nio-8081-exec-3] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:17:57.068 [http-nio-8081-exec-3] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-ware instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-ware,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 22:17:57.069 [http-nio-8081-exec-3] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 22:17:57.069 [http-nio-8081-exec-3] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:17:57.070 [http-nio-8081-exec-3] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-ware initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-ware,current list of Servers=[192.168.1.25:8086],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8086;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@13010423
2023-06-22 22:17:58.070 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:18:50.001 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:18:50.001 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:18:50.001 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:18:50.001 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:18:50.001 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:18:50.002 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:18:50.004 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:18:50.037 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 22:18:50.037 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:19:44.519 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:19:44.519 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:19:44.519 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:19:44.519 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:19:44.520 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:19:44.520 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:19:44.520 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:19:44.558 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":0,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:19:44.558 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:20:05.890 [http-nio-8081-exec-7] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:20:05.890 [http-nio-8081-exec-7] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 22:20:05.891 [http-nio-8081-exec-7] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 22:20:05.891 [http-nio-8081-exec-7] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:20:05.892 [http-nio-8081-exec-7] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[192.168.1.25:8082],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8082;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@20493424
2023-06-22 22:20:06.892 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:21:38.422 [http-nio-8081-exec-8] ERROR o.a.c.c.C.[.[.[/service-order].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-order] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at edu.swu.cs.service.impl.OrderInfoServiceImpl.getOrderByID(OrderInfoServiceImpl.java:86)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$FastClassBySpringCGLIB$$d3709f65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$EnhancerBySpringCGLIB$$5328f755.getOrderByID(<generated>)
	at edu.swu.cs.controller.OrderInfoController.getOrderByID(OrderInfoController.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 22:22:48.511 [http-nio-8081-exec-5] ERROR o.a.c.c.C.[.[.[/service-order].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-order] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at edu.swu.cs.service.impl.OrderInfoServiceImpl.getOrderByID(OrderInfoServiceImpl.java:86)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$FastClassBySpringCGLIB$$d3709f65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$EnhancerBySpringCGLIB$$5328f755.getOrderByID(<generated>)
	at edu.swu.cs.controller.OrderInfoController.getOrderByID(OrderInfoController.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 22:23:38.028 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:23:38.028 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:23:38.029 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:23:38.029 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:23:38.029 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:23:38.029 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:23:38.029 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:23:38.045 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":0,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:23:38.045 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:23:46.202 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:23:46.203 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:23:46.203 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:23:46.203 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:23:46.203 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:23:46.203 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:23:46.203 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:23:46.218 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":11,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:23:46.218 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:23:47.650 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:23:47.650 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:23:47.650 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:23:47.651 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:23:47.651 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:23:47.651 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:23:47.651 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:23:47.666 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":11,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:23:47.666 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:24:22.361 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:24:22.361 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:24:22.361 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:24:22.361 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:24:22.361 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:24:22.362 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:24:22.362 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:24:22.365 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":11,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:24:22.365 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:24:25.415 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:24:25.415 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:24:25.415 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:24:25.415 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:24:25.415 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:24:25.415 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:24:25.415 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:24:25.420 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":11,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:24:25.420 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:24:40.184 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:24:40.185 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:24:40.185 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:24:40.185 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:24:40.185 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:24:40.185 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:24:40.185 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:24:40.192 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":11,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:24:40.192 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:24:42.337 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:24:42.337 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:24:42.338 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:24:42.338 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:24:42.338 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:24:42.338 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:24:42.338 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:24:42.357 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":11,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:24:42.357 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:24:58.688 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:24:58.689 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:24:58.689 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:24:58.689 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:24:58.689 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:24:58.689 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:24:58.689 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:24:58.692 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":11,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:24:58.692 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:25:01.513 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:25:01.513 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:25:01.513 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:25:01.513 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:25:01.514 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:25:01.514 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:25:01.514 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:25:01.528 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":11,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:25:01.528 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:25:03.616 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:25:03.616 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:25:03.616 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:25:03.616 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:25:03.616 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:25:03.616 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:25:03.617 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:25:03.623 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":11,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:25:03.623 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:25:08.733 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:25:08.733 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:25:08.733 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:25:08.733 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:25:08.733 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:25:08.733 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:25:08.733 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:25:08.740 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:25:08.740 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:25:21.815 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:25:21.815 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:25:21.815 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:25:21.815 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:25:21.815 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:25:21.815 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:25:21.815 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:25:21.820 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:25:21.820 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:25:34.794 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:25:34.795 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:25:34.795 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:25:34.795 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:25:34.795 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:25:34.795 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:25:34.795 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:25:34.804 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:25:34.804 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:25:55.847 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:25:55.847 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:25:55.847 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:25:55.847 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:25:55.847 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:25:55.847 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:25:55.848 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:25:55.859 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:25:55.859 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:26:23.525 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:26:23.525 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:26:23.525 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:26:23.525 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:26:23.525 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:26:23.525 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:26:23.525 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:26:23.537 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:26:23.537 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:26:29.638 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:26:29.638 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:26:29.639 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:26:29.639 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:26:29.639 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:26:29.639 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:26:29.639 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:26:29.654 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:26:29.655 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:26:51.003 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:26:51.003 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:26:51.003 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:26:51.003 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:26:51.003 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:26:51.003 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:26:51.003 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:26:51.006 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:26:51.007 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:26:54.733 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:26:54.734 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:26:54.734 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:26:54.734 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:26:54.734 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:26:54.734 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:26:54.734 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:26:54.746 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:26:54.746 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:27:18.308 [Thread-66] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2023-06-22 22:27:18.312 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Waiting for workers to finish.
2023-06-22 22:27:18.374 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Successfully waited for workers to finish.
2023-06-22 22:27:18.375 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Waiting for workers to finish.
2023-06-22 22:27:18.733 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Successfully waited for workers to finish.
2023-06-22 22:27:18.737 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 22:27:18.739 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 22:27:18.741 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 22:27:18.776 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 22:27:18.777 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 22:27:18.893 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 22:27:18.896 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 22:27:22.442 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:27:22.522 [main] INFO  edu.swu.cs.OrderApplication - No active profile set, falling back to default profiles: default
2023-06-22 22:27:23.089 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 22:27:23.090 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 22:27:23.104 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7ms. Found 0 repository interfaces.
2023-06-22 22:27:23.138 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 22:27:23.157 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 22:27:23.260 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=292af892-e9b3-374c-9bee-d96fde00adf6
2023-06-22 22:27:23.366 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:27:23.523 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:27:23.659 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2023-06-22 22:27:23.663 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2023-06-22 22:27:23.664 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 22:27:23.664 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 22:27:23.711 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-order] - Initializing Spring embedded WebApplicationContext
2023-06-22 22:27:23.711 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1177 ms
2023-06-22 22:27:23.771 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:27:23.771 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:27:23.775 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6c33da7a
2023-06-22 22:27:24.715 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 22:27:24.775 [redisson-netty-4-4] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:27:24.778 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:27:25.101 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 22:27:25.165 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 22:27:25.186 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:27:25.187 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:27:25.233 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 22:27:25.487 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 7201dff8-a865-4051-94cb-0da021c54e82

2023-06-22 22:27:25.528 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@20a4cba7, org.springframework.security.web.context.SecurityContextPersistenceFilter@6f36267d, org.springframework.security.web.header.HeaderWriterFilter@3a8ead9, org.springframework.web.filter.CorsFilter@10f10230, edu.swu.cs.filter.JwtAuthenticationTokenFilter@4d0e1a9a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5cd6719d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7ebaf0d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3dec769, org.springframework.security.web.session.SessionManagementFilter@28c7fd9d, org.springframework.security.web.access.ExceptionTranslationFilter@3c68e82, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@998fbd4]
2023-06-22 22:27:25.578 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:27:25.684 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 22:27:25.696 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 22:27:25.726 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 22:27:25.827 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 22:27:25.842 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#426131d7:0/SimpleConnection@2761156e [delegate=amqp://guest@127.0.0.1:5672/, localPort= 35398]
2023-06-22 22:27:25.858 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 22:27:26.865 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 22:27:28.871 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 22:27:32.327 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:27:32.410 [main] INFO  edu.swu.cs.WareApplication - No active profile set, falling back to default profiles: default
2023-06-22 22:27:32.874 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 22:27:33.000 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 22:27:33.001 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 22:27:33.015 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6ms. Found 0 repository interfaces.
2023-06-22 22:27:33.048 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 22:27:33.068 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 22:27:33.174 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=becd3dfe-a69e-37f4-8283-9e23c7d67413
2023-06-22 22:27:33.282 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:27:33.438 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:27:33.581 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8086 (http)
2023-06-22 22:27:33.587 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8086"]
2023-06-22 22:27:33.587 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 22:27:33.587 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 22:27:33.634 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-ware] - Initializing Spring embedded WebApplicationContext
2023-06-22 22:27:33.635 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1215 ms
2023-06-22 22:27:33.691 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:27:33.691 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:27:33.695 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1cb9ef52
2023-06-22 22:27:34.492 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 22:27:34.562 [redisson-netty-4-7] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:27:34.565 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:27:34.801 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 22:27:34.860 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 22:27:34.880 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:27:34.880 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:27:34.921 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 22:27:35.242 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: b6c2d8eb-918a-4302-a772-936810dbda79

2023-06-22 22:27:35.284 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@55a055cc, org.springframework.security.web.context.SecurityContextPersistenceFilter@38fc34fd, org.springframework.security.web.header.HeaderWriterFilter@4a5d5b38, org.springframework.web.filter.CorsFilter@1ab1d93d, edu.swu.cs.filter.JwtAuthenticationTokenFilter@7ead1d80, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@625db0e0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2358443e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@57167ccb, org.springframework.security.web.session.SessionManagementFilter@15bb8ed5, org.springframework.security.web.access.ExceptionTranslationFilter@4c5e4bfa, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6081f330]
2023-06-22 22:27:35.337 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:27:35.400 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:27:35.445 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 22:27:35.457 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 22:27:35.487 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 22:27:35.582 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 22:27:35.596 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#1a531422:0/SimpleConnection@75784062 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 41792]
2023-06-22 22:27:35.613 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Container initialized for queues: [stock.release.stock.queue]
2023-06-22 22:27:35.617 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  o.s.a.r.listener.DirectMessageListenerContainer - SimpleConsumer [queue=stock.release.stock.queue, consumerTag=amq.ctag-W8x32LFgptrBOxHyHkuL8A identity=3a567bd6] started
2023-06-22 22:27:35.624 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8086"]
2023-06-22 22:27:35.626 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8086"]
2023-06-22 22:27:35.626 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2023-06-22 22:27:35.628 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
 io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:289)
 io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1050)
 io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:27:35.628 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:27:35.628 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [logback-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:27:35.629 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [Timer-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.util.TimerThread.mainLoop(Timer.java:552)
 java.util.TimerThread.run(Timer.java:505)
2023-06-22 22:27:35.629 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.client.listener] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
 com.alibaba.nacos.client.naming.core.EventDispatcher$Notifier.run(EventDispatcher.java:114)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:27:35.629 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.beat.sender] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:27:35.629 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.beat.sender] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:27:35.630 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.failover] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:27:35.630 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.push.receiver] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.PlainDatagramSocketImpl.receive0(Native Method)
 java.net.AbstractPlainDatagramSocketImpl.receive(AbstractPlainDatagramSocketImpl.java:143)
 java.net.DatagramSocket.receive(DatagramSocket.java:812)
 com.alibaba.nacos.client.naming.core.PushReceiver.run(PushReceiver.java:73)
 java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
 java.util.concurrent.FutureTask.run(FutureTask.java:266)
 java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
 java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:27:35.631 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8086"]
2023-06-22 22:27:35.631 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8086"]
2023-06-22 22:27:35.632 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-06-22 22:27:35.635 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Successfully waited for consumers to finish.
2023-06-22 22:27:35.635 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService
2023-06-22 22:27:35.638 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 22:27:35.639 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 22:27:35.690 [main] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8086 was already in use.

Action:

Identify and stop the process that's listening on port 8086 or configure this application to listen on another port.

2023-06-22 22:27:37.880 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 22:27:37.886 [main] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Broker not available; cannot force queue declarations during start: java.io.IOException
2023-06-22 22:27:37.964 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2023-06-22 22:27:37.977 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path '/service-order'
2023-06-22 22:27:37.983 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-order 192.168.1.25:8081 register finished
2023-06-22 22:27:37.986 [main] INFO  edu.swu.cs.OrderApplication - Started OrderApplication in 15.951 seconds (JVM running for 16.347)
2023-06-22 22:27:38.465 [RMI TCP Connection(4)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 22:27:38.466 [RMI TCP Connection(5)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-order] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 22:27:38.466 [RMI TCP Connection(5)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 22:27:38.472 [RMI TCP Connection(5)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2023-06-22 22:27:38.558 [RMI TCP Connection(4)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 22:27:38.634 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 22:27:38.635 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 22:28:48.361 [http-nio-8081-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:28:48.368 [http-nio-8081-exec-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 22:28:48.371 [http-nio-8081-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 22:28:48.377 [http-nio-8081-exec-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:28:48.378 [http-nio-8081-exec-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[192.168.1.25:8082],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8082;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@584985c1
2023-06-22 22:28:48.408 [pool-7-thread-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:28:48.409 [pool-7-thread-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-product instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-product,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 22:28:48.410 [pool-7-thread-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 22:28:48.411 [pool-7-thread-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:28:48.412 [pool-7-thread-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-product initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-product,current list of Servers=[192.168.1.25:8083],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8083;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@3ba0a70d
2023-06-22 22:28:49.373 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:28:49.411 [PollingServerListUpdater-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:29:12.409 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:29:12.409 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:29:12.410 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:29:12.410 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:29:12.410 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:29:12.410 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:29:12.410 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:29:12.422 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:29:12.422 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:29:52.441 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:29:52.441 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:29:52.441 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:29:52.441 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:29:52.441 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:29:52.441 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:29:52.441 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 22:29:52.452 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:29:52.452 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:29:54.938 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:29:54.939 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:29:54.939 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:29:54.939 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:29:54.939 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:29:54.939 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:29:54.939 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:29:54.941 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:29:54.942 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:30:47.932 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:30:47.932 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:30:47.933 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:30:47.933 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:30:47.933 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:30:47.933 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:30:47.933 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:30:47.947 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:30:47.947 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:30:54.811 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:30:54.811 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:30:54.811 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:30:54.811 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:30:54.811 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:30:54.811 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:30:54.811 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:30:54.826 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:30:54.826 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:31:07.590 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:31:07.590 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:31:07.590 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:31:07.590 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:31:07.590 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:31:07.590 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:31:07.590 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:31:07.593 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:31:07.593 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:31:12.249 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:31:12.249 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:31:12.249 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:31:12.249 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:31:12.249 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:31:12.249 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:31:12.249 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:31:12.260 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:31:12.260 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:31:15.537 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:31:15.537 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:31:15.537 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:31:15.537 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:31:15.537 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:31:15.537 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:31:15.537 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:31:15.541 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:31:15.541 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:32:43.273 [Thread-65] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2023-06-22 22:32:43.279 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Waiting for workers to finish.
2023-06-22 22:32:43.982 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Successfully waited for workers to finish.
2023-06-22 22:32:43.985 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Waiting for workers to finish.
2023-06-22 22:32:43.988 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Successfully waited for workers to finish.
2023-06-22 22:32:43.995 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 22:32:44.001 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 22:32:44.006 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 22:32:44.058 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 22:32:44.058 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 22:32:44.185 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 22:32:44.188 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 22:32:47.364 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:32:47.456 [main] INFO  edu.swu.cs.OrderApplication - No active profile set, falling back to default profiles: default
2023-06-22 22:32:48.058 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 22:32:48.059 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 22:32:48.073 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8ms. Found 0 repository interfaces.
2023-06-22 22:32:48.107 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 22:32:48.128 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 22:32:48.235 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=292af892-e9b3-374c-9bee-d96fde00adf6
2023-06-22 22:32:48.333 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:32:48.463 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:32:48.607 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2023-06-22 22:32:48.612 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2023-06-22 22:32:48.612 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 22:32:48.612 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 22:32:48.660 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-order] - Initializing Spring embedded WebApplicationContext
2023-06-22 22:32:48.660 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1192 ms
2023-06-22 22:32:48.718 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:32:48.718 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:32:48.723 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6da4feeb
2023-06-22 22:32:49.644 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 22:32:49.705 [redisson-netty-4-2] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:32:49.707 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:32:49.995 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 22:32:50.048 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 22:32:50.066 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:32:50.066 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:32:50.101 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 22:32:50.328 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: a2bd3921-5e40-46d5-a68e-c7a6dea1af73

2023-06-22 22:32:50.366 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6f36267d, org.springframework.security.web.context.SecurityContextPersistenceFilter@323eecf8, org.springframework.security.web.header.HeaderWriterFilter@42db955e, org.springframework.web.filter.CorsFilter@788a0513, edu.swu.cs.filter.JwtAuthenticationTokenFilter@2cee5365, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@96075c0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@838e109, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@d65e744, org.springframework.security.web.session.SessionManagementFilter@1b10f60e, org.springframework.security.web.access.ExceptionTranslationFilter@43cbafa6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1e66bf2d]
2023-06-22 22:32:50.417 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:32:50.517 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 22:32:50.528 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 22:32:50.558 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 22:32:50.654 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 22:32:50.667 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#2d313c8c:0/SimpleConnection@72b53f27 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 35956]
2023-06-22 22:32:50.684 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 22:32:51.691 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 22:32:53.701 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 22:32:57.710 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 22:33:02.720 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 22:33:02.725 [main] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Broker not available; cannot force queue declarations during start: java.io.IOException
2023-06-22 22:33:02.748 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2023-06-22 22:33:02.757 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path '/service-order'
2023-06-22 22:33:02.763 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-order 192.168.1.25:8081 register finished
2023-06-22 22:33:02.765 [main] INFO  edu.swu.cs.OrderApplication - Started OrderApplication in 15.825 seconds (JVM running for 16.225)
2023-06-22 22:33:02.795 [RMI TCP Connection(3)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-order] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 22:33:02.795 [RMI TCP Connection(3)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 22:33:02.795 [RMI TCP Connection(4)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 22:33:02.802 [RMI TCP Connection(3)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2023-06-22 22:33:02.873 [RMI TCP Connection(4)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 22:33:02.953 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 22:33:02.954 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 22:33:06.703 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:33:06.704 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:33:06.704 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:33:06.704 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:33:06.704 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:33:06.704 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:33:06.704 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:33:06.710 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:33:06.710 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:33:10.662 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:33:10.662 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:33:10.663 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:33:10.663 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:33:10.663 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:33:10.663 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:33:10.663 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:33:10.674 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:33:10.674 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:33:15.331 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:33:15.332 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:33:15.332 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:33:15.332 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:33:15.332 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:33:15.332 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:33:15.332 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:33:15.337 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 22:33:15.337 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:33:16.818 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:33:16.818 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:33:16.819 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:33:16.819 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:33:16.819 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:33:16.819 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:33:16.819 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:33:16.825 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 22:33:16.826 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:33:28.649 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:33:28.649 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:33:28.650 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:33:28.650 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:33:28.650 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:33:28.650 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:33:28.650 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 22:33:28.663 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:33:28.663 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:33:32.277 [pool-7-thread-2] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:33:32.284 [pool-7-thread-2] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 22:33:32.287 [pool-7-thread-2] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 22:33:32.292 [pool-7-thread-2] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:33:32.293 [pool-7-thread-2] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-user,current list of Servers=[192.168.1.25:8082],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8082;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@68d84d82
2023-06-22 22:33:32.325 [pool-7-thread-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:33:32.325 [pool-7-thread-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-product instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-product,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 22:33:32.326 [pool-7-thread-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 22:33:32.327 [pool-7-thread-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:33:32.328 [pool-7-thread-1] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-product initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-product,current list of Servers=[192.168.1.25:8083],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8083;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@4130b0d3
2023-06-22 22:33:33.289 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:33:33.327 [PollingServerListUpdater-1] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:34:12.706 [http-nio-8081-exec-4] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:34:12.707 [http-nio-8081-exec-4] INFO  com.netflix.loadbalancer.BaseLoadBalancer - Client: service-ware instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-ware,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2023-06-22 22:34:12.707 [http-nio-8081-exec-4] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
2023-06-22 22:34:12.708 [http-nio-8081-exec-4] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:34:12.709 [http-nio-8081-exec-4] INFO  c.n.loadbalancer.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client service-ware initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=service-ware,current list of Servers=[192.168.1.25:8086],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.25:8086;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.alibaba.nacos.ribbon.NacosServerList@213d8cf6
2023-06-22 22:34:13.708 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty - Flipping property: service-ware.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2023-06-22 22:34:23.900 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:34:23.900 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:34:23.900 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:34:23.900 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:34:23.900 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:34:23.900 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:34:23.901 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:34:23.906 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 22:34:23.906 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:34:27.354 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:34:27.354 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:34:27.354 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:34:27.354 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:34:27.354 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:34:27.354 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:34:27.354 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 22:34:27.360 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:34:27.360 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:34:31.721 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:34:31.721 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:34:31.722 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:34:31.722 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:34:31.722 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:34:31.722 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:34:31.722 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 22:34:31.736 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:34:31.737 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:35:22.678 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:35:22.757 [main] INFO  edu.swu.cs.WareApplication - No active profile set, falling back to default profiles: default
2023-06-22 22:35:23.353 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 22:35:23.354 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 22:35:23.367 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6ms. Found 0 repository interfaces.
2023-06-22 22:35:23.400 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 22:35:23.420 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 22:35:23.523 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=becd3dfe-a69e-37f4-8283-9e23c7d67413
2023-06-22 22:35:23.619 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:35:23.759 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:35:23.926 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8086 (http)
2023-06-22 22:35:23.931 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8086"]
2023-06-22 22:35:23.931 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 22:35:23.931 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 22:35:23.980 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-ware] - Initializing Spring embedded WebApplicationContext
2023-06-22 22:35:23.980 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1209 ms
2023-06-22 22:35:24.033 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:35:24.034 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:35:24.038 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3d2f3dcb
2023-06-22 22:35:24.667 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:35:24.667 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:35:24.667 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:35:24.667 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:35:24.667 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:35:24.667 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:35:24.667 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:35:24.669 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 22:35:24.669 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:35:24.867 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 22:35:24.933 [redisson-netty-4-27] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:35:24.935 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:35:25.167 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 22:35:25.219 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 22:35:25.239 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:35:25.239 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:35:25.286 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 22:35:25.629 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 0722663e-f245-48df-9ab6-9aa030b6acec

2023-06-22 22:35:25.669 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@25e796fe, org.springframework.security.web.context.SecurityContextPersistenceFilter@2b3242a5, org.springframework.security.web.header.HeaderWriterFilter@1987807b, org.springframework.web.filter.CorsFilter@62c53685, edu.swu.cs.filter.JwtAuthenticationTokenFilter@1c6e3ff9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1f293cb7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6144e499, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@29ba63f0, org.springframework.security.web.session.SessionManagementFilter@4ede8888, org.springframework.security.web.access.ExceptionTranslationFilter@4fd92289, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2d8c729f]
2023-06-22 22:35:25.722 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:35:25.787 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:35:25.837 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 22:35:25.850 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 22:35:25.877 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 22:35:25.982 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 22:35:25.996 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#5aa781f2:0/SimpleConnection@66d61298 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 50048]
2023-06-22 22:35:26.014 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Container initialized for queues: [stock.release.stock.queue]
2023-06-22 22:35:26.018 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  o.s.a.r.listener.DirectMessageListenerContainer - SimpleConsumer [queue=stock.release.stock.queue, consumerTag=amq.ctag-P_KWRFFlyn6paAXmYvCK1w identity=5ebb4a73] started
2023-06-22 22:35:26.025 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8086"]
2023-06-22 22:35:26.026 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8086"]
2023-06-22 22:35:26.026 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2023-06-22 22:35:26.029 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
 io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:289)
 io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1050)
 io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
 io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:35:26.029 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:35:26.029 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [logback-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:35:26.029 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [Timer-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.util.TimerThread.mainLoop(Timer.java:552)
 java.util.TimerThread.run(Timer.java:505)
2023-06-22 22:35:26.030 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.client.listener] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
 com.alibaba.nacos.client.naming.core.EventDispatcher$Notifier.run(EventDispatcher.java:114)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:35:26.030 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.beat.sender] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:35:26.030 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.beat.sender] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:35:26.031 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.failover] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:35:26.031 [main] WARN  org.apache.catalina.loader.WebappClassLoaderBase - The web application [service-ware] appears to have started a thread named [com.alibaba.nacos.naming.push.receiver] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.PlainDatagramSocketImpl.receive0(Native Method)
 java.net.AbstractPlainDatagramSocketImpl.receive(AbstractPlainDatagramSocketImpl.java:143)
 java.net.DatagramSocket.receive(DatagramSocket.java:812)
 com.alibaba.nacos.client.naming.core.PushReceiver.run(PushReceiver.java:73)
 java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
 java.util.concurrent.FutureTask.run(FutureTask.java:266)
 java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
 java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
2023-06-22 22:35:26.031 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8086"]
2023-06-22 22:35:26.032 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8086"]
2023-06-22 22:35:26.033 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-06-22 22:35:26.036 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Successfully waited for consumers to finish.
2023-06-22 22:35:26.036 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService
2023-06-22 22:35:26.039 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 22:35:26.040 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 22:35:26.083 [main] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8086 was already in use.

Action:

Identify and stop the process that's listening on port 8086 or configure this application to listen on another port.

2023-06-22 22:35:27.836 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:35:27.836 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:35:27.836 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:35:27.836 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:35:27.836 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:35:27.836 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:35:27.836 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 22:35:27.847 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:35:27.847 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:35:29.616 [SpringContextShutdownHook] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Successfully waited for consumers to finish.
2023-06-22 22:35:29.616 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService
2023-06-22 22:35:29.620 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 22:35:29.621 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 22:35:29.624 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 22:35:29.625 [SpringContextShutdownHook] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 22:35:29.780 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 22:35:29.781 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 22:35:33.485 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:35:33.485 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:35:33.485 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:35:33.485 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:35:33.485 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:35:33.485 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:35:33.485 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:35:33.491 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 22:35:33.491 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:35:48.362 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:35:48.449 [main] INFO  edu.swu.cs.WareApplication - No active profile set, falling back to default profiles: default
2023-06-22 22:35:49.093 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 22:35:49.094 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 22:35:49.108 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6ms. Found 0 repository interfaces.
2023-06-22 22:35:49.142 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 22:35:49.162 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 22:35:49.266 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=becd3dfe-a69e-37f4-8283-9e23c7d67413
2023-06-22 22:35:49.377 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:35:49.541 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:35:49.679 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8086 (http)
2023-06-22 22:35:49.684 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8086"]
2023-06-22 22:35:49.684 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 22:35:49.685 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 22:35:49.732 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-ware] - Initializing Spring embedded WebApplicationContext
2023-06-22 22:35:49.732 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1271 ms
2023-06-22 22:35:49.794 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:35:49.794 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:35:49.799 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@195580ba
2023-06-22 22:35:50.595 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 22:35:50.684 [redisson-netty-4-6] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:35:50.686 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:35:50.964 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 22:35:51.022 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 22:35:51.043 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:35:51.043 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:35:51.108 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 22:35:51.501 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 61b4e916-6aae-4b41-bfe9-1b59fcfb8f97

2023-06-22 22:35:51.556 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4fef5792, org.springframework.security.web.context.SecurityContextPersistenceFilter@2524d07a, org.springframework.security.web.header.HeaderWriterFilter@3cc74fc4, org.springframework.web.filter.CorsFilter@57ed02e6, edu.swu.cs.filter.JwtAuthenticationTokenFilter@19bfbe28, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1be52113, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@61d7bb61, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@39004e4f, org.springframework.security.web.session.SessionManagementFilter@608eb42e, org.springframework.security.web.access.ExceptionTranslationFilter@1805ca5c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@37d81587]
2023-06-22 22:35:51.624 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:35:51.692 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:35:51.741 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 22:35:51.753 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 22:35:51.786 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 22:35:51.902 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 22:35:51.917 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#370ef50b:0/SimpleConnection@5718e77c [delegate=amqp://guest@127.0.0.1:5672/, localPort= 56322]
2023-06-22 22:35:51.936 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Container initialized for queues: [stock.release.stock.queue]
2023-06-22 22:35:51.941 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  o.s.a.r.listener.DirectMessageListenerContainer - SimpleConsumer [queue=stock.release.stock.queue, consumerTag=amq.ctag-2miKAlpapWHWBPptp7OJYQ identity=f4ab0d8] started
2023-06-22 22:35:51.948 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8086"]
2023-06-22 22:35:51.959 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8086 (http) with context path '/service-ware'
2023-06-22 22:35:51.965 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-ware 192.168.1.25:8086 register finished
2023-06-22 22:35:51.968 [main] INFO  edu.swu.cs.WareApplication - Started WareApplication in 4.029 seconds (JVM running for 4.46)
2023-06-22 22:35:52.138 [RMI TCP Connection(3)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 22:35:52.139 [RMI TCP Connection(2)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-ware] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 22:35:52.139 [RMI TCP Connection(2)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 22:35:52.147 [RMI TCP Connection(2)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2023-06-22 22:35:52.232 [RMI TCP Connection(3)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 22:35:52.313 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 22:35:52.314 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 22:36:39.514 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:36:39.514 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:36:39.514 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:36:39.514 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:36:39.514 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:36:39.514 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:36:39.514 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:36:39.516 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 22:36:39.516 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:36:43.502 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:36:43.503 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:36:43.503 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:36:43.503 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:36:43.503 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:36:43.503 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:36:43.503 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 22:36:43.506 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:36:43.507 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:36:48.401 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:36:48.401 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:36:48.402 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:36:48.402 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:36:48.402 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:36:48.402 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:36:48.402 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:36:48.411 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:36:48.411 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:37:16.072 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:37:16.072 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:37:16.072 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:37:16.072 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:37:16.072 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:37:16.073 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:37:16.073 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:37:16.082 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:37:16.083 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:37:33.450 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:37:33.450 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:37:33.450 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:37:33.450 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:37:33.450 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:37:33.450 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:37:33.450 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:37:33.453 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"86","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:37:33.454 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:38:26.283 [SpringContextShutdownHook] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Successfully waited for consumers to finish.
2023-06-22 22:38:26.283 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService
2023-06-22 22:38:26.286 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 22:38:26.287 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 22:38:26.289 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 22:38:26.291 [SpringContextShutdownHook] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 22:38:26.431 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 22:38:26.434 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 22:38:28.009 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:38:28.009 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:38:28.009 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:38:28.009 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:38:28.010 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:38:28.010 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:38:28.010 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:38:28.012 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":11,"deptId":"22","deptName":"皮肤科名医门诊","id":"86","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:38:28.012 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:38:29.411 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:38:29.501 [main] INFO  edu.swu.cs.WareApplication - No active profile set, falling back to default profiles: default
2023-06-22 22:38:30.061 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 22:38:30.062 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 22:38:30.074 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6ms. Found 0 repository interfaces.
2023-06-22 22:38:30.106 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 22:38:30.126 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 22:38:30.226 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=becd3dfe-a69e-37f4-8283-9e23c7d67413
2023-06-22 22:38:30.332 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:38:30.486 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 22:38:30.623 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8086 (http)
2023-06-22 22:38:30.627 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8086"]
2023-06-22 22:38:30.628 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 22:38:30.628 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 22:38:30.675 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-ware] - Initializing Spring embedded WebApplicationContext
2023-06-22 22:38:30.676 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1165 ms
2023-06-22 22:38:30.731 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:38:30.731 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:38:30.735 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1cbc1dde
2023-06-22 22:38:31.523 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 22:38:31.601 [redisson-netty-4-28] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:38:31.604 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 22:38:31.844 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 22:38:31.900 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 22:38:31.919 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 22:38:31.920 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 22:38:31.968 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 22:38:32.270 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: da0abb87-9369-47cd-b905-7ad04644e413

2023-06-22 22:38:32.309 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@e7b3e54, org.springframework.security.web.context.SecurityContextPersistenceFilter@29a1ec65, org.springframework.security.web.header.HeaderWriterFilter@3dcbbbc, org.springframework.web.filter.CorsFilter@78d61f17, edu.swu.cs.filter.JwtAuthenticationTokenFilter@362a561e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@185a7dd0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3d2b13b1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4cfe9594, org.springframework.security.web.session.SessionManagementFilter@430106cf, org.springframework.security.web.access.ExceptionTranslationFilter@6fdaef04, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@679f59f1]
2023-06-22 22:38:32.366 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:38:32.425 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 22:38:32.472 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 22:38:32.483 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 22:38:32.511 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 22:38:32.609 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 22:38:32.623 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#402f8592:0/SimpleConnection@4da9da6c [delegate=amqp://guest@127.0.0.1:5672/, localPort= 38204]
2023-06-22 22:38:32.640 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Container initialized for queues: [stock.release.stock.queue]
2023-06-22 22:38:32.644 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  o.s.a.r.listener.DirectMessageListenerContainer - SimpleConsumer [queue=stock.release.stock.queue, consumerTag=amq.ctag-bwGVC2sbVY432v51umlGNQ identity=1ff66696] started
2023-06-22 22:38:32.651 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8086"]
2023-06-22 22:38:32.659 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8086 (http) with context path '/service-ware'
2023-06-22 22:38:32.665 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-ware 192.168.1.25:8086 register finished
2023-06-22 22:38:32.667 [main] INFO  edu.swu.cs.WareApplication - Started WareApplication in 3.66 seconds (JVM running for 4.097)
2023-06-22 22:38:32.786 [RMI TCP Connection(2)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-ware] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 22:38:32.787 [RMI TCP Connection(2)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 22:38:32.787 [RMI TCP Connection(3)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 22:38:32.793 [RMI TCP Connection(2)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2023-06-22 22:38:32.869 [RMI TCP Connection(3)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 22:38:32.938 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 22:38:32.939 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 22:39:43.837 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:39:43.837 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:39:43.837 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:39:43.837 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:39:43.837 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:39:43.837 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:39:43.837 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:39:43.840 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":11,"deptId":"22","deptName":"皮肤科名医门诊","id":"86","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:39:43.840 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:40:04.756 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:40:04.756 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:40:04.756 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:40:04.756 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:40:04.756 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:40:04.756 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:40:04.756 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:40:04.768 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":11,"deptId":"22","deptName":"皮肤科名医门诊","id":"86","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"87","realName":"而知","sex":"0","title":"普通医生","userName":"erzhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:40:04.768 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:40:07.166 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:40:07.166 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:40:07.166 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:40:07.166 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:40:07.166 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:40:07.166 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:40:07.166 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:40:07.172 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":11,"deptId":"22","deptName":"皮肤科名医门诊","id":"86","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"87","realName":"而知","sex":"0","title":"普通医生","userName":"erzhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:40:07.172 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:40:08.335 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:40:08.335 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:40:08.335 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:40:08.335 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:40:08.335 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:40:08.335 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:40:08.335 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:40:08.337 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":11,"deptId":"22","deptName":"皮肤科名医门诊","id":"86","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"87","realName":"而知","sex":"0","title":"普通医生","userName":"erzhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:40:08.337 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:40:55.158 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:40:55.158 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:40:55.158 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:40:55.158 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:40:55.158 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:40:55.158 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:40:55.158 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:40:55.170 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":11,"deptId":"22","deptName":"皮肤科名医门诊","id":"86","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"87","realName":"而知","sex":"0","title":"普通医生","userName":"erzhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:40:55.170 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:42:19.930 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:42:19.930 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:42:19.930 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:42:19.930 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:42:19.930 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:42:19.930 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:42:19.930 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:42:19.944 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":11,"deptId":"22","deptName":"皮肤科名医门诊","id":"86","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"87","realName":"而知","sex":"0","title":"普通医生","userName":"erzhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"88","realName":"优质","sex":"0","title":"普通医生","userName":"youzhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:42:19.944 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:42:23.404 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:42:23.404 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:42:23.405 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:42:23.405 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:42:23.405 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:42:23.405 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:42:23.405 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:42:23.412 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":11,"deptId":"22","deptName":"皮肤科名医门诊","id":"86","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"87","realName":"而知","sex":"0","title":"普通医生","userName":"erzhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"88","realName":"优质","sex":"0","title":"普通医生","userName":"youzhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:42:23.412 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:42:48.911 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:42:48.911 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:42:48.911 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:42:48.911 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:42:48.911 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:42:48.911 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:42:48.911 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:42:48.928 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":11,"deptId":"22","deptName":"皮肤科名医门诊","id":"86","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"87","realName":"而知","sex":"0","title":"普通医生","userName":"erzhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"88","realName":"优质","sex":"0","title":"普通医生","userName":"youzhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"89","realName":"大老弟","sex":"0","title":"普通医生","userName":"dalaodi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"90","realName":"大老弟","sex":"0","title":"普通医生","userName":"dalaodi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:42:48.928 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:43:52.196 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:43:52.196 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:43:52.196 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:43:52.196 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:43:52.196 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:43:52.196 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:43:52.197 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:43:52.202 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":11,"deptId":"22","deptName":"皮肤科名医门诊","id":"86","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"87","realName":"而知","sex":"0","title":"普通医生","userName":"erzhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"88","realName":"优质","sex":"0","title":"普通医生","userName":"youzhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"89","realName":"大老弟","sex":"0","title":"普通医生","userName":"dalaodi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:43:52.202 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:43:54.310 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:43:54.310 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:43:54.310 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:43:54.310 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:43:54.310 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:43:54.310 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:43:54.310 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:43:54.315 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":11,"deptId":"22","deptName":"皮肤科名医门诊","id":"86","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"87","realName":"而知","sex":"0","title":"普通医生","userName":"erzhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"88","realName":"优质","sex":"0","title":"普通医生","userName":"youzhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:43:54.315 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:43:57.205 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:43:57.205 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:43:57.205 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:43:57.205 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:43:57.205 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:43:57.205 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:43:57.205 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:43:57.210 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":11,"deptId":"22","deptName":"皮肤科名医门诊","id":"86","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"87","realName":"而知","sex":"0","title":"普通医生","userName":"erzhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:43:57.210 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:43:58.820 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:43:58.820 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:43:58.820 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:43:58.820 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:43:58.821 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:43:58.821 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:43:58.821 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:43:58.827 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":11,"deptId":"22","deptName":"皮肤科名医门诊","id":"86","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:43:58.827 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:44:00.561 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:44:00.562 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:44:00.562 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:44:00.562 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:44:00.562 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:44:00.562 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:44:00.562 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:44:00.571 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:44:00.571 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:44:14.255 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:44:14.255 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:44:14.255 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:44:14.256 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:44:14.256 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:44:14.256 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:44:14.256 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:44:14.264 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:44:14.264 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:45:04.973 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:45:04.973 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:45:04.973 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:45:04.973 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:45:04.973 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:45:04.973 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:45:04.973 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:45:04.976 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"91","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:45:04.976 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:45:10.489 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:45:10.490 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:45:10.490 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:45:10.490 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:45:10.490 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:45:10.490 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:45:10.490 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:45:10.501 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"91","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:45:10.501 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:45:21.017 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:45:21.017 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:45:21.017 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:45:21.017 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:45:21.017 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:45:21.017 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:45:21.017 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:45:21.020 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"91","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:45:21.020 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:48:15.673 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:48:15.673 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:48:15.673 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:48:15.673 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:48:15.673 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:48:15.673 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:48:15.673 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:48:15.685 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"91","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:48:15.685 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:48:24.489 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:48:24.489 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:48:24.489 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:48:24.490 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:48:24.490 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:48:24.490 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:48:24.490 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:48:24.503 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"91","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:48:24.504 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:48:47.441 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:48:47.441 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:48:47.441 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:48:47.441 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:48:47.441 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:48:47.441 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:48:47.441 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:48:47.443 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"91","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:48:47.443 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:48:53.345 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:48:53.346 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:48:53.346 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:48:53.346 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:48:53.347 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:48:53.347 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:48:53.347 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:48:53.356 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"91","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:48:53.356 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:49:06.030 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:49:06.030 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:49:06.030 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:49:06.030 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:49:06.030 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:49:06.030 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:49:06.030 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:49:06.032 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"91","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:49:06.033 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:49:30.363 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:49:30.364 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:49:30.364 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:49:30.364 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:49:30.364 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:49:30.364 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:49:30.364 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:49:30.376 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"91","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"95","realName":"asda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:49:30.376 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:49:32.161 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:49:32.161 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:49:32.162 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:49:32.162 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:49:32.162 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:49:32.162 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:49:32.163 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:49:32.169 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"91","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"95","realName":"asda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:49:32.169 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:49:36.853 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:49:36.853 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:49:36.853 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:49:36.853 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:49:36.853 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:49:36.853 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:49:36.853 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:49:36.856 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"91","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"95","realName":"asda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"96","realName":"asda","sex":"0","title":"普通医生","userName":"asd"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:49:36.856 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:50:41.085 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:50:41.085 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:50:41.085 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:50:41.085 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:50:41.085 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:50:41.085 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:50:41.085 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:50:41.093 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"91","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"95","realName":"asda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"96","realName":"asda","sex":"0","title":"普通医生","userName":"asd"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:50:41.093 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:50:43.927 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:50:43.927 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:50:43.927 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:50:43.927 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:50:43.927 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:50:43.927 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:50:43.927 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:50:43.934 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"91","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"95","realName":"asda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:50:43.934 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:50:45.359 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:50:45.359 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:50:45.360 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:50:45.360 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:50:45.360 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:50:45.360 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:50:45.360 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:50:45.364 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"91","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:50:45.364 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:50:47.422 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:50:47.422 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:50:47.422 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:50:47.422 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:50:47.422 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:50:47.422 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:50:47.422 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:50:47.430 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:50:47.430 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:50:54.078 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:50:54.079 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:50:54.079 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:50:54.079 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:50:54.079 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:50:54.080 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:50:54.080 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:50:54.083 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"97","realName":"asda","sex":"0","title":"普通医生","userName":"asdad"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:50:54.083 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:51:06.286 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:51:06.286 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:51:06.287 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:51:06.287 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:51:06.287 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:51:06.287 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:51:06.288 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:51:06.297 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"97","realName":"asda","sex":"0","title":"普通医生","userName":"asdad"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:51:06.297 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:51:08.604 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:51:08.604 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:51:08.604 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:51:08.604 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:51:08.604 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:51:08.604 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:51:08.604 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:51:08.606 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"97","realName":"asda","sex":"0","title":"普通医生","userName":"asdad"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:51:08.606 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:51:10.668 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:51:10.668 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:51:10.669 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:51:10.669 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:51:10.669 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:51:10.669 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:51:10.669 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:51:10.672 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"97","realName":"asda","sex":"0","title":"普通医生","userName":"asdad"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:51:10.672 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:51:15.173 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:51:15.173 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:51:15.173 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:51:15.173 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:51:15.173 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:51:15.173 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:51:15.173 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:51:15.176 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"97","realName":"asda","sex":"0","title":"普通医生","userName":"asdad"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"98","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:51:15.176 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:52:18.867 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:52:18.867 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:52:18.867 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:52:18.867 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:52:18.867 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:52:18.867 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:52:18.867 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:52:18.878 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"97","realName":"asda","sex":"0","title":"普通医生","userName":"asdad"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"98","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:52:18.879 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:52:23.359 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:52:23.359 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:52:23.359 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:52:23.359 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:52:23.360 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:52:23.360 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:52:23.360 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:52:23.368 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"97","realName":"asda","sex":"0","title":"普通医生","userName":"asdad"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"98","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"99","realName":"asd","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:52:23.368 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:52:46.455 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:52:46.455 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:52:46.455 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:52:46.455 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:52:46.455 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:52:46.455 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:52:46.455 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:52:46.468 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"97","realName":"asda","sex":"0","title":"普通医生","userName":"asdad"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"98","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"99","realName":"asd","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:52:46.468 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:52:48.080 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:52:48.080 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:52:48.080 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:52:48.080 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:52:48.081 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:52:48.081 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:52:48.081 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:52:48.094 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"97","realName":"asda","sex":"0","title":"普通医生","userName":"asdad"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"98","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"99","realName":"asd","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:52:48.094 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:52:52.958 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:52:52.958 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:52:52.958 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:52:52.958 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:52:52.958 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:52:52.959 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:52:52.959 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:52:52.974 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"97","realName":"asda","sex":"0","title":"普通医生","userName":"asdad"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"98","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"99","realName":"asd","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"100","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:52:52.974 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:52:57.359 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:52:57.359 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:52:57.359 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:52:57.359 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:52:57.359 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:52:57.359 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:52:57.359 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:52:57.372 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"98","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"99","realName":"asd","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"100","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:52:57.372 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:52:58.563 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:52:58.563 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:52:58.563 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:52:58.563 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:52:58.563 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:52:58.564 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:52:58.564 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:52:58.570 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"99","realName":"asd","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"100","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:52:58.570 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:53:00.020 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:53:00.020 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:53:00.020 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:53:00.020 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:53:00.020 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:53:00.021 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:53:00.021 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:53:00.026 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"100","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:53:00.026 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:53:01.455 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:53:01.455 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:53:01.455 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:53:01.455 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:53:01.455 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:53:01.455 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:53:01.456 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:53:01.464 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:53:01.464 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:53:24.192 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:53:24.192 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:53:24.192 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:53:24.192 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:53:24.192 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:53:24.192 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:53:24.192 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:53:24.195 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:53:24.195 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:53:34.522 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:53:34.523 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:53:34.523 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:53:34.523 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:53:34.523 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:53:34.523 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:53:34.523 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:53:34.531 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:53:34.531 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:53:42.598 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:53:42.598 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:53:42.599 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:53:42.599 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:53:42.599 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:53:42.599 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:53:42.599 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 22:53:42.603 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:53:42.603 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:54:05.613 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:54:05.613 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:54:05.613 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:54:05.614 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:54:05.614 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:54:05.614 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:54:05.614 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:54:05.625 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":0,"deptId":"37","deptName":"口腔内科门诊","id":"102","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:54:05.625 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:54:08.732 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:54:08.732 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:54:08.732 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:54:08.732 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:54:08.732 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:54:08.732 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:54:08.733 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:54:08.742 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":0,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:54:08.742 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:54:15.583 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:54:15.583 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:54:15.583 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:54:15.583 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:54:15.583 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:54:15.583 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:54:15.584 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:54:15.594 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":123,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:54:15.594 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:54:27.478 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:54:27.479 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:54:27.480 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:54:27.480 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:54:27.480 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:54:27.480 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:54:27.480 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:54:27.489 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:54:27.490 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:54:30.757 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:54:30.757 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:54:30.757 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:54:30.757 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:54:30.757 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:54:30.757 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:54:30.757 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 22:54:30.763 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:54:30.763 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:54:34.479 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:54:34.480 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:54:34.480 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:54:34.480 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:54:34.480 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:54:34.480 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:54:34.480 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:54:34.490 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:54:34.490 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:54:58.519 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:54:58.519 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:54:58.519 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:54:58.519 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:54:58.519 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:54:58.519 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:54:58.519 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:54:58.523 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:54:58.523 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:55:01.878 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:55:01.878 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:55:01.878 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:55:01.878 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:55:01.878 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:55:01.878 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:55:01.879 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 22:55:01.889 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":0,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:55:01.889 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:55:04.115 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:55:04.115 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:55:04.115 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:55:04.115 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:55:04.115 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:55:04.116 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:55:04.116 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:55:04.120 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:55:04.121 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:55:28.170 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:55:28.170 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:55:28.170 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:55:28.170 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:55:28.170 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:55:28.170 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:55:28.170 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:55:28.180 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":0,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:55:28.181 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:55:33.698 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:55:33.698 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:55:33.698 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:55:33.698 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:55:33.698 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:55:33.698 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:55:33.698 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:55:33.711 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:55:33.711 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:55:55.044 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:55:55.044 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:55:55.044 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:55:55.044 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:55:55.044 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:55:55.044 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:55:55.044 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:55:55.058 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":0,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:55:55.058 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:56:05.948 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:56:05.949 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:56:05.949 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:56:05.949 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:56:05.949 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:56:05.949 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:56:05.949 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:56:05.961 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:56:05.961 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:56:12.071 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:56:12.071 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:56:12.071 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:56:12.071 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:56:12.071 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:56:12.071 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:56:12.071 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 22:56:12.076 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":0,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:56:12.076 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:56:30.026 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:56:30.026 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:56:30.027 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:56:30.027 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:56:30.027 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:56:30.027 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:56:30.027 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:56:30.041 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"普通医生","userName":"chengong"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:56:30.042 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:56:59.715 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:56:59.716 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:56:59.716 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:56:59.716 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:56:59.716 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:56:59.716 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:56:59.717 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:56:59.731 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"普通医生","userName":"chengong"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:56:59.731 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:57:02.469 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:57:02.469 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:57:02.469 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:57:02.469 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:57:02.470 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:57:02.470 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:57:02.470 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 22:57:02.475 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:57:02.475 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:57:10.006 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:57:10.006 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:57:10.006 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:57:10.006 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:57:10.006 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:57:10.006 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:57:10.007 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:57:10.021 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"普通医生","userName":"chengong"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:57:10.021 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:57:14.394 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:57:14.394 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:57:14.394 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:57:14.394 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:57:14.394 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:57:14.394 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:57:14.395 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 22:57:14.402 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:57:14.403 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:57:15.920 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:57:15.920 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:57:15.920 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:57:15.921 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:57:15.921 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:57:15.921 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:57:15.921 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:57:15.934 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"普通医生","userName":"chengong"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:57:15.934 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:57:28.115 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:57:28.116 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:57:28.116 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:57:28.116 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:57:28.116 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:57:28.116 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:57:28.116 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:57:28.123 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:57:28.123 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:57:49.925 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:57:49.925 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:57:49.925 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:57:49.925 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:57:49.925 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:57:49.925 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:57:49.925 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:57:49.938 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:57:49.938 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:58:07.229 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:58:07.229 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:58:07.229 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:58:07.229 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:58:07.229 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:58:07.229 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:58:07.229 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:58:07.238 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:58:07.238 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:58:08.356 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:58:08.356 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:58:08.356 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:58:08.356 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:58:08.356 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:58:08.356 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:58:08.356 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:58:08.369 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:58:08.370 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:58:10.189 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:58:10.189 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:58:10.189 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:58:10.189 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:58:10.189 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:58:10.189 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:58:10.189 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 22:58:10.192 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:58:10.192 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:58:14.142 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:58:14.142 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:58:14.142 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:58:14.142 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:58:14.142 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:58:14.142 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:58:14.142 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 22:58:14.150 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:58:14.151 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:58:16.546 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:58:16.547 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:58:16.547 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:58:16.547 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:58:16.547 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:58:16.547 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:58:16.547 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:58:16.561 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"普通医生","userName":"chengong"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:58:16.562 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:59:09.595 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:59:09.595 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:59:09.595 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:59:09.595 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:59:09.595 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:59:09.595 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:59:09.595 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:59:09.610 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"普通医生","userName":"chengong"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:59:09.610 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:59:18.194 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:59:18.195 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:59:18.195 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:59:18.195 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:59:18.195 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:59:18.195 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:59:18.195 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:59:18.208 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"普通医生","userName":"yangyongxin01"},{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"普通医生","userName":"chengong"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:59:18.209 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 22:59:21.580 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 22:59:21.580 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 22:59:21.580 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 22:59:21.580 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 22:59:21.580 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 22:59:21.580 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 22:59:21.580 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 22:59:21.593 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"普通医生","userName":"chengong"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 22:59:21.593 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:01:00.512 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:01:00.512 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:01:00.512 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:01:00.512 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:01:00.512 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:01:00.512 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:01:00.513 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:01:00.524 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"普通医生","userName":"chengong"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:01:00.525 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:01:04.025 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:01:04.025 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:01:04.025 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:01:04.025 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:01:04.025 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:01:04.026 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:01:04.026 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:01:04.031 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:01:04.031 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:02:10.421 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:02:10.421 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:02:10.421 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:02:10.421 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:02:10.421 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:02:10.421 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:02:10.421 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:02:10.431 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:02:10.431 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:02:13.707 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:02:13.707 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:02:13.707 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:02:13.707 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:02:13.707 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:02:13.707 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:02:13.707 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:02:13.718 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:02:13.718 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:02:28.217 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:02:28.217 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:02:28.218 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:02:28.218 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:02:28.218 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:02:28.218 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:02:28.218 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:02:28.226 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:02:28.226 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:02:29.166 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:02:29.166 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:02:29.166 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:02:29.166 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:02:29.166 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:02:29.166 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:02:29.166 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:02:29.178 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:02:29.178 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:02:31.424 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:02:31.424 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:02:31.424 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:02:31.424 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:02:31.424 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:02:31.424 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:02:31.424 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:02:31.436 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:02:31.436 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:02:33.572 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:02:33.572 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:02:33.572 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:02:33.572 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:02:33.572 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:02:33.572 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:02:33.573 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:02:33.584 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:02:33.584 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:03:07.056 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:03:07.056 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:03:07.056 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:03:07.056 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:03:07.056 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:03:07.056 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:03:07.056 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:03:07.062 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:03:07.062 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:03:10.230 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:03:10.231 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:03:10.231 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:03:10.231 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:03:10.231 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:03:10.231 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:03:10.231 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:03:10.243 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"107","realName":"网易","sex":"0","title":"专家名医","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:03:10.244 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:03:14.426 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:03:14.426 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:03:14.426 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:03:14.426 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:03:14.426 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:03:14.426 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:03:14.426 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:03:14.429 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"106","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:03:14.429 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:03:16.289 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:03:16.289 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:03:16.290 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:03:16.290 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:03:16.290 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:03:16.290 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:03:16.290 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:03:16.292 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"107","realName":"网易","sex":"0","title":"专家名医","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:03:16.293 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:03:20.161 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:03:20.161 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:03:20.161 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:03:20.161 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:03:20.161 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:03:20.161 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:03:20.161 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:03:20.167 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"107","realName":"网易","sex":"0","title":"专家名医","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:03:20.167 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:03:24.259 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:03:24.259 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:03:24.260 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:03:24.260 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:03:24.260 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:03:24.260 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:03:24.260 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:03:24.273 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"107","realName":"网易","sex":"0","title":"专家名医","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:03:24.273 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:04:17.357 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:04:17.357 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:04:17.357 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:04:17.357 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:04:17.357 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:04:17.357 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:04:17.358 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:04:17.369 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:04:17.370 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:04:20.624 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:04:20.625 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:04:20.625 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:04:20.625 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:04:20.625 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:04:20.625 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:04:20.625 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:04:20.637 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"107","realName":"网易","sex":"0","title":"专家名医","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:04:20.637 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:04:26.317 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:04:26.317 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:04:26.317 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:04:26.317 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:04:26.317 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:04:26.317 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:04:26.317 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:04:26.329 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"},{"amount":14,"deptId":"22","deptName":"皮肤科名医门诊","id":"107","realName":"网易","sex":"0","title":"专家名医","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:04:26.329 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:07:01.878 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:07:01.879 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:07:01.879 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:07:01.879 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:07:01.879 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:07:01.879 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:07:01.879 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:07:01.890 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:07:01.890 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:07:09.093 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:07:09.093 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:07:09.093 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:07:09.093 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:07:09.093 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:07:09.093 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:07:09.093 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:07:09.096 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"108","realName":"ad","sex":"0","title":"普通医生","userName":"asd"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:07:09.096 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:07:18.401 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:07:18.401 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:07:18.401 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:07:18.401 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:07:18.401 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:07:18.401 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:07:18.401 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:07:18.409 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"deptId":"22","deptName":"皮肤科名医门诊","id":"108","realName":"ad","sex":"0","title":"普通医生","userName":"asd"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:07:18.409 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:08:06.758 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:08:06.758 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:08:06.758 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:08:06.758 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:08:06.758 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:08:06.758 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:08:06.758 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:08:06.761 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"deptId":"22","deptName":"皮肤科名医门诊","id":"108","realName":"ad","sex":"0","title":"普通医生","userName":"asd"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:08:06.761 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:08:11.409 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:08:11.409 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:08:11.409 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:08:11.409 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:08:11.409 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:08:11.409 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:08:11.409 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:08:11.424 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"deptId":"22","deptName":"皮肤科名医门诊","id":"108","realName":"ad","sex":"0","title":"普通医生","userName":"asd"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"109","realName":"asd","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:08:11.424 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:08:17.016 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:08:17.016 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:08:17.016 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:08:17.016 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:08:17.016 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:08:17.016 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:08:17.016 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:08:17.019 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"deptId":"22","deptName":"皮肤科名医门诊","id":"108","realName":"ad","sex":"0","title":"普通医生","userName":"asd"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"109","realName":"asd","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:08:17.019 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:08:35.836 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:08:35.836 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:08:35.836 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:08:35.836 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:08:35.837 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:08:35.837 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:08:35.837 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:08:35.852 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"deptId":"22","deptName":"皮肤科名医门诊","id":"108","realName":"ad","sex":"0","title":"普通医生","userName":"asd"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"109","realName":"asd","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:08:35.852 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:10:45.612 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:10:45.614 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:10:45.614 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:10:45.614 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:10:45.614 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:10:45.614 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:10:45.614 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:10:45.628 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"deptId":"22","deptName":"皮肤科名医门诊","id":"108","realName":"ad","sex":"0","title":"普通医生","userName":"asd"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"109","realName":"asd","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:10:45.628 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:10:57.533 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:10:57.534 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:10:57.534 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:10:57.534 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:10:57.534 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:10:57.534 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:10:57.534 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:10:57.539 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"deptId":"22","deptName":"皮肤科名医门诊","id":"108","realName":"ad","sex":"0","title":"普通医生","userName":"asd"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"109","realName":"asd","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:10:57.539 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:11:01.889 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:11:01.889 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:11:01.889 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:11:01.889 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:11:01.890 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:11:01.890 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:11:01.890 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:11:01.905 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"},{"amount":14,"deptId":"22","deptName":"皮肤科名医门诊","id":"107","realName":"网易","sex":"0","title":"专家名医","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"110","realName":"网易","sex":"0","title":"专家名医","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:11:01.905 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:11:20.999 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:11:21.000 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:11:21.000 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:11:21.000 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:11:21.000 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:11:21.000 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:11:21.000 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:11:21.012 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"},{"amount":14,"deptId":"22","deptName":"皮肤科名医门诊","id":"107","realName":"网易","sex":"0","title":"专家名医","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:11:21.012 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:11:22.369 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:11:22.369 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:11:22.369 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:11:22.369 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:11:22.369 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:11:22.369 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:11:22.369 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:11:22.380 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:11:22.380 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:11:36.193 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:11:36.193 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:11:36.193 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:11:36.193 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:11:36.193 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:11:36.193 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:11:36.194 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:11:36.205 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:11:36.205 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:11:37.277 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:11:37.277 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:11:37.277 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:11:37.277 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:11:37.277 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:11:37.278 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:11:37.278 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:11:37.289 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:11:37.289 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:11:39.547 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:11:39.547 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:11:39.547 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:11:39.547 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:11:39.547 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:11:39.547 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:11:39.547 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:11:39.561 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"deptId":"22","deptName":"皮肤科名医门诊","id":"108","realName":"ad","sex":"0","title":"普通医生","userName":"asd"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"109","realName":"asd","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"111","realName":"ada","sex":"0","title":"普通医生","userName":"ada01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"112","realName":"ada","sex":"0","title":"普通医生","userName":"ada01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:11:39.561 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:12:17.054 [http-nio-8082-exec-3] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalundefined (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$a0ab5107.getImage(<generated>)
	at sun.reflect.GeneratedMethodAccessor317.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:12:17.074 [http-nio-8081-exec-3] ERROR o.a.c.c.C.[.[.[/service-order].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-order] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
### The error may exist in edu/swu/cs/mapper/OrderInfoMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT COUNT(*) FROM (SELECT  id,product_id,user_id,patient_id,order_status,create_time,update_by,update_time,del_flag,order_id,type,opinions  FROM order_info   WHERE  del_flag=0  AND (product_id IN () AND order_status = ?)) TOTAL
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor210.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy209.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.GeneratedMethodAccessor223.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy208.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor.willDoQuery(PaginationInnerInterceptor.java:141)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:75)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy207.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy150.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForIPage(MybatisMapperMethod.java:121)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:85)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy153.selectPage(Unknown Source)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl.getOrderListByDoctorId(OrderInfoServiceImpl.java:199)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$FastClassBySpringCGLIB$$d3709f65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$EnhancerBySpringCGLIB$$fc289b55.getOrderListByDoctorId(<generated>)
	at edu.swu.cs.controller.OrderInfoController.getOrderListByDoctorId(OrderInfoController.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:12:20.264 [http-nio-8082-exec-5] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalundefined (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$a0ab5107.getImage(<generated>)
	at sun.reflect.GeneratedMethodAccessor317.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:12:21.965 [http-nio-8082-exec-6] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalundefined (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$a0ab5107.getImage(<generated>)
	at sun.reflect.GeneratedMethodAccessor317.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:12:23.030 [http-nio-8082-exec-10] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalundefined (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$a0ab5107.getImage(<generated>)
	at sun.reflect.GeneratedMethodAccessor317.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:12:26.523 [http-nio-8082-exec-1] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalundefined (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$a0ab5107.getImage(<generated>)
	at sun.reflect.GeneratedMethodAccessor317.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:13:28.242 [http-nio-8081-exec-4] ERROR o.a.c.c.C.[.[.[/service-order].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-order] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
### The error may exist in edu/swu/cs/mapper/OrderInfoMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT COUNT(*) FROM (SELECT  id,product_id,user_id,patient_id,order_status,create_time,update_by,update_time,del_flag,order_id,type,opinions  FROM order_info   WHERE  del_flag=0  AND (product_id IN () AND order_status = ?)) TOTAL
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor210.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy209.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.GeneratedMethodAccessor223.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy208.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor.willDoQuery(PaginationInnerInterceptor.java:141)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:75)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy207.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy150.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForIPage(MybatisMapperMethod.java:121)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:85)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy153.selectPage(Unknown Source)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl.getOrderListByDoctorId(OrderInfoServiceImpl.java:199)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$FastClassBySpringCGLIB$$d3709f65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$EnhancerBySpringCGLIB$$fc289b55.getOrderListByDoctorId(<generated>)
	at edu.swu.cs.controller.OrderInfoController.getOrderListByDoctorId(OrderInfoController.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:13:49.175 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:13:49.175 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:13:49.175 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:13:49.175 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:13:49.175 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:13:49.175 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:13:49.175 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:13:49.178 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"deptId":"22","deptName":"皮肤科名医门诊","id":"108","realName":"ad","sex":"0","title":"普通医生","userName":"asd"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"109","realName":"asd","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"avatar":"/uploadImg/d0ceb5bb-58f2-4824-b68d-b9cf1d12b6c8ZFk1VWl1akM3K2FzcSt4L0xZaHIwdHhBdVM3K3pZVDgySGpnb09GWVp4RCt3aTZMM29oaHhBPT0.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asdad","id":"111","introduce":"asdad","phonenumber":"asda","realName":"ada","sex":"0","title":"普通医生","userName":"ada01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:13:49.178 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:13:53.315 [http-nio-8083-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 更新换班人错误] with root cause
java.lang.RuntimeException: 更新换班人错误
	at edu.swu.cs.service.impl.DoctorLeaveServiceImpl.approveLeave(DoctorLeaveServiceImpl.java:89)
	at edu.swu.cs.service.impl.DoctorLeaveServiceImpl$$FastClassBySpringCGLIB$$2ca3d729.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.service.impl.DoctorLeaveServiceImpl$$EnhancerBySpringCGLIB$$b336575.approveLeave(<generated>)
	at edu.swu.cs.controller.DoctorLeaveController.approvalLeave(DoctorLeaveController.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:14:36.218 [http-nio-8083-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 更新换班人错误] with root cause
java.lang.RuntimeException: 更新换班人错误
	at edu.swu.cs.service.impl.DoctorLeaveServiceImpl.approveLeave(DoctorLeaveServiceImpl.java:89)
	at edu.swu.cs.service.impl.DoctorLeaveServiceImpl$$FastClassBySpringCGLIB$$2ca3d729.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.service.impl.DoctorLeaveServiceImpl$$EnhancerBySpringCGLIB$$b336575.approveLeave(<generated>)
	at edu.swu.cs.controller.DoctorLeaveController.approvalLeave(DoctorLeaveController.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:16:58.285 [http-nio-8086-exec-4] ERROR o.a.c.c.C.[.[.[/service-ware].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-ware] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
### The error may exist in edu/swu/cs/mapper/WareMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,product_id,amount,lock_amount,parent_product_id,offset_time  FROM ware     WHERE (product_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor162.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy207.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.GeneratedMethodAccessor172.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy206.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy205.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy151.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.WareServiceImpl$$EnhancerBySpringCGLIB$$cdedac7c.list(<generated>)
	at edu.swu.cs.controller.WareController.getWareListByProductIdByFeign(WareController.java:62)
	at sun.reflect.GeneratedMethodAccessor183.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:16:58.291 [http-nio-8083-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)] with root cause
feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)
	at feign.FeignException.serverErrorStatus(FeignException.java:195)
	at feign.FeignException.errorStatus(FeignException.java:144)
	at feign.FeignException.errorStatus(FeignException.java:133)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy159.getWareListByProductIdByFeign(Unknown Source)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:66)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$a386ebb0.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:17:18.942 [http-nio-8086-exec-3] ERROR o.a.c.c.C.[.[.[/service-ware].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-ware] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
### The error may exist in edu/swu/cs/mapper/WareMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,product_id,amount,lock_amount,parent_product_id,offset_time  FROM ware     WHERE (product_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor162.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy207.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.GeneratedMethodAccessor172.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy206.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy205.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy151.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.WareServiceImpl$$EnhancerBySpringCGLIB$$cdedac7c.list(<generated>)
	at edu.swu.cs.controller.WareController.getWareListByProductIdByFeign(WareController.java:62)
	at sun.reflect.GeneratedMethodAccessor183.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:17:18.945 [http-nio-8083-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)] with root cause
feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)
	at feign.FeignException.serverErrorStatus(FeignException.java:195)
	at feign.FeignException.errorStatus(FeignException.java:144)
	at feign.FeignException.errorStatus(FeignException.java:133)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy159.getWareListByProductIdByFeign(Unknown Source)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:66)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$a386ebb0.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:18:29.930 [http-nio-8086-exec-5] ERROR o.a.c.c.C.[.[.[/service-ware].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-ware] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
### The error may exist in edu/swu/cs/mapper/WareMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  id,product_id,amount,lock_amount,parent_product_id,offset_time  FROM ware     WHERE (product_id IN ())
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '))' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor162.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy207.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.GeneratedMethodAccessor172.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy206.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:81)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy205.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy148.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:166)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy151.selectList(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.list(IService.java:279)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.WareServiceImpl$$EnhancerBySpringCGLIB$$cdedac7c.list(<generated>)
	at edu.swu.cs.controller.WareController.getWareListByProductIdByFeign(WareController.java:62)
	at sun.reflect.GeneratedMethodAccessor183.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:18:29.934 [http-nio-8083-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-product] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)] with root cause
feign.FeignException$InternalServerError: status 500 reading WareClient#getWareListByProductIdByFeign(List)
	at feign.FeignException.serverErrorStatus(FeignException.java:195)
	at feign.FeignException.errorStatus(FeignException.java:144)
	at feign.FeignException.errorStatus(FeignException.java:133)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:151)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:80)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy159.getWareListByProductIdByFeign(Unknown Source)
	at edu.swu.cs.service.impl.ProductServiceImpl.getWareByDeptForDays(ProductServiceImpl.java:66)
	at edu.swu.cs.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$a4b244b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$a386ebb0.getWareByDeptForDays(<generated>)
	at edu.swu.cs.controller.ProductController.getWareByDeptForDays(ProductController.java:71)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:20:33.675 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:20:33.676 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:20:33.676 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:20:33.676 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:20:33.676 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:20:33.676 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:20:33.676 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:20:33.680 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"deptId":"22","deptName":"皮肤科名医门诊","id":"108","realName":"ad","sex":"0","title":"普通医生","userName":"asd"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"109","realName":"asd","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"avatar":"/uploadImg/d0ceb5bb-58f2-4824-b68d-b9cf1d12b6c8ZFk1VWl1akM3K2FzcSt4L0xZaHIwdHhBdVM3K3pZVDgySGpnb09GWVp4RCt3aTZMM29oaHhBPT0.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asdad","id":"111","introduce":"asdad","phonenumber":"asda","realName":"ada","sex":"0","title":"普通医生","userName":"ada01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:20:33.680 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:20:37.600 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:20:37.600 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:20:37.600 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:20:37.600 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:20:37.600 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:20:37.600 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:20:37.600 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:20:37.604 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"deptId":"22","deptName":"皮肤科名医门诊","id":"108","realName":"ad","sex":"0","title":"普通医生","userName":"asd"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"109","realName":"asd","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:20:37.604 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:20:41.163 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:20:41.163 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:20:41.163 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:20:41.163 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:20:41.163 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:20:41.163 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:20:41.163 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:20:41.167 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"deptId":"22","deptName":"皮肤科名医门诊","id":"108","realName":"ad","sex":"0","title":"普通医生","userName":"asd"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:20:41.167 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:20:42.891 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:20:42.891 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:20:42.891 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:20:42.891 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:20:42.891 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:20:42.891 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:20:42.891 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:20:42.903 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:20:42.903 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:20:49.189 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:20:49.189 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:20:49.189 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:20:49.189 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:20:49.189 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:20:49.190 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:20:49.190 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:20:49.200 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:20:49.201 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:21:01.568 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:21:01.568 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:01.568 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:21:01.568 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:21:01.569 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:21:01.569 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:01.569 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:21:01.577 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:21:01.577 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:21:02.497 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:21:02.498 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:02.498 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:21:02.498 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:21:02.498 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:21:02.498 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:02.498 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:21:02.508 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:21:02.508 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:21:05.152 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:21:05.152 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:05.152 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:21:05.152 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:21:05.152 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:21:05.152 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:05.152 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:21:05.163 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:21:05.163 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:21:07.646 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:21:07.647 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:07.647 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:21:07.647 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:21:07.647 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:21:07.647 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:07.647 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:21:07.656 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"113","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"114","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:21:07.656 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:21:10.320 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:21:10.320 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:10.320 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:21:10.320 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:21:10.321 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:21:10.321 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:10.321 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:21:10.334 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"113","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:21:10.334 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:21:21.909 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:21:21.910 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:21.910 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:21:21.910 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:21:21.910 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:21:21.910 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:21.910 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:21:21.920 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:21:21.920 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:21:27.478 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:21:27.478 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:27.478 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:21:27.478 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:21:27.478 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:21:27.478 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:27.478 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:21:27.489 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"115","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:21:27.489 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:21:28.675 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:21:28.675 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:28.675 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:21:28.675 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:21:28.675 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:21:28.675 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:28.675 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:21:28.684 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"115","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"116","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:21:28.684 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:21:29.889 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:21:29.889 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:29.889 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:21:29.889 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:21:29.889 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:21:29.889 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:29.889 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:21:29.906 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"115","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"116","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"117","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:21:29.906 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:21:32.385 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:21:32.385 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:32.385 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:21:32.385 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:21:32.385 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:21:32.385 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:32.385 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:21:32.399 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"115","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"116","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:21:32.399 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:21:33.723 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:21:33.723 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:33.723 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:21:33.723 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:21:33.723 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:21:33.723 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:33.724 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:21:33.736 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"115","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:21:33.736 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:21:37.513 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:21:37.513 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:37.513 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:21:37.513 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:21:37.513 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:21:37.513 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:21:37.513 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:21:37.522 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"deptId":"22","deptName":"皮肤科名医门诊","id":"115","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:21:37.522 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:21:56.327 [http-nio-8082-exec-8] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalundefined (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$a0ab5107.getImage(<generated>)
	at sun.reflect.GeneratedMethodAccessor317.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:21:56.374 [http-nio-8081-exec-5] ERROR o.a.c.c.C.[.[.[/service-order].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-order] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
### The error may exist in edu/swu/cs/mapper/OrderInfoMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT COUNT(*) FROM (SELECT  id,product_id,user_id,patient_id,order_status,create_time,update_by,update_time,del_flag,order_id,type,opinions  FROM order_info   WHERE  del_flag=0  AND (product_id IN () AND order_status = ?)) TOTAL
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ') AND order_status = 1)) TOTAL' at line 4
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor210.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy209.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at sun.reflect.GeneratedMethodAccessor223.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy208.query(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor.willDoQuery(PaginationInnerInterceptor.java:141)
	at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:75)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:62)
	at com.sun.proxy.$Proxy207.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy150.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForIPage(MybatisMapperMethod.java:121)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:85)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy153.selectPage(Unknown Source)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl.getOrderListByDoctorId(OrderInfoServiceImpl.java:199)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$FastClassBySpringCGLIB$$d3709f65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at edu.swu.cs.service.impl.OrderInfoServiceImpl$$EnhancerBySpringCGLIB$$fc289b55.getOrderListByDoctorId(<generated>)
	at edu.swu.cs.controller.OrderInfoController.getOrderListByDoctorId(OrderInfoController.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:21:59.096 [http-nio-8082-exec-4] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalundefined (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$a0ab5107.getImage(<generated>)
	at sun.reflect.GeneratedMethodAccessor317.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:22:03.885 [http-nio-8082-exec-3] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalundefined (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$a0ab5107.getImage(<generated>)
	at sun.reflect.GeneratedMethodAccessor317.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:22:07.366 [http-nio-8082-exec-8] ERROR o.a.c.c.C.[.[.[/service-user].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/service-user] threw exception
java.io.FileNotFoundException: /home/lj/code/hospitalundefined (没有那个文件或目录)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at edu.swu.cs.controller.DoctorController.getImage(DoctorController.java:108)
	at edu.swu.cs.controller.DoctorController$$FastClassBySpringCGLIB$$cff9ca04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at edu.swu.cs.controller.DoctorController$$EnhancerBySpringCGLIB$$a0ab5107.getImage(<generated>)
	at sun.reflect.GeneratedMethodAccessor317.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at edu.swu.cs.filter.JwtAuthenticationTokenFilter.doFilterInternal(JwtAuthenticationTokenFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2023-06-22 23:30:51.798 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:30:51.798 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:30:51.798 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:30:51.798 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:30:51.798 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:30:51.798 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:30:51.798 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:30:51.810 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:30:51.810 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:31:15.174 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:31:15.174 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:31:15.174 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:31:15.174 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:31:15.174 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:31:15.174 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:31:15.174 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:31:15.189 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:31:15.189 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:36:49.536 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:36:49.536 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:36:49.536 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:36:49.536 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:36:49.537 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:36:49.537 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:36:49.537 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:36:49.552 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:36:49.552 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:36:49.582 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:36:49.582 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:36:49.582 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:36:49.582 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:36:49.582 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:36:49.582 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:36:49.582 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":0,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:36:49.597 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:36:49.597 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:37:09.890 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:37:09.890 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:09.890 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:37:09.890 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:37:09.890 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:37:09.890 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:09.890 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":0,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:37:09.898 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:37:09.899 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:37:15.413 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:37:15.413 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:15.413 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:37:15.413 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:37:15.413 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:37:15.413 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:15.413 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":0,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:37:15.419 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:37:15.419 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:37:18.604 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:37:18.604 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:18.604 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:37:18.604 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:37:18.605 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:37:18.605 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:18.605 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":0,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:37:18.624 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:37:18.625 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:37:20.746 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:37:20.747 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:20.747 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:37:20.747 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:37:20.747 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:37:20.747 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:20.747 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":0,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:37:20.754 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:37:20.754 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:37:22.894 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:37:22.894 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:22.894 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:37:22.894 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:37:22.895 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:37:22.895 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:22.895 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":0,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:37:22.906 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:37:22.906 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:37:26.272 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:37:26.272 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:26.272 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:37:26.272 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:37:26.272 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:37:26.272 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:26.273 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":0,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:37:26.283 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:37:26.283 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:37:36.836 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:37:36.836 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:36.836 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:37:36.837 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:37:36.837 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:37:36.837 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:36.837 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:37:36.861 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:37:36.861 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:37:36.887 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:37:36.887 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:36.887 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:37:36.887 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:37:36.887 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:37:36.887 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:36.888 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":0,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:37:36.911 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:37:36.911 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:37:56.812 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:37:56.812 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:56.812 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:37:56.812 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:37:56.813 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:37:56.813 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:56.813 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:37:56.831 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:37:56.831 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:37:56.852 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:37:56.852 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:56.852 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:37:56.852 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:37:56.852 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:37:56.852 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:37:56.852 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":0,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:37:56.860 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:37:56.860 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:38:18.828 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:38:18.828 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:38:18.829 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:38:18.829 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:38:18.829 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:38:18.829 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:38:18.829 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:38:18.853 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:38:18.853 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:38:55.506 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:38:55.506 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:38:55.506 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:38:55.506 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:38:55.506 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:38:55.507 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:38:55.507 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:38:55.527 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:38:55.527 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:39:51.739 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:39:51.739 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:39:51.739 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:39:51.739 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:39:51.739 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:39:51.739 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:39:51.740 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:39:51.765 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:39:51.766 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:39:52.587 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:39:52.588 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:39:52.588 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:39:52.588 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:39:52.588 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:39:52.588 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:39:52.588 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":2,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:39:52.609 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"124","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"2","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:39:52.609 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:40:07.195 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:40:07.196 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:40:07.196 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:40:07.196 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:40:07.196 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:40:07.196 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:40:07.196 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:40:07.208 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:40:07.208 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:40:08.664 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:40:08.664 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:40:08.665 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:40:08.665 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:40:08.665 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:40:08.665 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:40:08.665 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":2,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:40:08.670 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"124","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"2","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:40:08.670 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:41:25.571 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:41:25.574 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:41:25.574 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:41:25.574 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:41:25.574 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:41:25.574 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:41:25.574 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:41:25.583 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:41:25.583 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:41:34.045 [SpringContextShutdownHook] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Successfully waited for consumers to finish.
2023-06-22 23:41:34.045 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService
2023-06-22 23:41:34.048 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 23:41:34.050 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 23:41:34.052 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 23:41:34.055 [SpringContextShutdownHook] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 23:41:34.059 [Thread-41] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2023-06-22 23:41:34.064 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 23:41:34.065 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 23:41:34.066 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2023-06-22 23:41:34.067 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 23:41:34.116 [Thread-64] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2023-06-22 23:41:34.124 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Waiting for workers to finish.
2023-06-22 23:41:34.138 [Thread-34] INFO  com.netflix.loadbalancer.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
2023-06-22 23:41:34.143 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 23:41:34.145 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 23:41:34.146 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 23:41:34.166 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 23:41:34.168 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 23:41:34.170 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 23:41:34.246 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 23:41:34.249 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 23:41:34.259 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 23:41:34.261 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 23:41:34.270 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 23:41:34.273 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 23:41:34.299 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 23:41:34.302 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 23:41:34.903 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Successfully waited for workers to finish.
2023-06-22 23:41:34.904 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Waiting for workers to finish.
2023-06-22 23:41:35.875 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Successfully waited for workers to finish.
2023-06-22 23:41:35.880 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-22 23:41:35.882 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-22 23:41:35.885 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-22 23:41:35.949 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 23:41:35.949 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-22 23:41:36.089 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-22 23:41:36.092 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-22 23:41:38.688 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:38.837 [main] INFO  edu.swu.cs.WareApplication - No active profile set, falling back to default profiles: default
2023-06-22 23:41:40.178 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 23:41:40.182 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 23:41:40.209 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12ms. Found 0 repository interfaces.
2023-06-22 23:41:40.288 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 23:41:40.330 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 23:41:40.578 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=becd3dfe-a69e-37f4-8283-9e23c7d67413
2023-06-22 23:41:40.788 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:41.240 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:41.537 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:41.613 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8086 (http)
2023-06-22 23:41:41.624 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8086"]
2023-06-22 23:41:41.625 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 23:41:41.625 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 23:41:41.696 [main] INFO  edu.swu.cs.ProductApplication - No active profile set, falling back to default profiles: default
2023-06-22 23:41:41.759 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-ware] - Initializing Spring embedded WebApplicationContext
2023-06-22 23:41:41.760 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2905 ms
2023-06-22 23:41:41.893 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 23:41:41.893 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 23:41:41.908 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4b87074a
2023-06-22 23:41:43.156 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 23:41:43.159 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 23:41:43.198 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21ms. Found 0 repository interfaces.
2023-06-22 23:41:43.300 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 23:41:43.356 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 23:41:43.437 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:43.615 [main] INFO  edu.swu.cs.UserApplication - No active profile set, falling back to default profiles: default
2023-06-22 23:41:43.632 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=511693ec-330e-391b-890e-84a005ffebb9
2023-06-22 23:41:43.894 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:44.117 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 23:41:44.289 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:44.336 [redisson-netty-4-15] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 23:41:44.338 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 23:41:44.644 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8083 (http)
2023-06-22 23:41:44.660 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8083"]
2023-06-22 23:41:44.661 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 23:41:44.661 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 23:41:44.779 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-product] - Initializing Spring embedded WebApplicationContext
2023-06-22 23:41:44.780 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3064 ms
2023-06-22 23:41:44.938 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 23:41:44.950 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 23:41:44.951 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 23:41:44.962 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@50fdf44f
2023-06-22 23:41:45.098 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 23:41:45.101 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 23:41:45.121 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 23:41:45.155 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 23:41:45.155 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 23:41:45.156 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21ms. Found 0 repository interfaces.
2023-06-22 23:41:45.264 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 23:41:45.274 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 23:41:45.347 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 23:41:45.657 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=8fadee14-3e67-3619-a278-addf4941a8f7
2023-06-22 23:41:45.915 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:46.150 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:46.155 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:46.158 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@25a7fedf' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:46.163 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:46.169 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:46.243 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:46.246 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: d524f7b2-c138-4425-9a3f-991036c89041

2023-06-22 23:41:46.356 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@663622b1, org.springframework.security.web.context.SecurityContextPersistenceFilter@df432ec, org.springframework.security.web.header.HeaderWriterFilter@649009d6, org.springframework.web.filter.CorsFilter@1be52113, edu.swu.cs.filter.JwtAuthenticationTokenFilter@42730828, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@62f37bfd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@e67d3b7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5badeda0, org.springframework.security.web.session.SessionManagementFilter@58068b40, org.springframework.security.web.access.ExceptionTranslationFilter@2b3242a5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@62c53685]
2023-06-22 23:41:46.501 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 23:41:46.611 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2023-06-22 23:41:46.624 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2023-06-22 23:41:46.625 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 23:41:46.626 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 23:41:46.679 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 23:41:46.737 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-user] - Initializing Spring embedded WebApplicationContext
2023-06-22 23:41:46.737 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3095 ms
2023-06-22 23:41:46.818 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 23:41:46.849 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 23:41:46.902 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 23:41:46.902 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 23:41:46.914 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4ef4f627
2023-06-22 23:41:46.919 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 23:41:47.149 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 23:41:47.190 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#7db40fd5:0/SimpleConnection@4ae6451d [delegate=amqp://guest@127.0.0.1:5672/, localPort= 59652]
2023-06-22 23:41:47.246 [main] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Container initialized for queues: [stock.release.stock.queue]
2023-06-22 23:41:47.261 [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] INFO  o.s.a.r.listener.DirectMessageListenerContainer - SimpleConsumer [queue=stock.release.stock.queue, consumerTag=amq.ctag-S4YaK1T3RTlegeEOnt8IrQ identity=7ebf6d67] started
2023-06-22 23:41:47.282 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8086"]
2023-06-22 23:41:47.311 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8086 (http) with context path '/service-ware'
2023-06-22 23:41:47.338 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-ware 192.168.1.25:8086 register finished
2023-06-22 23:41:47.344 [main] INFO  edu.swu.cs.WareApplication - Started WareApplication in 9.392 seconds (JVM running for 10.318)
2023-06-22 23:41:47.439 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 23:41:47.753 [redisson-netty-4-1] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 23:41:47.784 [RMI TCP Connection(2)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 23:41:47.787 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 23:41:47.810 [RMI TCP Connection(1)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-ware] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 23:41:47.810 [RMI TCP Connection(1)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 23:41:47.852 [RMI TCP Connection(1)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 42 ms
2023-06-22 23:41:48.152 [RMI TCP Connection(2)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 23:41:48.344 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 23:41:48.346 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 23:41:48.348 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:48.426 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 23:41:48.533 [main] INFO  edu.swu.cs.OrderApplication - No active profile set, falling back to default profiles: default
2023-06-22 23:41:48.772 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 23:41:48.825 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 23:41:48.826 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 23:41:48.925 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 23:41:49.464 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: aa10d265-f0b5-41e9-b1d0-b4e937e26677

2023-06-22 23:41:49.565 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@33837bd4, org.springframework.security.web.context.SecurityContextPersistenceFilter@7a0d2c80, org.springframework.security.web.header.HeaderWriterFilter@4742466e, org.springframework.web.filter.CorsFilter@61c145cb, edu.swu.cs.filter.JwtAuthenticationTokenFilter@56da96b3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@efa04b5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ba355e4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@153409b8, org.springframework.security.web.session.SessionManagementFilter@66226ab, org.springframework.security.web.access.ExceptionTranslationFilter@343727b5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5ebfe7fa]
2023-06-22 23:41:49.682 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2023-06-22 23:41:49.729 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 23:41:49.968 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 23:41:49.971 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 23:41:49.994 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 23:41:50.054 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 23:41:50.132 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 23:41:50.192 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 23:41:50.194 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 23:41:50.218 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 23:41:50.218 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 23:41:50.233 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22ms. Found 0 repository interfaces.
2023-06-22 23:41:50.341 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 23:41:50.346 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8083"]
2023-06-22 23:41:50.354 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
2023-06-22 23:41:50.376 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8083 (http) with context path '/service-product'
2023-06-22 23:41:50.390 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-product 192.168.1.25:8083 register finished
2023-06-22 23:41:50.396 [main] INFO  edu.swu.cs.ProductApplication - Started ProductApplication in 9.597 seconds (JVM running for 10.354)
2023-06-22 23:41:50.427 [main] WARN  o.springframework.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2023-06-22 23:41:50.632 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:50.711 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=292af892-e9b3-374c-9bee-d96fde00adf6
2023-06-22 23:41:50.740 [RMI TCP Connection(1)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [localhost:5672]
2023-06-22 23:41:50.749 [RMI TCP Connection(2)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-product] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 23:41:50.749 [RMI TCP Connection(2)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 23:41:50.767 [RMI TCP Connection(2)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 18 ms
2023-06-22 23:41:50.777 [RMI TCP Connection(1)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#35bd8bc9:0/SimpleConnection@5a11aa1c [delegate=amqp://guest@127.0.0.1:5672/, localPort= 41642]
2023-06-22 23:41:50.816 [RMI TCP Connection(1)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 23:41:50.831 [main] INFO  edu.swu.cs.securityApplication - No active profile set, falling back to default profiles: default
2023-06-22 23:41:50.921 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:50.972 [RMI TCP Connection(1)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 23:41:50.989 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 72480e71-c06f-4e2b-b368-e46f31be0702

2023-06-22 23:41:51.097 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@58583a2d, org.springframework.security.web.context.SecurityContextPersistenceFilter@71eff6a3, org.springframework.security.web.header.HeaderWriterFilter@5cdda548, org.springframework.web.filter.CorsFilter@3e8afc2d, edu.swu.cs.filter.JwtAuthenticationTokenFilter@1412682c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@27a0e6ce, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a240452, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2d172c7, org.springframework.security.web.session.SessionManagementFilter@201a8ea7, org.springframework.security.web.access.ExceptionTranslationFilter@63f3366a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3275a47f]
2023-06-22 23:41:51.161 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 23:41:51.163 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 23:41:51.261 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 23:41:51.318 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:51.488 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 23:41:51.618 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2023-06-22 23:41:51.629 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2023-06-22 23:41:51.629 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 23:41:51.630 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 23:41:51.672 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 23:41:51.675 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-22 23:41:51.677 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-06-22 23:41:51.705 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15ms. Found 0 repository interfaces.
2023-06-22 23:41:51.719 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 23:41:51.742 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-order] - Initializing Spring embedded WebApplicationContext
2023-06-22 23:41:51.742 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3182 ms
2023-06-22 23:41:51.846 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 23:41:51.846 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 23:41:51.854 [main] INFO  com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7df6d663
2023-06-22 23:41:51.978 [main] INFO  o.springframework.cloud.context.scope.GenericScope - BeanFactory id=c1871298-cf47-35a1-9b15-5660b38c6b3a
2023-06-22 23:41:52.024 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2023-06-22 23:41:52.040 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path '/service-user'
2023-06-22 23:41:52.051 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-user 192.168.1.25:8082 register finished
2023-06-22 23:41:52.054 [main] INFO  edu.swu.cs.UserApplication - Started UserApplication in 9.332 seconds (JVM running for 10.092)
2023-06-22 23:41:52.110 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:52.244 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-22 23:41:52.482 [RMI TCP Connection(2)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 23:41:52.488 [RMI TCP Connection(1)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-user] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 23:41:52.489 [RMI TCP Connection(1)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 23:41:52.506 [RMI TCP Connection(1)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 17 ms
2023-06-22 23:41:52.515 [RMI TCP Connection(2)-192.168.1.25] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#794240e2:0/SimpleConnection@45c96aa2 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 41650]
2023-06-22 23:41:52.546 [RMI TCP Connection(2)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 23:41:52.574 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
2023-06-22 23:41:52.583 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2023-06-22 23:41:52.584 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-06-22 23:41:52.584 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-06-22 23:41:52.684 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/security-auth] - Initializing Spring embedded WebApplicationContext
2023-06-22 23:41:52.685 [main] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1837 ms
2023-06-22 23:41:52.697 [RMI TCP Connection(2)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 23:41:52.841 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 23:41:52.842 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 23:41:53.589 [main] INFO  org.redisson.Version - Redisson 3.12.0
2023-06-22 23:41:53.723 [redisson-netty-4-3] INFO  o.r.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 23:41:53.733 [redisson-netty-4-19] INFO  org.redisson.connection.pool.MasterConnectionPool - 24 connections initialized for 127.0.0.1/127.0.0.1:6379
2023-06-22 23:41:54.058 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 23:41:54.087 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 23:41:54.087 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 23:41:54.090 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 23:41:54.091 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 23:41:54.159 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 23:41:54.248 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2023-06-22 23:41:54.340 [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2023-06-22 23:41:54.370 [main] WARN  com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2023-06-22 23:41:54.370 [main] INFO  com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2023-06-22 23:41:54.441 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2023-06-22 23:41:54.664 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3c27f72, org.springframework.security.web.context.SecurityContextPersistenceFilter@5a6f6cac, org.springframework.security.web.header.HeaderWriterFilter@59a94d0f, org.springframework.web.filter.CorsFilter@5cbe95b1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@344f9467, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18d610e1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@28fa541, org.springframework.security.web.session.SessionManagementFilter@2b1a901d, org.springframework.security.web.access.ExceptionTranslationFilter@769b0752, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@645ba24a]
2023-06-22 23:41:54.742 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 23:41:54.791 [main] INFO  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: ee2fb7a2-6180-4a2f-9f06-d1a888772667

2023-06-22 23:41:54.855 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5690c2a8, org.springframework.security.web.context.SecurityContextPersistenceFilter@11ee671f, org.springframework.security.web.header.HeaderWriterFilter@69419d59, org.springframework.web.filter.CorsFilter@17e2835c, edu.swu.cs.filter.JwtAuthenticationTokenFilter@70c491b8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@21ce2e4d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5e278e25, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4d2bc56a, org.springframework.security.web.session.SessionManagementFilter@744fb110, org.springframework.security.web.access.ExceptionTranslationFilter@652a1a17, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1a85e86e]
2023-06-22 23:41:54.885 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 23:41:54.900 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 23:41:54.932 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 23:41:54.950 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Initializing ExecutorService
2023-06-22 23:41:55.039 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2023-06-22 23:41:55.055 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path '/security-auth'
2023-06-22 23:41:55.064 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, security-auth 192.168.1.25:8085 register finished
2023-06-22 23:41:55.066 [main] INFO  edu.swu.cs.securityApplication - Started securityApplication in 5.196 seconds (JVM running for 6.01)
2023-06-22 23:41:55.159 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2023-06-22 23:41:55.181 [main] INFO  s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2023-06-22 23:41:55.245 [main] INFO  s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2023-06-22 23:41:55.376 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Attempting to connect to: [127.0.0.1:5672]
2023-06-22 23:41:55.404 [main] INFO  o.s.a.rabbit.connection.CachingConnectionFactory - Created new connection: rabbitConnectionFactory#36f6e521:0/SimpleConnection@63243c8f [delegate=amqp://guest@127.0.0.1:5672/, localPort= 41652]
2023-06-22 23:41:55.433 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 23:41:56.438 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 23:41:58.442 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 23:42:02.447 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 23:42:07.450 [AMQP Connection 127.0.0.1:5672] ERROR o.s.a.rabbit.connection.CachingConnectionFactory - Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'order.delay.queue' in vhost '/': received '180000' but current is '60000', class-id=50, method-id=10)
2023-06-22 23:42:07.452 [main] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Broker not available; cannot force queue declarations during start: java.io.IOException
2023-06-22 23:42:07.484 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2023-06-22 23:42:07.496 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path '/service-order'
2023-06-22 23:42:07.507 [main] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - nacos registry, service-order 192.168.1.25:8081 register finished
2023-06-22 23:42:07.510 [main] INFO  edu.swu.cs.OrderApplication - Started OrderApplication in 20.208 seconds (JVM running for 21.051)
2023-06-22 23:42:07.876 [RMI TCP Connection(5)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-06-22 23:42:07.877 [RMI TCP Connection(4)-192.168.1.25] INFO  o.a.c.c.C.[Tomcat].[localhost].[/service-order] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-22 23:42:07.877 [RMI TCP Connection(4)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-06-22 23:42:07.887 [RMI TCP Connection(4)-192.168.1.25] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2023-06-22 23:42:08.011 [RMI TCP Connection(5)-192.168.1.25] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-06-22 23:42:08.146 [boundedElastic-1] INFO  io.lettuce.core.EpollProvider - Starting without optional epoll library
2023-06-22 23:42:08.147 [boundedElastic-1] INFO  io.lettuce.core.KqueueProvider - Starting without optional kqueue library
2023-06-22 23:42:43.395 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:42:43.396 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:42:43.396 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:42:43.396 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:42:43.396 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:42:43.397 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:42:43.398 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":2,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:42:43.537 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"124","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"2","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:42:43.537 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:42:45.007 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:42:45.007 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:42:45.007 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:42:45.007 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:42:45.007 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:42:45.007 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:42:45.007 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:42:45.040 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:42:45.041 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:42:46.093 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:42:46.093 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:42:46.093 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:42:46.093 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:42:46.093 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:42:46.093 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:42:46.093 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":2,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:42:46.116 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"124","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"2","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:42:46.116 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:42:47.051 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:42:47.051 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:42:47.051 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:42:47.051 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:42:47.052 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:42:47.052 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:42:47.052 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:42:47.080 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:42:47.080 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:42:47.945 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:42:47.945 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:42:47.945 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:42:47.945 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:42:47.945 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:42:47.945 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:42:47.946 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":2,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:42:47.957 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"124","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"2","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:42:47.957 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:42:48.792 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:42:48.792 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:42:48.792 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:42:48.792 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:42:48.792 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:42:48.792 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:42:48.792 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:42:48.814 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:42:48.814 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:42:53.911 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:42:53.911 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:42:53.911 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:42:53.911 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:42:53.911 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:42:53.911 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:42:53.911 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:42:53.933 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:42:53.934 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:42:56.672 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:42:56.672 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:42:56.672 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:42:56.672 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:42:56.672 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:42:56.672 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:42:56.672 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":2,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:42:56.681 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"124","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"125","realName":"asdasd","sex":"0","title":"普通医生","userName":"asdada"}],"pageNum":"2","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:42:56.681 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:42:57.509 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:42:57.509 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:42:57.509 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:42:57.509 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:42:57.509 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:42:57.509 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:42:57.509 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:42:57.528 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:42:57.528 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:44:40.637 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:44:40.637 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:44:40.637 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:44:40.637 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:44:40.637 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:44:40.637 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:44:40.637 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:44:40.660 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:44:40.660 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:44:46.279 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:44:46.279 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:44:46.279 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:44:46.279 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:44:46.279 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:44:46.279 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:44:46.279 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:44:46.298 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:44:46.298 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:47:44.093 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:47:44.093 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:47:44.093 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:47:44.093 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:47:44.093 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:47:44.093 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:47:44.093 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:47:44.111 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:47:44.112 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:47:44.147 [http-nio-8082-exec-5] WARN  o.s.w.s.m.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2023-06-22 23:48:19.317 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:48:19.318 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:19.318 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:48:19.318 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:48:19.318 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:48:19.318 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:19.318 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:48:19.356 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:48:19.356 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:48:20.776 [http-nio-8082-exec-9] WARN  o.s.w.s.m.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2023-06-22 23:48:38.983 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:48:38.983 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:38.983 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:48:38.983 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:48:38.983 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:48:38.983 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:38.983 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:48:39.005 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"120","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:48:39.005 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:48:41.089 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:48:41.089 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:41.089 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:48:41.089 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:48:41.089 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:48:41.089 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:41.090 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:48:41.105 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"122","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"124","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:48:41.105 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:48:43.407 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:48:43.407 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:43.418 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:48:43.418 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:48:43.418 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:48:43.418 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:43.418 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:48:43.451 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"124","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"125","realName":"asdasd","sex":"0","title":"普通医生","userName":"asdada"}],"pageNum":"1","pageSize":"10","pageTotal":2.0},"msg":"操作成功"}
2023-06-22 23:48:43.451 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:48:45.736 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:48:45.736 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:45.736 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:48:45.736 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:48:45.736 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:48:45.736 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:45.736 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:48:45.753 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"125","realName":"asdasd","sex":"0","title":"普通医生","userName":"asdada"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"126","realName":"sss","sex":"0","title":"普通医生","userName":"sas"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:48:45.753 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:48:47.457 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:48:47.457 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:47.457 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:48:47.457 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:48:47.457 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:48:47.458 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:47.458 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:48:47.470 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"123","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"126","realName":"sss","sex":"0","title":"普通医生","userName":"sas"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:48:47.470 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:48:49.033 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:48:49.033 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:49.033 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:48:49.033 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:48:49.033 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:48:49.033 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:49.033 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:48:49.050 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"126","realName":"sss","sex":"0","title":"普通医生","userName":"sas"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:48:49.051 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:48:51.575 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:48:51.576 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:51.576 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:48:51.576 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:48:51.576 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:48:51.576 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:51.576 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:48:51.606 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"119","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:48:51.606 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:48:53.069 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:48:53.069 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:53.069 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:48:53.069 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:48:53.069 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:48:53.069 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:53.069 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:48:53.084 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"121","realName":"dasda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:48:53.084 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:48:54.364 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:48:54.365 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:54.365 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:48:54.365 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:48:54.365 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:48:54.365 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:48:54.365 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:48:54.379 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:48:54.379 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:49:01.219 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:49:01.219 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:49:01.219 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:49:01.219 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:49:01.219 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:49:01.220 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:49:01.220 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:49:01.229 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:49:01.229 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:49:07.061 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:49:07.061 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:49:07.061 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:49:07.061 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:49:07.061 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:49:07.061 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:49:07.061 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:49:07.070 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:49:07.070 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:49:08.392 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:49:08.393 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:49:08.393 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:49:08.393 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:49:08.393 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:49:08.393 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:49:08.393 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:49:08.416 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"118","realName":"一直","sex":"0","title":"普通医生","userName":"yizhi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:49:08.416 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:49:10.711 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:49:10.711 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:49:10.712 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:49:10.712 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:49:10.712 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:49:10.712 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:49:10.712 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:49:10.720 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:49:10.720 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:49:15.940 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:49:15.940 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:49:15.940 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:49:15.940 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:49:15.940 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:49:15.940 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:49:15.940 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:49:15.951 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"127","realName":"asda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:49:15.951 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:49:21.800 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:49:21.800 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:49:21.800 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:49:21.800 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:49:21.800 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:49:21.800 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:49:21.800 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:49:21.808 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"127","realName":"asda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:49:21.808 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:49:34.399 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:49:34.399 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:49:34.399 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:49:34.399 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:49:34.399 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:49:34.399 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:49:34.399 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:49:34.407 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"127","realName":"asda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:49:34.408 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:49:35.529 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:49:35.529 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:49:35.529 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:49:35.529 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:49:35.529 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:49:35.529 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:49:35.529 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:49:35.549 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"127","realName":"asda","sex":"0","title":"普通医生","userName":"asda"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:49:35.549 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:50:17.506 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:50:17.507 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:50:17.507 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:50:17.507 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:50:17.507 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:50:17.507 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:50:17.507 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:50:17.515 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:50:17.515 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:50:42.547 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:50:42.547 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:50:42.547 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:50:42.547 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:50:42.548 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:50:42.548 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:50:42.548 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:50:42.555 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":11,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:50:42.555 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:50:47.728 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:50:47.728 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:50:47.728 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:50:47.728 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:50:47.728 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:50:47.728 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:50:47.728 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:50:47.746 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":12,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:50:47.746 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:50:53.556 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:50:53.556 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:50:53.556 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:50:53.556 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:50:53.556 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:50:53.556 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:50:53.557 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:50:53.567 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:50:53.567 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:50:54.992 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:50:54.992 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:50:54.992 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:50:54.992 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:50:54.992 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:50:54.992 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:50:54.992 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:50:54.999 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:50:54.999 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:51:16.012 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:51:16.012 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:51:16.012 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:51:16.012 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:51:16.012 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:51:16.013 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:51:16.013 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:51:16.030 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:51:16.030 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:51:20.590 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:51:20.590 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:51:20.590 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:51:20.590 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:51:20.590 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:51:20.590 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:51:20.590 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:51:20.609 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"128","realName":"aaa","sex":"0","title":"普通医生","userName":"aaa"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:51:20.610 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:51:25.303 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:51:25.304 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:51:25.304 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:51:25.304 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:51:25.304 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:51:25.304 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:51:25.304 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:51:25.323 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"128","realName":"aaa","sex":"0","title":"普通医生","userName":"aaa"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"129","realName":"bbb","sex":"0","title":"普通医生","userName":"bbb"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:51:25.324 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:51:27.862 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:51:27.862 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:51:27.862 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:51:27.862 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:51:27.862 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:51:27.862 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:51:27.862 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:51:27.881 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"},{"amount":0,"deptId":"22","deptName":"皮肤科名医门诊","id":"129","realName":"bbb","sex":"0","title":"普通医生","userName":"bbb"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:51:27.881 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:51:29.467 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:51:29.468 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:51:29.468 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:51:29.468 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:51:29.468 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:51:29.468 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:51:29.468 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:51:29.486 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:51:29.487 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:51:33.881 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:51:33.882 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:51:33.882 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:51:33.882 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:51:33.882 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:51:33.882 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:51:33.882 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:51:33.890 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:51:33.890 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:51:56.497 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:51:56.497 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:51:56.498 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:51:56.498 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:51:56.498 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:51:56.498 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:51:56.498 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:51:56.505 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:51:56.505 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:51:56.560 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:51:56.560 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:51:56.560 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:51:56.560 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:51:56.560 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:51:56.560 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:51:56.560 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:51:56.566 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:51:56.566 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:52:00.187 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:52:00.187 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:52:00.187 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:52:00.187 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:52:00.187 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:52:00.187 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:52:00.187 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"专家名医"}]
2023-06-22 23:52:00.193 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":16,"avatar":"/uploadImg/c3ffa6f7-bfc6-4d86-8f6b-d4d4a016fe36屏幕截图 2023-05-14 150923.png","deptId":"22","deptName":"皮肤科名医门诊","email":"iii@123.com","id":"84","introduce":"一眼","phonenumber":"111565648","realName":"丁真","sex":"0","title":"专家名医","userName":"dingzhen"},{"amount":12,"deptId":"39","deptName":"神经内科专家门诊","id":"85","realName":"杨永信","sex":"0","title":"专家名医","userName":"yangyongxin01"},{"amount":22,"deptId":"29","deptName":"眼科专家门诊","id":"103","realName":"陈宫","sex":"0","title":"专家名医","userName":"chengong"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:52:00.194 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:52:01.761 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:52:01.761 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:52:01.761 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:52:01.761 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:52:01.761 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:52:01.761 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:52:01.761 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:52:01.769 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":13,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:52:01.769 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:53:20.382 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:53:20.382 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:53:20.382 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:53:20.382 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:53:20.382 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:53:20.382 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:53:20.382 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:53:20.389 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":14,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:53:20.389 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:53:24.836 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:53:24.836 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:53:24.836 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:53:24.836 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:53:24.836 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:53:24.836 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:53:24.836 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:53:24.842 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":14,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:53:24.842 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:53:26.240 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:53:26.240 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:53:26.240 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:53:26.240 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:53:26.240 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:53:26.240 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:53:26.240 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:53:26.246 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":14,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:53:26.246 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:53:49.700 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:53:49.700 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:53:49.700 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:53:49.700 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:53:49.700 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:53:49.700 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:53:49.700 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:53:49.707 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":14,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:53:49.707 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:53:52.435 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:53:52.435 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:53:52.435 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:53:52.435 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:53:52.435 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:53:52.435 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:53:52.435 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:53:52.444 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":14,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:53:52.444 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:53:54.989 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:53:54.989 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:53:54.989 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:53:54.989 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:53:54.989 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:53:54.989 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:53:54.989 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:53:54.996 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":14,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:53:54.996 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:54:04.308 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:54:04.308 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:54:04.308 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:54:04.308 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:54:04.308 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:54:04.308 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:54:04.308 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:54:04.316 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":14,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:54:04.316 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:54:20.288 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:54:20.288 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:54:20.288 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:54:20.288 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:54:20.288 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:54:20.288 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:54:20.288 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"网","title":"普通医生"}]
2023-06-22 23:54:20.290 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 23:54:20.290 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:54:23.182 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:54:23.182 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:54:23.182 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:54:23.182 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:54:23.182 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:54:23.182 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:54:23.182 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"网","title":"专家名医"}]
2023-06-22 23:54:23.185 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 23:54:23.185 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:54:25.921 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:54:25.921 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:54:25.921 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:54:25.921 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:54:25.921 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:54:25.921 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:54:25.921 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"网","title":"普通医生"}]
2023-06-22 23:54:25.924 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 23:54:25.924 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:54:39.237 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:54:39.238 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:54:39.238 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:54:39.238 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:54:39.238 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:54:39.238 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:54:39.238 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"网","title":"普通医生"}]
2023-06-22 23:54:39.240 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 23:54:39.240 [http-nio-8082-exec-4] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:54:40.126 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:54:40.126 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:54:40.126 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:54:40.126 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:54:40.126 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:54:40.126 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:54:40.126 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"网","title":"普通医生"}]
2023-06-22 23:54:40.128 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 23:54:40.128 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:54:40.203 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:54:40.203 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:54:40.203 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:54:40.203 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:54:40.203 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:54:40.203 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:54:40.203 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"网","title":"普通医生"}]
2023-06-22 23:54:40.210 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 23:54:40.210 [http-nio-8082-exec-8] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:54:42.098 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:54:42.098 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:54:42.098 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:54:42.098 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:54:42.098 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:54:42.098 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:54:42.099 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:54:42.106 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":14,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:54:42.106 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:54:54.486 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:54:54.486 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:54:54.486 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:54:54.486 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:54:54.486 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:54:54.487 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:54:54.487 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"网","title":"普通医生"}]
2023-06-22 23:54:54.489 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 23:54:54.489 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:55:39.342 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:55:39.342 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:55:39.342 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:55:39.342 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:55:39.342 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:55:39.342 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:55:39.342 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"陈","title":"专家名医"}]
2023-06-22 23:55:39.347 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 23:55:39.347 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:56:39.872 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:56:39.872 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:56:39.872 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:56:39.872 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:56:39.872 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:56:39.872 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:56:39.872 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:56:39.887 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":14,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:56:39.887 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:56:44.201 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:56:44.201 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:56:44.201 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:56:44.201 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:56:44.201 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:56:44.201 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:56:44.201 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"陈","title":"普通医生"}]
2023-06-22 23:56:44.203 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 23:56:44.203 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:57:53.285 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:57:53.285 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:57:53.286 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:57:53.286 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:57:53.286 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:57:53.286 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:57:53.286 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:57:53.301 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":14,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:57:53.301 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:58:01.573 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:58:01.573 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:58:01.573 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:58:01.573 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:58:01.573 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:58:01.573 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:58:01.573 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"王","title":"普通医生"}]
2023-06-22 23:58:01.575 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 23:58:01.575 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:59:24.563 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:59:24.563 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:59:24.563 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:59:24.563 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:59:24.563 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:59:24.563 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:59:24.564 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:59:24.572 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":14,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:59:24.572 [http-nio-8082-exec-9] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:59:28.723 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:59:28.723 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:59:28.723 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:59:28.723 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:59:28.723 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:59:28.723 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:59:28.724 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"网","title":"普通医生"}]
2023-06-22 23:59:28.728 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 23:59:28.729 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:59:33.739 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:59:33.740 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:59:33.740 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:59:33.740 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:59:33.740 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:59:33.740 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:59:33.740 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"网","title":"专家名医"}]
2023-06-22 23:59:33.746 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-22 23:59:33.746 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-22 23:59:40.599 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-22 23:59:40.599 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-22 23:59:40.599 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-22 23:59:40.599 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-22 23:59:40.599 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-22 23:59:40.599 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-22 23:59:40.599 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-22 23:59:40.605 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":14,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-22 23:59:40.605 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-23 00:02:12.742 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-23 00:02:12.742 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-23 00:02:12.742 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-23 00:02:12.742 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-23 00:02:12.742 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-23 00:02:12.742 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-23 00:02:12.742 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-23 00:02:12.749 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":14,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-23 00:02:12.749 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-23 00:02:16.565 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-23 00:02:16.565 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-23 00:02:16.565 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-23 00:02:16.565 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-23 00:02:16.565 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-23 00:02:16.565 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-23 00:02:16.565 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-23 00:02:16.583 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":14,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-23 00:02:16.583 [http-nio-8082-exec-5] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-23 00:02:27.265 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-23 00:02:27.265 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-23 00:02:27.265 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-23 00:02:27.265 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-23 00:02:27.265 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-23 00:02:27.265 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-23 00:02:27.265 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-23 00:02:27.271 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":14,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-23 00:02:27.271 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-23 00:02:30.990 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-23 00:02:30.991 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-23 00:02:30.991 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-23 00:02:30.991 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-23 00:02:30.991 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-23 00:02:30.991 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-23 00:02:30.991 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-23 00:02:31.000 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":14,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-23 00:02:31.000 [http-nio-8082-exec-1] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-23 00:03:39.420 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-23 00:03:39.420 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-23 00:03:39.420 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-23 00:03:39.420 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-23 00:03:39.420 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-23 00:03:39.420 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-23 00:03:39.420 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"网","title":"普通医生"}]
2023-06-23 00:03:39.422 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-23 00:03:39.422 [http-nio-8082-exec-3] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-23 00:03:43.842 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-23 00:03:43.842 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-23 00:03:43.842 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-23 00:03:43.842 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-23 00:03:43.842 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-23 00:03:43.842 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-23 00:03:43.842 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"deptId":"22","pageNum":1,"pageSize":10,"realName":"网","title":"普通医生"}]
2023-06-23 00:03:43.846 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[],"pageNum":"1","pageSize":"10","pageTotal":0.0},"msg":"操作成功"}
2023-06-23 00:03:43.846 [http-nio-8082-exec-10] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-23 00:03:53.426 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-23 00:03:53.426 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-23 00:03:53.426 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-23 00:03:53.426 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-23 00:03:53.426 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-23 00:03:53.426 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-23 00:03:53.426 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"网易","title":"普通医生"}]
2023-06-23 00:03:53.430 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":14,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-23 00:03:53.430 [http-nio-8082-exec-2] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-23 00:04:12.994 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-23 00:04:12.994 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-23 00:04:12.994 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-23 00:04:12.994 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-23 00:04:12.994 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-23 00:04:12.994 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-23 00:04:12.994 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"","title":"普通医生"}]
2023-06-23 00:04:13.010 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":15,"deptId":"37","deptName":"口腔内科门诊","id":"101","realName":"莫莱","sex":"1","title":"普通医生","userName":"molai01"},{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"},{"amount":15,"deptId":"52","deptName":"小儿科专家门诊","id":"105","realName":"程建","sex":"0","title":"普通医生","userName":"chengjian01"},{"amount":14,"avatar":"/uploadImg/6412ebeb-9158-48ab-8173-a9077c7df1273ef2ce638535e5ddb9d1ca1333c6a7efcf1b622a.jpg","deptId":"22","deptName":"皮肤科名医门诊","email":"asda","id":"115","introduce":"asdad","phonenumber":"asdad","realName":"网易","sex":"0","title":"普通医生","userName":"wangyi01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-23 00:04:13.010 [http-nio-8082-exec-6] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-23 00:04:19.648 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - =======Start=======
2023-06-23 00:04:19.648 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - URL            : /service-user/doctor/getDoctorPageInfo
2023-06-23 00:04:19.648 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - BusinessName   : 分页获取医生的个人信息
2023-06-23 00:04:19.648 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - HTTP Method    : POST
2023-06-23 00:04:19.648 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Class Method   : edu.swu.cs.controller.DoctorController.getDoctor
2023-06-23 00:04:19.648 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - IP             : http://192.168.1.25:8082/service-user/doctor/getDoctorPageInfo
2023-06-23 00:04:19.648 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Request Args   : [{"pageNum":1,"pageSize":10,"realName":"王春","title":"普通医生"}]
2023-06-23 00:04:19.657 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - Response       : {"code":200,"data":{"doctorVOList":[{"amount":14,"deptId":"35","deptName":"肿瘤科普通门诊","id":"104","realName":"王春","sex":"0","title":"普通医生","userName":"wangchun01"}],"pageNum":"1","pageSize":"10","pageTotal":1.0},"msg":"操作成功"}
2023-06-23 00:04:19.658 [http-nio-8082-exec-7] INFO  edu.swu.cs.aspect.logAspect - --------end-------

2023-06-23 21:41:43.033 [SpringContextShutdownHook] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Successfully waited for consumers to finish.
2023-06-23 21:41:43.033 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService
2023-06-23 21:41:43.038 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-23 21:41:43.041 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-23 21:41:43.044 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-23 21:41:43.046 [SpringContextShutdownHook] INFO  o.s.a.r.listener.DirectMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-23 21:41:43.059 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-23 21:41:43.062 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-23 21:41:43.063 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2023-06-23 21:41:43.065 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-23 21:41:43.119 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Waiting for workers to finish.
2023-06-23 21:41:43.149 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-23 21:41:43.151 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-23 21:41:43.153 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-23 21:41:43.177 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-23 21:41:43.178 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-23 21:41:43.182 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-23 21:41:43.244 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-23 21:41:43.250 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-23 21:41:43.271 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-23 21:41:43.276 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-23 21:41:43.318 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-23 21:41:43.323 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-06-23 21:41:43.914 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Successfully waited for workers to finish.
2023-06-23 21:41:43.915 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Waiting for workers to finish.
2023-06-23 21:41:43.917 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Successfully waited for workers to finish.
2023-06-23 21:41:43.921 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registering from Nacos Server now...
2023-06-23 21:41:43.923 [SpringContextShutdownHook] INFO  o.s.c.alibaba.nacos.registry.NacosServiceRegistry - De-registration finished.
2023-06-23 21:41:43.925 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2023-06-23 21:41:43.984 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-23 21:41:43.984 [SpringContextShutdownHook] INFO  o.s.a.r.listener.SimpleMessageListenerContainer - Shutdown ignored - container is not active already
2023-06-23 21:41:44.114 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-06-23 21:41:44.119 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
